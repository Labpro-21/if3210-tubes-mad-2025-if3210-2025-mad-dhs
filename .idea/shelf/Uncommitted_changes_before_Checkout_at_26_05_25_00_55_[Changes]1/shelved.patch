Index: app/src/main/java/com/tubes/purry/ui/profile/ProfileViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tubes.purry.ui.profile\r\n\r\nimport android.util.Log\r\nimport androidx.lifecycle.LiveData\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.tubes.purry.data.model.ProfileData\r\nimport com.tubes.purry.data.remote.ApiClient\r\nimport com.tubes.purry.data.repository.AuthRepository\r\nimport com.tubes.purry.data.repository.ProfileRepository\r\nimport com.tubes.purry.data.repository.SongRepository\r\nimport kotlinx.coroutines.launch\r\nimport java.io.IOException\r\n\r\nclass ProfileViewModel (\r\n    private val songRepository: SongRepository,\r\n    authRepository: AuthRepository\r\n): ViewModel() {\r\n    private val repository = ProfileRepository(ApiClient.apiService, authRepository)\r\n\r\n    private val _profileData = MutableLiveData<ProfileData>()\r\n    val profileData: LiveData<ProfileData> = _profileData\r\n\r\n    private val _songStats = MutableLiveData<SongStats>()\r\n    val songStats: LiveData<SongStats> = _songStats\r\n\r\n    private val _errorMessage = MutableLiveData<String>()\r\n    val errorMessage: LiveData<String> = _errorMessage\r\n\r\n    private val _loading = MutableLiveData<Boolean>()\r\n    val loading: LiveData<Boolean> = _loading\r\n\r\n    fun setProfileData(profile: ProfileData) {\r\n        _profileData.value = profile\r\n        fetchSongStats(profile.id)\r\n    }\r\n\r\n    fun getProfileData() {\r\n        _loading.value = true\r\n        viewModelScope.launch {\r\n            try {\r\n                val response = repository.getProfile()\r\n                if (response.isSuccessful && response.body() != null) {\r\n                    val profile = response.body()!!\r\n                    Log.d(\"ProfileViewModel\", \"Profile data retrieved successfully\")\r\n                    _profileData.value = profile\r\n                    fetchSongStats(profile.id)\r\n                } else {\r\n                    Log.e(\"ProfileViewModel\", \"Failed to fetch profile: ${response.code()} - ${response.message()}\")\r\n                    _errorMessage.value = \"Failed to fetch profile: ${response.message()}\"\r\n                }\r\n            } catch (e: IOException) {\r\n                Log.e(\"ProfileViewModel\", \"Network error: ${e.message}\", e)\r\n                _errorMessage.value = \"Network error: ${e.message}\"\r\n            } catch (e: Exception) {\r\n                Log.e(\"ProfileViewModel\", \"Error fetching profile: ${e.message}\", e)\r\n                _errorMessage.value = \"Error: ${e.message}\"\r\n            } finally {\r\n                _loading.value = false\r\n            }\r\n        }\r\n    }\r\n\r\n    fun fetchSongStats(userId: Int) {\r\n        viewModelScope.launch {\r\n            try {\r\n                songRepository.getTotalSongCount().collect { totalCount ->\r\n                    songRepository.getLikedCountByUser(userId).collect { likedCount ->\r\n                        songRepository.getListenedSongsCount().collect { listenedCount ->\r\n                            _songStats.value = SongStats(\r\n                                totalCount = totalCount,\r\n                                likedCount = likedCount,\r\n                                listenedCount = listenedCount\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            } catch (e: Exception) {\r\n                _errorMessage.value = \"Error fetching song stats: ${e.message}\"\r\n            }\r\n        }\r\n    }\r\n\r\n    data class SongStats(\r\n        val totalCount: Int = 0,\r\n        val likedCount: Int = 0,\r\n        val listenedCount: Int = 0\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/profile/ProfileViewModel.kt b/app/src/main/java/com/tubes/purry/ui/profile/ProfileViewModel.kt
--- a/app/src/main/java/com/tubes/purry/ui/profile/ProfileViewModel.kt	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/java/com/tubes/purry/ui/profile/ProfileViewModel.kt	(date 1748195617130)
@@ -1,6 +1,8 @@
 package com.tubes.purry.ui.profile
 
+import android.app.Application
 import android.util.Log
+import androidx.lifecycle.AndroidViewModel
 import androidx.lifecycle.LiveData
 import androidx.lifecycle.MutableLiveData
 import androidx.lifecycle.ViewModel
@@ -12,13 +14,26 @@
 import com.tubes.purry.data.repository.SongRepository
 import kotlinx.coroutines.launch
 import java.io.IOException
+import androidx.lifecycle.liveData
+import com.tubes.purry.data.local.AppDatabase
+import kotlinx.coroutines.delay
+import com.tubes.purry.data.repository.AnalyticsRepository
+import com.tubes.purry.data.model.MonthlyAnalytics
+import java.text.SimpleDateFormat
+import java.util.*
 
-class ProfileViewModel (
+class ProfileViewModel(
+    application: Application,
     private val songRepository: SongRepository,
     authRepository: AuthRepository
-): ViewModel() {
+) : AndroidViewModel(application) {
     private val repository = ProfileRepository(ApiClient.apiService, authRepository)
 
+    private val analyticsRepository by lazy {
+        val database = AppDatabase.getDatabase(getApplication())
+        AnalyticsRepository(database.analyticsDao(), database.songDao())
+    }
+
     private val _profileData = MutableLiveData<ProfileData>()
     val profileData: LiveData<ProfileData> = _profileData
 
@@ -36,6 +51,38 @@
         fetchSongStats(profile.id)
     }
 
+    fun getCurrentMonthAnalytics(userId: Int): LiveData<MonthlyAnalytics> {
+        val currentMonth = SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+
+        return liveData {
+            while (true) {
+                try {
+                    val analytics = analyticsRepository.getMonthlyAnalytics(userId, currentMonth)
+                    emit(analytics)
+                    delay(30000) // Update every 30 seconds
+                } catch (e: Exception) {
+                    Log.e("ProfileViewModel", "Failed to get analytics: ${e.message}")
+                    // Emit empty analytics on error
+                    emit(MonthlyAnalytics(
+                        month = currentMonth,
+                        totalMinutesListened = 0L,
+                        dailyAverage = 0,
+                        topArtist = null,
+                        topArtistPlayCount = 0,
+                        topArtistCover = null,
+                        topSong = null,
+                        topSongArtist = null,
+                        topSongPlayCount = 0,
+                        topSongCover = null,
+                        totalSongsPlayed = 0,
+                        totalArtistsListened = 0
+                    ))
+                    delay(30000)
+                }
+            }
+        }
+    }
+
     fun getProfileData() {
         _loading.value = true
         viewModelScope.launch {
Index: app/src/main/java/com/tubes/purry/ui/library/SongListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tubes.purry.ui.library\r\n\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.core.net.toUri\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy\r\nimport com.tubes.purry.R\r\nimport com.tubes.purry.databinding.ItemSongListBinding\r\nimport com.tubes.purry.data.model.Song\r\nimport com.tubes.purry.utils.SessionManager\r\n\r\nclass SongListAdapter(\r\n    private val onClick: (Song) -> Unit,\r\n    private val onEdit: (Song) -> Unit,\r\n    private val onDelete: (Song) -> Unit\r\n) : RecyclerView.Adapter<SongListAdapter.SongViewHolder>() {\r\n\r\n    private var songs = listOf<Song>()\r\n\r\n    fun submitList(list: List<Song>) {\r\n        songs = list\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    fun getSongAt(position: Int): Song {\r\n        return songs[position]\r\n    }\r\n\r\n\r\n    inner class SongViewHolder(private val binding: ItemSongListBinding) :\r\n        RecyclerView.ViewHolder(binding.root) {\r\n\r\n        fun bind(song: Song) {\r\n            val context = binding.root.context\r\n            val sessionManager = SessionManager(context)\r\n            val currentUserId = sessionManager.getUserId()\r\n            binding.tvTitle.text = song.title\r\n            binding.tvArtist.text = song.artist\r\n\r\n            when {\r\n                song.coverResId != null -> {\r\n                    Glide.with(binding.root).load(song.coverResId).into(binding.imgCover)\r\n                }\r\n                !song.coverPath.isNullOrBlank() -> {\r\n                    Glide.with(binding.root).load(song.coverPath.toUri()).into(binding.imgCover)\r\n                }\r\n                else -> {\r\n                    binding.imgCover.setImageResource(R.drawable.album_default)\r\n                }\r\n            }\r\n\r\n            if (song.uploadedBy == currentUserId) {\r\n                binding.btnEdit.visibility = View.VISIBLE\r\n                binding.btnDelete.visibility = View.VISIBLE\r\n            } else {\r\n                binding.btnEdit.visibility = View.GONE\r\n                binding.btnDelete.visibility = View.GONE\r\n            }\r\n\r\n            binding.root.setOnClickListener { onClick(song) }\r\n            binding.btnEdit.setOnClickListener { onEdit(song) }\r\n            binding.btnDelete.setOnClickListener { onDelete(song) }\r\n        }\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SongViewHolder {\r\n        val binding = ItemSongListBinding.inflate(\r\n            LayoutInflater.from(parent.context), parent, false\r\n        )\r\n        return SongViewHolder(binding)\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: SongViewHolder, position: Int) {\r\n        holder.bind(songs[position])\r\n    }\r\n\r\n    override fun getItemCount(): Int = songs.size\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/library/SongListAdapter.kt b/app/src/main/java/com/tubes/purry/ui/library/SongListAdapter.kt
--- a/app/src/main/java/com/tubes/purry/ui/library/SongListAdapter.kt	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/java/com/tubes/purry/ui/library/SongListAdapter.kt	(date 1748195617119)
@@ -15,7 +15,8 @@
 class SongListAdapter(
     private val onClick: (Song) -> Unit,
     private val onEdit: (Song) -> Unit,
-    private val onDelete: (Song) -> Unit
+    private val onDelete: (Song) -> Unit,
+    private val showEditDelete: Boolean = true // Add this parameter with default value true
 ) : RecyclerView.Adapter<SongListAdapter.SongViewHolder>() {
 
     private var songs = listOf<Song>()
@@ -29,7 +30,6 @@
         return songs[position]
     }
 
-
     inner class SongViewHolder(private val binding: ItemSongListBinding) :
         RecyclerView.ViewHolder(binding.root) {
 
@@ -37,6 +37,7 @@
             val context = binding.root.context
             val sessionManager = SessionManager(context)
             val currentUserId = sessionManager.getUserId()
+
             binding.tvTitle.text = song.title
             binding.tvArtist.text = song.artist
 
@@ -52,17 +53,18 @@
                 }
             }
 
-            if (song.uploadedBy == currentUserId) {
+            // Show edit/delete buttons only if showEditDelete is true AND user uploaded the song
+            if (showEditDelete && song.uploadedBy == currentUserId) {
                 binding.btnEdit.visibility = View.VISIBLE
                 binding.btnDelete.visibility = View.VISIBLE
+                binding.btnEdit.setOnClickListener { onEdit(song) }
+                binding.btnDelete.setOnClickListener { onDelete(song) }
             } else {
                 binding.btnEdit.visibility = View.GONE
                 binding.btnDelete.visibility = View.GONE
             }
 
             binding.root.setOnClickListener { onClick(song) }
-            binding.btnEdit.setOnClickListener { onEdit(song) }
-            binding.btnDelete.setOnClickListener { onDelete(song) }
         }
     }
 
@@ -78,4 +80,4 @@
     }
 
     override fun getItemCount(): Int = songs.size
-}
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/library/SongViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tubes.purry.ui.library\r\n\r\nimport androidx.lifecycle.*\r\nimport com.tubes.purry.data.model.Song\r\nimport com.tubes.purry.data.repository.SongRepository\r\nimport kotlinx.coroutines.flow.collect\r\nimport kotlinx.coroutines.flow.map\r\nimport kotlinx.coroutines.launch\r\n\r\nclass SongViewModel(private val repository: SongRepository) : ViewModel() {\r\n\r\n    fun insertSong(song: Song) = viewModelScope.launch {\r\n        repository.insertSong(song)\r\n    }\r\n\r\n    fun updateSong(song: Song) = viewModelScope.launch {\r\n        repository.updateSong(song)\r\n    }\r\n\r\n    fun deleteSong(song: Song) = viewModelScope.launch {\r\n        repository.deleteSong(song)\r\n    }\r\n\r\n    val newSongs: LiveData<List<Song>> = repository.getNewSongs().asLiveData()\r\n\r\n    val recentlyPlayed: LiveData<List<Song>> = repository.getRecentlyPlayed().asLiveData()\r\n\r\n    fun markAsPlayed(song: Song) = viewModelScope.launch {\r\n        val updatedSong = song.copy(lastPlayedAt = System.currentTimeMillis())\r\n        repository.updateSong(updatedSong)\r\n    }\r\n\r\n    fun getLikedSongsByUser(userId: Int): LiveData<List<Song>> {\r\n        return repository.getLikedSongsByUser(userId).asLiveData()\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/library/SongViewModel.kt b/app/src/main/java/com/tubes/purry/ui/library/SongViewModel.kt
--- a/app/src/main/java/com/tubes/purry/ui/library/SongViewModel.kt	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/java/com/tubes/purry/ui/library/SongViewModel.kt	(date 1748195617120)
@@ -20,17 +20,20 @@
     fun deleteSong(song: Song) = viewModelScope.launch {
         repository.deleteSong(song)
     }
+    val allSongs: LiveData<List<Song>> = repository.getAllSongs().asLiveData()
 
     val newSongs: LiveData<List<Song>> = repository.getNewSongs().asLiveData()
 
     val recentlyPlayed: LiveData<List<Song>> = repository.getRecentlyPlayed().asLiveData()
 
+    val librarySongs: LiveData<List<Song>> = repository.getLibrarySongs().asLiveData()
+
     fun markAsPlayed(song: Song) = viewModelScope.launch {
         val updatedSong = song.copy(lastPlayedAt = System.currentTimeMillis())
         repository.updateSong(updatedSong)
     }
 
     fun getLikedSongsByUser(userId: Int): LiveData<List<Song>> {
-        return repository.getLikedSongsByUser(userId).asLiveData()
+        return repository.getLikedSongsByUser(userId)
     }
 }
Index: app/src/main/java/com/tubes/purry/ui/library/LibraryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tubes.purry.ui.library\r\n\r\nimport android.app.AlertDialog\r\nimport android.graphics.Canvas\r\nimport android.graphics.Paint\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.FrameLayout\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.recyclerview.widget.ItemTouchHelper\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.tubes.purry.R\r\nimport com.tubes.purry.data.model.Song\r\nimport com.tubes.purry.databinding.FragmentLibraryBinding\r\nimport com.tubes.purry.ui.player.MiniPlayerFragment\r\nimport com.tubes.purry.ui.player.NowPlayingViewModel\r\nimport com.tubes.purry.utils.SessionManager\r\nimport androidx.core.graphics.toColorInt\r\n\r\nclass LibraryFragment : Fragment() {\r\n\r\n    private var _binding: FragmentLibraryBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    private lateinit var songListAdapter: SongListAdapter\r\n    private val viewModel: SongViewModel by viewModels {\r\n        SongViewModelFactory(requireContext())\r\n    }\r\n    private lateinit var nowPlayingViewModel: NowPlayingViewModel\r\n    private lateinit var sessionManager: SessionManager\r\n//    private var currentUserId: Int? = null\r\n    private var allSongs: List<Song> = emptyList()\r\n    private var likedSongs: List<Song> = emptyList()\r\n\r\n    private var isShowingLikedOnly = false\r\n    private var currentSearchQuery = \"\"\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View {\r\n        _binding = FragmentLibraryBinding.inflate(inflater, container, false)\r\n        return binding.root\r\n    }\r\n\r\n    private fun setupRecyclerView() {\r\n        songListAdapter = SongListAdapter(\r\n            onClick = { song -> onSongClicked(song) },\r\n            onEdit = { song -> onEditSong(song) },\r\n            onDelete = { song -> onDeleteSong(song) }\r\n        )\r\n\r\n        binding.rvLibrarySongs.apply {\r\n            adapter = songListAdapter\r\n            layoutManager = LinearLayoutManager(requireContext())\r\n        }\r\n    }\r\n\r\n    private fun observeSongs() {\r\n        viewModel.newSongs.observe(viewLifecycleOwner) { songs ->\r\n            allSongs = songs\r\n            applyFilters()\r\n        }\r\n    }\r\n\r\n    private fun observeLikedSongs(userId: Int) {\r\n        viewModel.getLikedSongsByUser(userId).observe(viewLifecycleOwner) { liked ->\r\n            likedSongs = liked\r\n            applyFilters()\r\n        }\r\n    }\r\n\r\n\r\n    private fun setupSearchBar() {\r\n        binding.searchBarLibrary.addTextChangedListener(object : TextWatcher {\r\n            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {\r\n                // Not needed\r\n            }\r\n\r\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\r\n                currentSearchQuery = s.toString()\r\n                applyFilters()\r\n            }\r\n\r\n            override fun afterTextChanged(s: Editable?) {}\r\n        })\r\n\r\n        // Clear search button\r\n        binding.btnClearSearch.setOnClickListener {\r\n            binding.searchBarLibrary.text?.clear()\r\n            binding.btnClearSearch.visibility = View.GONE\r\n        }\r\n\r\n        // Only show clear button when search has text\r\n        binding.searchBarLibrary.setOnFocusChangeListener { _, hasFocus ->\r\n            if (hasFocus && binding.searchBarLibrary.text?.isNotEmpty() == true) {\r\n                binding.btnClearSearch.visibility = View.VISIBLE\r\n            } else if (!hasFocus && binding.searchBarLibrary.text?.isEmpty() == true) {\r\n                binding.btnClearSearch.visibility = View.GONE\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setupFilterButtons() {\r\n        // All songs button\r\n        binding.btnAll.setOnClickListener {\r\n            isShowingLikedOnly = false\r\n            updateButtonAppearance()\r\n            applyFilters()\r\n        }\r\n\r\n        // liked songs button\r\n        binding.btnLiked.setOnClickListener {\r\n            isShowingLikedOnly = true\r\n            updateButtonAppearance()\r\n            applyFilters()\r\n        }\r\n\r\n        updateButtonAppearance()\r\n    }\r\n\r\n    private fun updateButtonAppearance() {\r\n        // Update the background color of the buttons based on selected state\r\n        if (isShowingLikedOnly) {\r\n            binding.btnAll.backgroundTintList = requireContext().getColorStateList(R.color.dark_gray)\r\n            binding.btnLiked.backgroundTintList = requireContext().getColorStateList(R.color.green)\r\n        } else {\r\n            binding.btnAll.backgroundTintList = requireContext().getColorStateList(R.color.green)\r\n            binding.btnLiked.backgroundTintList = requireContext().getColorStateList(R.color.dark_gray)\r\n        }\r\n    }\r\n\r\n    private fun applyFilters() {\r\n        val searchText = currentSearchQuery.trim().lowercase()\r\n\r\n        val baseList = if (isShowingLikedOnly) likedSongs else allSongs\r\n        var filteredList = baseList\r\n\r\n        // apply search filter if text exists\r\n        if (searchText.isNotEmpty()) {\r\n            filteredList = filteredList.filter { song ->\r\n                song.title.lowercase().contains(searchText) ||\r\n                        song.artist.lowercase().contains(searchText)\r\n            }\r\n\r\n            binding.btnClearSearch.visibility = View.VISIBLE\r\n        } else {\r\n            binding.btnClearSearch.visibility = View.GONE\r\n        }\r\n\r\n        // Update the adapter and empty state\r\n        songListAdapter.submitList(filteredList)\r\n        updateEmptyState(filteredList)\r\n    }\r\n\r\n    private fun updateEmptyState(songs: List<Song>) {\r\n        if (songs.isEmpty()) {\r\n            binding.emptyLibraryState.visibility = View.VISIBLE\r\n\r\n            // Different message depending on current state\r\n            when {\r\n                currentSearchQuery.isNotEmpty() -> {\r\n                    binding.textEmptyLibrary.text = getString(R.string.no_search_results)\r\n                }\r\n                isShowingLikedOnly -> {\r\n                    binding.textEmptyLibrary.text = getString(R.string.no_liked_songs)\r\n                }\r\n                else -> {\r\n                    binding.textEmptyLibrary.text = getString(R.string.empty_library)\r\n                }\r\n            }\r\n        } else {\r\n            binding.emptyLibraryState.visibility = View.GONE\r\n        }\r\n    }\r\n\r\n    private fun onSongClicked(song: Song) {\r\n        nowPlayingViewModel.setQueueFromClickedSong(song, allSongs, requireContext())\r\n        nowPlayingViewModel.playSong(song, requireContext())\r\n        viewModel.markAsPlayed(song)\r\n\r\n        val fragmentManager = requireActivity().supportFragmentManager\r\n        val existingFragment = fragmentManager.findFragmentById(R.id.miniPlayerContainer)\r\n\r\n        if (existingFragment == null) {\r\n            fragmentManager.beginTransaction()\r\n                .replace(R.id.miniPlayerContainer, MiniPlayerFragment())\r\n                .commit()\r\n        }\r\n\r\n        val container = requireActivity().findViewById<FrameLayout>(R.id.miniPlayerContainer)\r\n        if (container.visibility != View.VISIBLE) {\r\n            container.alpha = 0f\r\n            container.visibility = View.VISIBLE\r\n            container.animate().alpha(1f).setDuration(250).start()\r\n        }\r\n    }\r\n\r\n    private fun showAddSongBottomSheet() {\r\n        val addSongBottomSheet = AddSongBottomSheetFragment()\r\n        addSongBottomSheet.show(childFragmentManager, \"AddSongBottomSheet\")\r\n    }\r\n\r\n    private fun onEditSong(song: Song) {\r\n        val editSongBottomSheet = EditSongBottomSheetFragment(song)\r\n        editSongBottomSheet.show(childFragmentManager, \"AddSongBottomSheet\")\r\n    }\r\n\r\n    private fun onDeleteSong(song: Song) {\r\n        AlertDialog.Builder(requireContext())\r\n            .setTitle(\"Delete Song\")\r\n            .setMessage(\"Are you sure you want to delete \\\"${song.title}\\\"?\")\r\n            .setPositiveButton(\"Yes\") { _, _ ->\r\n                viewModel.deleteSong(song)\r\n                nowPlayingViewModel.removeFromQueue(song.id, requireContext())\r\n            }\r\n            .setNegativeButton(\"No\", null)\r\n            .show()\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        nowPlayingViewModel = ViewModelProvider(requireActivity())[NowPlayingViewModel::class.java]\r\n        sessionManager = SessionManager(requireContext())\r\n\r\n        setupRecyclerView()\r\n        setupSearchBar()\r\n        setupFilterButtons()\r\n        observeSongs()\r\n\r\n        val userId = sessionManager.getUserId()\r\n        if (userId != null) {\r\n            observeLikedSongs(userId)\r\n        }\r\n\r\n        enableSwipeToAddToQueue(binding.rvLibrarySongs, songListAdapter, nowPlayingViewModel)\r\n\r\n        binding.btnAddSong.setOnClickListener {\r\n            showAddSongBottomSheet()\r\n        }\r\n    }\r\n\r\n    private fun enableSwipeToAddToQueue(\r\n        recyclerView: RecyclerView,\r\n        adapter: SongListAdapter,\r\n        nowPlayingViewModel: NowPlayingViewModel\r\n    ) {\r\n        val paint = Paint().apply { color = \"#4CAF50\".toColorInt() }\r\n\r\n        val itemTouchHelper = ItemTouchHelper(object : ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT) {\r\n            override fun onMove(\r\n                recyclerView: RecyclerView,\r\n                viewHolder: RecyclerView.ViewHolder,\r\n                target: RecyclerView.ViewHolder\r\n            ) = false\r\n\r\n            override fun onSwiped(viewHolder: RecyclerView.ViewHolder, direction: Int) {\r\n                val position = viewHolder.adapterPosition\r\n                val song = adapter.getSongAt(position)\r\n                nowPlayingViewModel.addToQueue(song, requireContext())\r\n                adapter.notifyItemChanged(position)\r\n            }\r\n\r\n            override fun onChildDraw(\r\n                c: Canvas,\r\n                recyclerView: RecyclerView,\r\n                viewHolder: RecyclerView.ViewHolder,\r\n                dX: Float,\r\n                dY: Float,\r\n                actionState: Int,\r\n                isCurrentlyActive: Boolean\r\n            ) {\r\n                if (actionState == ItemTouchHelper.ACTION_STATE_SWIPE) {\r\n                    val itemView: View = viewHolder.itemView\r\n                    c.drawRect(\r\n                        itemView.right.toFloat() + dX,\r\n                        itemView.top.toFloat(),\r\n                        itemView.right.toFloat(),\r\n                        itemView.bottom.toFloat(),\r\n                        paint\r\n                    )\r\n                }\r\n                super.onChildDraw(c, recyclerView, viewHolder, dX, dY, actionState, isCurrentlyActive)\r\n            }\r\n        })\r\n        itemTouchHelper.attachToRecyclerView(recyclerView)\r\n    }\r\n\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/library/LibraryFragment.kt b/app/src/main/java/com/tubes/purry/ui/library/LibraryFragment.kt
--- a/app/src/main/java/com/tubes/purry/ui/library/LibraryFragment.kt	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/java/com/tubes/purry/ui/library/LibraryFragment.kt	(date 1748195617118)
@@ -12,7 +12,6 @@
 import android.widget.FrameLayout
 import androidx.fragment.app.Fragment
 import androidx.fragment.app.viewModels
-import androidx.lifecycle.ViewModelProvider
 import androidx.recyclerview.widget.ItemTouchHelper
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
@@ -23,6 +22,7 @@
 import com.tubes.purry.ui.player.NowPlayingViewModel
 import com.tubes.purry.utils.SessionManager
 import androidx.core.graphics.toColorInt
+import com.tubes.purry.PurrytifyApplication
 
 class LibraryFragment : Fragment() {
 
@@ -35,7 +35,6 @@
     }
     private lateinit var nowPlayingViewModel: NowPlayingViewModel
     private lateinit var sessionManager: SessionManager
-//    private var currentUserId: Int? = null
     private var allSongs: List<Song> = emptyList()
     private var likedSongs: List<Song> = emptyList()
 
@@ -51,6 +50,35 @@
         return binding.root
     }
 
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        nowPlayingViewModel = (requireActivity().application as PurrytifyApplication).nowPlayingViewModel
+        sessionManager = SessionManager(requireContext())
+
+        setupRecyclerView()
+        setupSearchBar()
+        setupFilterButtons()
+        observeSongs()
+
+        val userId = sessionManager.getUserId()
+        if (userId != null) {
+            observeLikedSongs(userId)
+        }
+
+        nowPlayingViewModel.currSong.observe(viewLifecycleOwner) {
+            applyFilters()
+        }
+        nowPlayingViewModel.isLiked.observe(viewLifecycleOwner) {
+            applyFilters()
+        }
+
+        enableSwipeToAddToQueue(binding.rvLibrarySongs, songListAdapter, nowPlayingViewModel)
+
+        binding.btnAddSong.setOnClickListener {
+            showAddSongBottomSheet()
+        }
+    }
+
     private fun setupRecyclerView() {
         songListAdapter = SongListAdapter(
             onClick = { song -> onSongClicked(song) },
@@ -65,7 +93,7 @@
     }
 
     private fun observeSongs() {
-        viewModel.newSongs.observe(viewLifecycleOwner) { songs ->
+        viewModel.librarySongs.observe(viewLifecycleOwner) { songs ->
             allSongs = songs
             applyFilters()
         }
@@ -78,46 +106,34 @@
         }
     }
 
-
     private fun setupSearchBar() {
         binding.searchBarLibrary.addTextChangedListener(object : TextWatcher {
-            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {
-                // Not needed
-            }
-
+            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
             override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
                 currentSearchQuery = s.toString()
                 applyFilters()
             }
-
             override fun afterTextChanged(s: Editable?) {}
         })
 
-        // Clear search button
         binding.btnClearSearch.setOnClickListener {
             binding.searchBarLibrary.text?.clear()
             binding.btnClearSearch.visibility = View.GONE
         }
 
-        // Only show clear button when search has text
         binding.searchBarLibrary.setOnFocusChangeListener { _, hasFocus ->
-            if (hasFocus && binding.searchBarLibrary.text?.isNotEmpty() == true) {
-                binding.btnClearSearch.visibility = View.VISIBLE
-            } else if (!hasFocus && binding.searchBarLibrary.text?.isEmpty() == true) {
-                binding.btnClearSearch.visibility = View.GONE
-            }
+            binding.btnClearSearch.visibility =
+                if (hasFocus && binding.searchBarLibrary.text?.isNotEmpty() == true) View.VISIBLE else View.GONE
         }
     }
 
     private fun setupFilterButtons() {
-        // All songs button
         binding.btnAll.setOnClickListener {
             isShowingLikedOnly = false
             updateButtonAppearance()
             applyFilters()
         }
 
-        // liked songs button
         binding.btnLiked.setOnClickListener {
             isShowingLikedOnly = true
             updateButtonAppearance()
@@ -128,7 +144,6 @@
     }
 
     private fun updateButtonAppearance() {
-        // Update the background color of the buttons based on selected state
         if (isShowingLikedOnly) {
             binding.btnAll.backgroundTintList = requireContext().getColorStateList(R.color.dark_gray)
             binding.btnLiked.backgroundTintList = requireContext().getColorStateList(R.color.green)
@@ -140,45 +155,25 @@
 
     private fun applyFilters() {
         val searchText = currentSearchQuery.trim().lowercase()
-
         val baseList = if (isShowingLikedOnly) likedSongs else allSongs
-        var filteredList = baseList
-
-        // apply search filter if text exists
-        if (searchText.isNotEmpty()) {
-            filteredList = filteredList.filter { song ->
-                song.title.lowercase().contains(searchText) ||
-                        song.artist.lowercase().contains(searchText)
-            }
-
+        val filteredList = if (searchText.isNotEmpty()) {
             binding.btnClearSearch.visibility = View.VISIBLE
+            baseList.filter { it.title.lowercase().contains(searchText) || it.artist.lowercase().contains(searchText) }
         } else {
             binding.btnClearSearch.visibility = View.GONE
+            baseList
         }
-
-        // Update the adapter and empty state
         songListAdapter.submitList(filteredList)
         updateEmptyState(filteredList)
     }
 
     private fun updateEmptyState(songs: List<Song>) {
-        if (songs.isEmpty()) {
-            binding.emptyLibraryState.visibility = View.VISIBLE
-
-            // Different message depending on current state
-            when {
-                currentSearchQuery.isNotEmpty() -> {
-                    binding.textEmptyLibrary.text = getString(R.string.no_search_results)
-                }
-                isShowingLikedOnly -> {
-                    binding.textEmptyLibrary.text = getString(R.string.no_liked_songs)
-                }
-                else -> {
-                    binding.textEmptyLibrary.text = getString(R.string.empty_library)
-                }
-            }
-        } else {
-            binding.emptyLibraryState.visibility = View.GONE
+        binding.emptyLibraryState.visibility = if (songs.isEmpty()) View.VISIBLE else View.GONE
+        binding.textEmptyLibrary.text = when {
+            songs.isNotEmpty() -> ""
+            currentSearchQuery.isNotEmpty() -> getString(R.string.no_search_results)
+            isShowingLikedOnly -> getString(R.string.no_liked_songs)
+            else -> getString(R.string.empty_library)
         }
     }
 
@@ -186,22 +181,6 @@
         nowPlayingViewModel.setQueueFromClickedSong(song, allSongs, requireContext())
         nowPlayingViewModel.playSong(song, requireContext())
         viewModel.markAsPlayed(song)
-
-        val fragmentManager = requireActivity().supportFragmentManager
-        val existingFragment = fragmentManager.findFragmentById(R.id.miniPlayerContainer)
-
-        if (existingFragment == null) {
-            fragmentManager.beginTransaction()
-                .replace(R.id.miniPlayerContainer, MiniPlayerFragment())
-                .commit()
-        }
-
-        val container = requireActivity().findViewById<FrameLayout>(R.id.miniPlayerContainer)
-        if (container.visibility != View.VISIBLE) {
-            container.alpha = 0f
-            container.visibility = View.VISIBLE
-            container.animate().alpha(1f).setDuration(250).start()
-        }
     }
 
     private fun showAddSongBottomSheet() {
@@ -226,28 +205,6 @@
             .show()
     }
 
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-        nowPlayingViewModel = ViewModelProvider(requireActivity())[NowPlayingViewModel::class.java]
-        sessionManager = SessionManager(requireContext())
-
-        setupRecyclerView()
-        setupSearchBar()
-        setupFilterButtons()
-        observeSongs()
-
-        val userId = sessionManager.getUserId()
-        if (userId != null) {
-            observeLikedSongs(userId)
-        }
-
-        enableSwipeToAddToQueue(binding.rvLibrarySongs, songListAdapter, nowPlayingViewModel)
-
-        binding.btnAddSong.setOnClickListener {
-            showAddSongBottomSheet()
-        }
-    }
-
     private fun enableSwipeToAddToQueue(
         recyclerView: RecyclerView,
         adapter: SongListAdapter,
@@ -294,9 +251,8 @@
         itemTouchHelper.attachToRecyclerView(recyclerView)
     }
 
-
     override fun onDestroyView() {
         super.onDestroyView()
         _binding = null
     }
-}
\ No newline at end of file
+}
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/build
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/.gitignore b/app/.gitignore
--- a/app/.gitignore	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/.gitignore	(date 1748195617077)
@@ -1,1 +1,2 @@
-/build
\ No newline at end of file
+/build
+google-service.json
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tubes.purry.data.repository\r\n\r\nimport com.tubes.purry.data.local.LikedSongDao\r\nimport com.tubes.purry.data.local.SongDao\r\nimport com.tubes.purry.data.model.Song\r\nimport kotlinx.coroutines.flow.Flow //untuk stream data async\r\n\r\nclass SongRepository(private val songDao: SongDao, private val likedSongDao: LikedSongDao) {\r\n    suspend fun insertSong(song: Song) = songDao.insert(song)\r\n    suspend fun deleteSong(song: Song) = songDao.delete(song)\r\n    suspend fun updateSong(song: Song) = songDao.update(song)\r\n    fun getNewSongs(): Flow<List<Song>> = songDao.getNewSongs()\r\n    fun getRecentlyPlayed(): Flow<List<Song>> = songDao.getRecentlyPlayed()\r\n    fun getTotalSongCount(): Flow<Int> = songDao.getTotalSongCount()\r\n    fun getListenedSongsCount(): Flow<Int> = songDao.getListenedSongsCount()\r\n    fun getLikedSongsByUser(userId: Int): Flow<List<Song>> {\r\n        return likedSongDao.getLikedSongsByUser(userId)\r\n    }\r\n    fun getLikedCountByUser(userId: Int): Flow<Int> {\r\n        return likedSongDao.getLikedCountByUser(userId)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt b/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt
--- a/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt	(date 1748195617099)
@@ -1,5 +1,6 @@
 package com.tubes.purry.data.repository
 
+import androidx.lifecycle.LiveData
 import com.tubes.purry.data.local.LikedSongDao
 import com.tubes.purry.data.local.SongDao
 import com.tubes.purry.data.model.Song
@@ -13,10 +14,24 @@
     fun getRecentlyPlayed(): Flow<List<Song>> = songDao.getRecentlyPlayed()
     fun getTotalSongCount(): Flow<Int> = songDao.getTotalSongCount()
     fun getListenedSongsCount(): Flow<Int> = songDao.getListenedSongsCount()
-    fun getLikedSongsByUser(userId: Int): Flow<List<Song>> {
+    fun getLikedSongsByUser(userId: Int): LiveData<List<Song>> {
         return likedSongDao.getLikedSongsByUser(userId)
     }
     fun getLikedCountByUser(userId: Int): Flow<Int> {
         return likedSongDao.getLikedCountByUser(userId)
     }
+    fun getAllSongs(): Flow<List<Song>> {
+        return songDao.getAllSongs()
+    }
+    fun getLibrarySongs(): Flow<List<Song>> {
+        return songDao.getLibrarySongs()
+    }
+    suspend fun saveDownloadedSong(song: Song, filePath: String) {
+        val localVersion = song.copy(
+            isLocal = true,
+            filePath = filePath
+        )
+        songDao.insert(localVersion)
+    }
+
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/networkErrorBanner\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/red\"\r\n        android:gravity=\"center\"\r\n        android:padding=\"8dp\"\r\n        android:text=\"No internet connection\"\r\n        android:textColor=\"@color/white\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:ignore=\"HardcodedText\" />\r\n\r\n    <androidx.fragment.app.FragmentContainerView\r\n        android:id=\"@+id/nav_host_fragment\"\r\n        android:name=\"androidx.navigation.fragment.NavHostFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:defaultNavHost=\"true\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/navView\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/networkErrorBanner\"\r\n        app:navGraph=\"@navigation/mobile_navigation\" />\r\n\r\n    <!-- MiniPlayer Fragment container (moved here!) -->\r\n    <FrameLayout\r\n        android:id=\"@+id/miniPlayerContainer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom\"\r\n        android:visibility=\"gone\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/navView\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n<!--        android:layout_marginBottom=\"56dp\"-->\r\n<!--        app:layout_constraintBottom_toBottomOf=\"parent\"-->\r\n\r\n    <com.google.android.material.bottomnavigation.BottomNavigationView\r\n        android:id=\"@+id/navView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/dark_gray\"\r\n        app:itemIconTint=\"@color/bottom_nav_item_color\"\r\n        app:itemTextColor=\"@color/bottom_nav_item_color\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:menu=\"@menu/bottom_nav_menu\"\r\n        tools:ignore=\"VisualLintBottomNav\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision f9e98528dd956b47022f07d100c5ddc413406443)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1748195617179)
@@ -41,8 +41,20 @@
         android:layout_marginBottom="8dp"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintEnd_toEndOf="parent" />
-<!--        android:layout_marginBottom="56dp"-->
-<!--        app:layout_constraintBottom_toBottomOf="parent"-->
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/btnScanQr"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:contentDescription="Scan QR"
+        android:src="@drawable/ic_qr_scan"
+        app:backgroundTint="@color/green"
+        app:tint="@color/white"
+        app:layout_constraintBottom_toTopOf="@id/miniPlayerContainer"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginEnd="16dp"
+        android:layout_marginBottom="32dp"/>
+
 
     <com.google.android.material.bottomnavigation.BottomNavigationView
         android:id="@+id/navView"
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
new file mode 100644
--- /dev/null	(date 1748195617079)
+++ b/app/google-services.json	(date 1748195617079)
@@ -0,0 +1,29 @@
+{
+  "project_info": {
+    "project_number": "189854536370",
+    "project_id": "purrityfy",
+    "storage_bucket": "purrityfy.firebasestorage.app"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:189854536370:android:3d4fe8774d027573482fab",
+        "android_client_info": {
+          "package_name": "com.tubes.purry"
+        }
+      },
+      "oauth_client": [],
+      "api_key": [
+        {
+          "current_key": "AIzaSyAj3_TojkQ7b-aHS4VXqcDhIJpZ7NNoQfI"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": []
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
Index: app/src/main/res/layout-land/activity_recommendation_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_recommendation_detail.xml b/app/src/main/res/layout-land/activity_recommendation_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617171)
+++ b/app/src/main/res/layout-land/activity_recommendation_detail.xml	(date 1748195617171)
@@ -0,0 +1,86 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/black">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/appBarLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@android:color/black"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@android:color/black"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            app:navigationIconTint="@android:color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/landscapeContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/appBarLayout"
+        android:layout_above="@+id/miniPlayerContainer"
+        android:orientation="horizontal"
+        android:padding="16dp">
+
+        <!-- Cover Image -->
+        <ImageView
+            android:id="@+id/ivRecommendationCover"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:scaleType="centerCrop"
+            android:layout_marginEnd="16dp"
+            android:background="@drawable/rounded_corner_background"
+            android:contentDescription="@string/recommendation_cover" />
+
+        <!-- Details & Song List -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="2"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/tvRecommendationTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Daily Mix 1"
+                android:textSize="24sp"
+                android:textStyle="bold"
+                android:textColor="@android:color/white" />
+
+            <TextView
+                android:id="@+id/tvRecommendationDescription"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@android:color/white"
+                android:textSize="14sp"
+                android:layout_marginBottom="12dp"
+                android:text="Based on your listening history" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvRecommendationSongs"
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
+                android:layout_weight="1"
+                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
+        </LinearLayout>
+    </LinearLayout>
+
+    <FrameLayout
+        android:id="@+id/miniPlayerContainer"
+        android:layout_width="match_parent"
+        android:layout_height="64dp"
+        android:layout_alignParentBottom="true"
+        android:visibility="gone"
+        android:background="#222" />
+</RelativeLayout>
Index: app/src/main/res/layout-land/activity_month_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_month_detail.xml b/app/src/main/res/layout-land/activity_month_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617170)
+++ b/app/src/main/res/layout-land/activity_month_detail.xml	(date 1748195617170)
@@ -0,0 +1,151 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/tvMonthTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="24dp"
+                android:text="April 2025"
+                android:textColor="@color/white"
+                android:textSize="24sp"
+                android:textStyle="bold" />
+
+            <!-- Time + Chart side-by-side -->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:layout_marginBottom="16dp">
+
+                <com.google.android.material.card.MaterialCardView
+                    android:id="@+id/cardTimeListened"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:layout_marginEnd="8dp"
+                    app:cardBackgroundColor="@color/card_background"
+                    app:cardCornerRadius="12dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:padding="16dp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Time listened"
+                            android:textColor="@color/text_secondary"
+                            android:textSize="14sp" />
+
+                        <TextView
+                            android:id="@+id/tvTotalMinutes"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="862 minutes"
+                            android:textColor="@color/primary_green"
+                            android:textSize="32sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/tvDailyAverage"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Daily average: 33 min"
+                            android:textColor="@color/text_secondary"
+                            android:textSize="14sp" />
+                    </LinearLayout>
+                </com.google.android.material.card.MaterialCardView>
+
+                <com.google.android.material.card.MaterialCardView
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:layout_marginStart="8dp"
+                    app:cardBackgroundColor="@color/card_background"
+                    app:cardCornerRadius="12dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:padding="16dp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Daily Chart"
+                            android:textColor="@color/white"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            android:layout_marginBottom="8dp"/>
+
+                        <com.github.mikephil.charting.charts.LineChart
+                            android:id="@+id/dailyChart"
+                            android:layout_width="match_parent"
+                            android:layout_height="200dp" />
+                    </LinearLayout>
+                </com.google.android.material.card.MaterialCardView>
+            </LinearLayout>
+
+            <!-- Reuse remaining part (Top Artist/Song, Day Streak, Stats, Export) -->
+            <!-- You can directly reuse these from portrait layout -->
+            <!-- Or create separate includes/layout modules if needed -->
+
+        </LinearLayout>
+    </androidx.core.widget.NestedScrollView>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/layout-land/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_maps.xml b/app/src/main/res/layout-land/activity_maps.xml
new file mode 100644
--- /dev/null	(date 1748195617169)
+++ b/app/src/main/res/layout-land/activity_maps.xml	(date 1748195617169)
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:background="@android:color/white"
+    tools:context=".ui.profile.MapsActivity">
+
+    <!-- Header -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Select Location"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        android:textColor="@android:color/black"
+        android:padding="16dp"
+        android:gravity="center" />
+
+    <!-- Content Area: Map and Info Side-by-Side -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        android:orientation="horizontal"
+        android:padding="8dp">
+
+        <!-- Map Fragment -->
+        <fragment
+            android:id="@+id/mapFragment"
+            android:name="com.google.android.gms.maps.SupportMapFragment"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="2"
+            android:layout_marginEnd="8dp" />
+
+        <!-- Info Card -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:padding="16dp"
+            android:background="@android:color/white">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Selected Location:"
+                android:textColor="@android:color/black"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/txtSelectedCoordinates"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Tap on map to select location"
+                android:textColor="@android:color/black"
+                android:layout_marginTop="4dp" />
+
+            <TextView
+                android:id="@+id/txtSelectedAddress"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text=""
+                android:textColor="@android:color/black"
+                android:layout_marginTop="8dp" />
+
+            <TextView
+                android:id="@+id/txtSelectedCountry"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text=""
+                android:textColor="@android:color/black"
+                android:layout_marginTop="4dp" />
+        </LinearLayout>
+    </LinearLayout>
+
+    <!-- Buttons -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:padding="16dp">
+
+        <Button
+            android:id="@+id/btnCancel"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:layout_marginEnd="8dp"
+            android:text="Cancel" />
+
+        <Button
+            android:id="@+id/btnSelectLocation"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:layout_marginStart="8dp"
+            android:text="Select Location" />
+    </LinearLayout>
+
+</LinearLayout>
Index: app/src/main/res/layout-land/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_main.xml b/app/src/main/res/layout-land/activity_main.xml
new file mode 100644
--- /dev/null	(date 1748195617169)
+++ b/app/src/main/res/layout-land/activity_main.xml	(date 1748195617169)
@@ -0,0 +1,103 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/black"
+    tools:context=".MainActivity">
+
+    <!-- Sidebar sebagai ConstraintLayout agar MiniPlayer bisa fix di bawah -->
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/sidebar"
+        android:layout_width="240dp"
+        android:layout_height="0dp"
+        android:background="@color/dark_gray"
+        android:padding="16dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent">
+
+        <!-- Menu Container -->
+        <LinearLayout
+            android:id="@+id/menuContainer"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            tools:ignore="MissingConstraints">
+
+            <TextView
+                android:id="@+id/menu_home"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Home"
+                android:textColor="@color/white"
+                android:drawableStart="@drawable/ic_home"
+                android:drawablePadding="8dp"
+                android:paddingVertical="8dp" />
+
+            <TextView
+                android:id="@+id/menu_library"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Your Library"
+                android:textColor="@color/white"
+                android:drawableStart="@drawable/ic_library"
+                android:drawablePadding="8dp"
+                android:paddingVertical="8dp" />
+
+            <TextView
+                android:id="@+id/menu_profile"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Profile"
+                android:textColor="@color/white"
+                android:drawableStart="@drawable/ic_profile"
+                android:drawablePadding="8dp"
+                android:paddingVertical="8dp" />
+        </LinearLayout>
+
+        <!-- Mini Player di bawah -->
+        <FrameLayout
+            android:id="@+id/miniPlayerContainer"
+            android:layout_width="0dp"
+            android:layout_height="64dp"
+            android:layout_marginBottom="8dp"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintEnd_toEndOf="parent" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <!-- Network Error -->
+    <TextView
+        android:id="@+id/networkErrorBanner"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/red"
+        android:gravity="center"
+        android:padding="8dp"
+        android:text="No internet connection"
+        android:textColor="@color/white"
+        android:visibility="gone"
+        app:layout_constraintStart_toEndOf="@id/sidebar"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        tools:ignore="HardcodedText" />
+
+    <!-- Konten Fragment -->
+    <androidx.fragment.app.FragmentContainerView
+        android:id="@+id/nav_host_fragment"
+        android:name="androidx.navigation.fragment.NavHostFragment"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintTop_toBottomOf="@id/networkErrorBanner"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/sidebar"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:defaultNavHost="true"
+        app:navGraph="@navigation/mobile_navigation" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout-land/activity_top_songs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_top_songs.xml b/app/src/main/res/layout-land/activity_top_songs.xml
new file mode 100644
--- /dev/null	(date 1748195617174)
+++ b/app/src/main/res/layout-land/activity_top_songs.xml	(date 1748195617174)
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:title="Top songs"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:padding="16dp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <!-- Kiri: Info Ringkasan -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:paddingEnd="16dp"
+            android:gravity="top">
+
+            <TextView
+                android:id="@+id/tvMonth"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="April 2025"
+                android:textColor="@color/text_secondary"
+                android:textSize="14sp" />
+
+            <TextView
+                android:id="@+id/tvSummary"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="You played 203 different songs this month."
+                android:textColor="@color/white"
+                android:textSize="18sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+        <!-- Kanan: Daftar Lagu -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvTopSongs"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="2"
+            android:clipToPadding="false"
+            android:paddingBottom="16dp" />
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/layout-land/activity_top_artists.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_top_artists.xml b/app/src/main/res/layout-land/activity_top_artists.xml
new file mode 100644
--- /dev/null	(date 1748195617173)
+++ b/app/src/main/res/layout-land/activity_top_artists.xml	(date 1748195617173)
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:title="Top artists"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:padding="16dp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <!-- Kiri: Ringkasan -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:paddingEnd="16dp"
+            android:gravity="top">
+
+            <TextView
+                android:id="@+id/tvMonth"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="April 2025"
+                android:textColor="@color/text_secondary"
+                android:textSize="14sp" />
+
+            <TextView
+                android:id="@+id/tvSummary"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="You listened to 137 artists this month."
+                android:textColor="@color/white"
+                android:textSize="18sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+        <!-- Kanan: RecyclerView -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvTopArtists"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="2"
+            android:clipToPadding="false"
+            android:paddingBottom="16dp" />
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/layout-land/activity_time_listened_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_time_listened_detail.xml b/app/src/main/res/layout-land/activity_time_listened_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617172)
+++ b/app/src/main/res/layout-land/activity_time_listened_detail.xml	(date 1748195617172)
@@ -0,0 +1,129 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:title="Time listened"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:padding="16dp"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        android:visibility="gone">
+
+        <!-- Kiri: Info Ringkasan -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/tvMonth"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="April 2025"
+                android:textColor="@color/text_secondary"
+                android:textSize="14sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="4dp"
+                android:text="You listened to music for"
+                android:textColor="@color/white"
+                android:textSize="18sp" />
+
+            <TextView
+                android:id="@+id/tvTotalMinutes"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="862 minutes"
+                android:textColor="@color/primary_green"
+                android:textSize="32sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="this month."
+                android:textColor="@color/white"
+                android:textSize="18sp" />
+
+            <TextView
+                android:id="@+id/tvDailyAverage"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="16dp"
+                android:layout_marginBottom="32dp"
+                android:text="Daily average: 33 min"
+                android:textColor="@color/text_secondary"
+                android:textSize="16sp" />
+        </LinearLayout>
+
+        <!-- Kanan: Chart -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:gravity="center_vertical">
+
+            <TextView
+                android:id="@+id/tvChartTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:text="Daily Chart"
+                android:textColor="@color/white"
+                android:textSize="20sp"
+                android:textStyle="bold"
+                android:visibility="gone" />
+
+            <com.github.mikephil.charting.charts.LineChart
+                android:id="@+id/dailyChart"
+                android:layout_width="match_parent"
+                android:layout_height="250dp"
+                android:visibility="gone" />
+        </LinearLayout>
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/layout-land/activity_sound_capsule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_sound_capsule.xml b/app/src/main/res/layout-land/activity_sound_capsule.xml
new file mode 100644
--- /dev/null	(date 1748195617172)
+++ b/app/src/main/res/layout-land/activity_sound_capsule.xml	(date 1748195617172)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white"
+            app:title="Your Sound Capsule" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/landscapeContent"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        android:orientation="horizontal"
+        android:padding="16dp"
+        android:layout_below="@id/toolbar">
+
+        <!-- Left Panel (Button) -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:orientation="vertical">
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/btnExportAll"
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:layout_marginBottom="16dp"
+                android:text="Export All Data"
+                android:textColor="@color/white"
+                app:backgroundTint="@color/primary_green"
+                app:cornerRadius="24dp" />
+        </LinearLayout>
+
+        <!-- Right Panel (Content) -->
+        <FrameLayout
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="2">
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvSoundCapsule"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:visibility="gone" />
+
+            <TextView
+                android:id="@+id/tvNoData"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:gravity="center"
+                android:text="No data available"
+                android:textColor="@color/text_secondary"
+                android:textSize="16sp"
+                android:visibility="gone" />
+        </FrameLayout>
+    </LinearLayout>
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/layout-land/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_login.xml b/app/src/main/res/layout-land/activity_login.xml
new file mode 100644
--- /dev/null	(date 1748195617168)
+++ b/app/src/main/res/layout-land/activity_login.xml	(date 1748195617168)
@@ -0,0 +1,143 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ui.auth.LoginActivity">
+
+    <!-- Background Image -->
+    <ImageView
+        android:id="@+id/backgroundImage"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scaleType="centerCrop"
+        android:src="@drawable/bg_login"
+        android:contentDescription="@string/background_image"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <!-- Gradient Overlay -->
+    <View
+        android:id="@+id/gradientOverlay"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@drawable/bg_gradient_overlay"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <androidx.constraintlayout.widget.Guideline
+        android:id="@+id/guidelineVertical"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintGuide_percent="0.5" />
+
+    <!-- Left Section (Logo and Text) -->
+    <LinearLayout
+        android:id="@+id/leftContainer"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:gravity="center"
+        android:padding="24dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@id/guidelineVertical"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent">
+
+        <ImageView
+            android:id="@+id/logo"
+            android:layout_width="100dp"
+            android:layout_height="100dp"
+            android:src="@drawable/logo"
+            android:contentDescription="@string/login_logo" />
+
+        <TextView
+            android:id="@+id/txtTitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/millions_of_songs"
+            android:textColor="@color/white"
+            android:textSize="24sp"
+            android:textStyle="bold"
+            android:layout_marginTop="16dp" />
+
+        <TextView
+            android:id="@+id/txtSubtitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:text="@string/only_on_purrytify"
+            android:textColor="@color/white"
+            android:textSize="18sp" />
+    </LinearLayout>
+
+    <!-- Right Section (Form Fields) -->
+    <LinearLayout
+        android:id="@+id/rightContainer"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="24dp"
+        app:layout_constraintStart_toEndOf="@id/guidelineVertical"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent">
+
+        <TextView
+            android:id="@+id/txtEmail"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/email"
+            android:textColor="@color/white"
+            android:layout_marginBottom="8dp" />
+
+        <EditText
+            android:id="@+id/etEmail"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/login_edit_text_background"
+            android:hint="@string/email_edit"
+            android:inputType="textEmailAddress"
+            android:padding="16dp"
+            android:textColor="@color/white"
+            android:textColorHint="#80FFFFFF"
+            android:layout_marginBottom="16dp" />
+
+        <TextView
+            android:id="@+id/txtPassword"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/password"
+            android:textColor="@color/white"
+            android:layout_marginBottom="8dp" />
+
+        <EditText
+            android:id="@+id/etPassword"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/login_edit_text_background"
+            android:hint="@string/password_edit"
+            android:inputType="textPassword"
+            android:padding="16dp"
+            android:textColor="@color/white"
+            android:textColorHint="#80FFFFFF"
+            android:layout_marginBottom="24dp" />
+
+        <Button
+            android:id="@+id/btnLogin"
+            android:layout_width="match_parent"
+            android:layout_height="56dp"
+            android:background="@drawable/button_green_background"
+            android:text="@string/log_in"
+            android:textAllCaps="false"
+            android:textColor="@color/white"
+            android:textSize="16sp" />
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout-land/activity_edit_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/activity_edit_profile.xml b/app/src/main/res/layout-land/activity_edit_profile.xml
new file mode 100644
--- /dev/null	(date 1748195617168)
+++ b/app/src/main/res/layout-land/activity_edit_profile.xml	(date 1748195617168)
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="16dp"
+    android:background="@color/black"
+    tools:context=".ui.profile.EditProfileActivity">
+
+    <!-- Judul -->
+    <TextView
+        android:id="@+id/txtEditProfileTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Edit Profile"
+        android:textColor="@color/white"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <!-- Gambar profil -->
+    <ImageView
+        android:id="@+id/imgProfile"
+        android:layout_width="160dp"
+        android:layout_height="160dp"
+        android:layout_marginTop="32dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/txtEditProfileTitle" />
+
+    <!-- Tombol ganti foto -->
+    <Button
+        android:id="@+id/btnChangePhoto"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Change Photo"
+        android:layout_marginTop="12dp"
+        app:layout_constraintStart_toStartOf="@id/imgProfile"
+        app:layout_constraintTop_toBottomOf="@id/imgProfile" />
+
+    <!-- Kolom kanan -->
+    <LinearLayout
+        android:id="@+id/rightColumn"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:layout_marginStart="32dp"
+        app:layout_constraintStart_toEndOf="@id/imgProfile"
+        app:layout_constraintTop_toTopOf="@id/imgProfile"
+        app:layout_constraintEnd_toEndOf="parent">
+
+        <TextView
+            android:id="@+id/txtLocationLabel"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Location"
+            android:textColor="@color/white"
+            android:textSize="16sp" />
+
+        <TextView
+            android:id="@+id/txtCurrentLocation"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Detecting location..."
+            android:textColor="@color/white"
+            android:layout_marginTop="8dp" />
+
+        <Button
+            android:id="@+id/btnDetectLocation"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Detect Current Location"
+            android:layout_marginTop="8dp" />
+
+        <Button
+            android:id="@+id/btnChooseLocation"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Choose on Map"
+            android:layout_marginTop="8dp" />
+
+    </LinearLayout>
+
+    <!-- Loading -->
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <Button
+        android:id="@+id/btnSaveProfile"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Save Changes"
+        tools:layout_editor_absoluteX="16dp"
+        tools:layout_editor_absoluteY="301dp"
+        tools:ignore="MissingConstraints" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: .idea/deviceManager.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deviceManager.xml b/.idea/deviceManager.xml
new file mode 100644
--- /dev/null	(date 1748195617063)
+++ b/.idea/deviceManager.xml	(date 1748195617063)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DeviceTable">
+    <option name="columnSorters">
+      <list>
+        <ColumnSorterState>
+          <option name="column" value="Name" />
+          <option name="order" value="ASCENDING" />
+        </ColumnSorterState>
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/utils/SongUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/utils/SongUtils.kt b/app/src/main/java/com/tubes/purry/utils/SongUtils.kt
new file mode 100644
--- /dev/null	(date 1748195617140)
+++ b/app/src/main/java/com/tubes/purry/utils/SongUtils.kt	(date 1748195617140)
@@ -0,0 +1,13 @@
+package com.tubes.purry.utils
+
+fun parseDuration(durationStr: String): Int {
+    return try {
+        val parts = durationStr.split(":")
+        val minutes = parts.getOrNull(0)?.toIntOrNull() ?: 0
+        val seconds = parts.getOrNull(1)?.toIntOrNull() ?: 0
+        minutes * 60 + seconds
+    } catch (e: Exception) {
+        0
+    }
+}
+
Index: app/src/main/java/com/tubes/purry/utils/MusicNotificationService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/utils/MusicNotificationService.kt b/app/src/main/java/com/tubes/purry/utils/MusicNotificationService.kt
new file mode 100644
--- /dev/null	(date 1748195617140)
+++ b/app/src/main/java/com/tubes/purry/utils/MusicNotificationService.kt	(date 1748195617140)
@@ -0,0 +1,370 @@
+package com.tubes.purry.utils
+
+import android.app.*
+import android.content.Context
+import android.content.Intent
+import android.graphics.Bitmap
+import android.graphics.BitmapFactory
+import android.os.Handler
+import android.os.IBinder
+import android.os.Looper
+import android.support.v4.media.session.MediaSessionCompat
+import android.support.v4.media.session.PlaybackStateCompat
+import android.util.Log
+import androidx.core.app.NotificationCompat
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.MainActivity
+import com.tubes.purry.ui.player.PlayerController
+import android.support.v4.media.MediaMetadataCompat
+import com.tubes.purry.ui.player.NowPlayingManager
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.SupervisorJob
+import kotlinx.coroutines.cancel
+import kotlinx.coroutines.delay
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+
+class MusicNotificationService : Service() {
+
+    companion object {
+        const val CHANNEL_ID = "purrytify_channel"
+        const val NOTIFICATION_ID = 1
+        const val ACTION_DISMISS = "ACTION_DISMISS"
+    }
+
+    private val serviceScope = CoroutineScope(SupervisorJob() + Dispatchers.Main)
+    private var mediaSession: MediaSessionCompat? = null
+    private val updateHandler = Handler(Looper.getMainLooper())
+    private var updateRunnable: Runnable? = null
+    private var isUpdating = false
+
+    // Media Session Callback
+    private val mediaSessionCallback = object : MediaSessionCompat.Callback() {
+        override fun onPlay() {
+            Log.d("MediaSession", "onPlay called")
+            val intent = Intent(this@MusicNotificationService, MusicNotificationReceiver::class.java).apply {
+                action = MusicNotificationReceiver.ACTION_PLAY
+            }
+            sendBroadcast(intent)
+        }
+
+        override fun onPause() {
+            Log.d("MediaSession", "onPause called")
+            val intent = Intent(this@MusicNotificationService, MusicNotificationReceiver::class.java).apply {
+                action = MusicNotificationReceiver.ACTION_PAUSE
+            }
+            sendBroadcast(intent)
+        }
+
+        override fun onSkipToNext() {
+            Log.d("MediaSession", "onSkipToNext called")
+            val intent = Intent(this@MusicNotificationService, MusicNotificationReceiver::class.java).apply {
+                action = MusicNotificationReceiver.ACTION_NEXT
+            }
+            sendBroadcast(intent)
+        }
+
+        override fun onSkipToPrevious() {
+            Log.d("MediaSession", "onSkipToPrevious called")
+            val intent = Intent(this@MusicNotificationService, MusicNotificationReceiver::class.java).apply {
+                action = MusicNotificationReceiver.ACTION_PREV
+            }
+            sendBroadcast(intent)
+        }
+
+        override fun onSeekTo(pos: Long) {
+            Log.d("MediaSession", "onSeekTo called: $pos")
+            PlayerController.seekTo(pos.toInt())
+            // Immediate update after seek
+            updatePlaybackState()
+        }
+
+        override fun onStop() {
+            Log.d("MediaSession", "onStop called - dismissing notification")
+            PlayerController.pause()
+            stopForeground(true)
+            stopSelf()
+        }
+    }
+
+    override fun onBind(intent: Intent?): IBinder? = null
+
+    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
+        // Handle dismiss action
+        if (intent?.action == ACTION_DISMISS) {
+            Log.d("MusicNotification", "Dismiss action received")
+            PlayerController.pause()
+            stopForeground(true)
+            stopSelf()
+            return START_NOT_STICKY
+        }
+
+        Log.d("MusicNotification", "Service dimulai")
+        createNotificationChannel()
+
+        val currentSong = PlayerController.getCurrentSong()
+        if (currentSong == null) {
+            stopSelf()
+            return START_NOT_STICKY
+        }
+
+        setupMediaSession()
+
+        PlayerController.onSeeked = { position ->
+            Log.d("MusicNotification", "Seeked callback ke posisi: $position")
+            updatePlaybackState()
+        }
+
+        // Setup initial metadata and notification
+        serviceScope.launch {
+            val artworkBitmap: Bitmap = withContext(Dispatchers.IO) {
+                try {
+                    Glide.with(this@MusicNotificationService)
+                        .asBitmap()
+                        .load(currentSong.coverPath)
+                        .submit()
+                        .get()
+                } catch (e: Exception) {
+                    Log.e("MusicNotification", "Gagal load artwork: ${e.message}")
+                    BitmapFactory.decodeResource(resources, R.drawable.logo)
+                }
+            }
+
+            // Setup metadata first
+            setupMediaMetadata(currentSong, artworkBitmap)
+
+            // Then create notification
+            createAndShowNotification(currentSong, artworkBitmap)
+
+            // Start periodic updates after initial setup
+            startPeriodicUpdates()
+        }
+
+        return START_STICKY
+    }
+
+    private fun setupMediaSession() {
+        mediaSession = MediaSessionCompat(this, "PurrytifySession").apply {
+            setCallback(mediaSessionCallback)
+            setFlags(
+                MediaSessionCompat.FLAG_HANDLES_TRANSPORT_CONTROLS or
+                        MediaSessionCompat.FLAG_HANDLES_MEDIA_BUTTONS
+            )
+            isActive = true
+        }
+    }
+
+    private fun createAndShowNotification(song: com.tubes.purry.data.model.Song, artworkBitmap: Bitmap) {
+        val isPlaying = PlayerController.isPlaying()
+        val playPauseIcon = if (isPlaying) R.drawable.ic_pause else R.drawable.ic_play
+        val playPauseAction = if (isPlaying) MusicNotificationReceiver.ACTION_PAUSE else MusicNotificationReceiver.ACTION_PLAY
+
+        val intentToApp = Intent(this, MainActivity::class.java).apply {
+            addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP)
+        }
+
+        val pendingIntent = PendingIntent.getActivity(
+            this,
+            0,
+            intentToApp,
+            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
+        )
+
+        val dismissIntent = Intent(this, MusicNotificationReceiver::class.java).apply {
+            action = MusicNotificationReceiver.ACTION_DISMISS
+        }
+        val dismissPendingIntent = PendingIntent.getBroadcast(
+            this,
+            999,
+            dismissIntent,
+            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
+        )
+
+        val currentPosition = PlayerController.getCurrentPosition()
+        val duration = PlayerController.getDuration()
+        val timeText = "${formatTime(currentPosition)} / ${formatTime(duration)}"
+
+        val notification = NotificationCompat.Builder(this, CHANNEL_ID)
+            .setContentTitle(song.title)
+            .setContentText(song.artist)
+            .setSubText(timeText) // Show current time / duration
+            .setSmallIcon(R.drawable.logo)
+            .setLargeIcon(artworkBitmap)
+            .setContentIntent(pendingIntent)
+            .setPriority(NotificationCompat.PRIORITY_HIGH)
+            .setCategory(NotificationCompat.CATEGORY_TRANSPORT)
+            .setOngoing(true)
+            .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
+            .addAction(R.drawable.ic_skip_previous, "Previous", getPendingIntent(MusicNotificationReceiver.ACTION_PREV))
+            .addAction(playPauseIcon, "Play/Pause", getPendingIntent(playPauseAction))
+            .addAction(R.drawable.ic_skip_next, "Next", getPendingIntent(MusicNotificationReceiver.ACTION_NEXT))
+            .addAction(R.drawable.ic_close, "Dismiss", dismissPendingIntent)
+            .setDeleteIntent(dismissPendingIntent)
+            .setStyle(
+                androidx.media.app.NotificationCompat.MediaStyle()
+                    .setMediaSession(mediaSession?.sessionToken)
+                    .setShowActionsInCompactView(0, 1, 2)
+                    .setShowCancelButton(true)
+                    .setCancelButtonIntent(dismissPendingIntent)
+            )
+            .build()
+
+        startForeground(NOTIFICATION_ID, notification)
+    }
+
+    private fun setupMediaMetadata(song: com.tubes.purry.data.model.Song, artworkBitmap: Bitmap) {
+        val duration = PlayerController.getDuration().toLong()
+
+        val metadata = MediaMetadataCompat.Builder()
+            .putString(MediaMetadataCompat.METADATA_KEY_TITLE, song.title)
+            .putString(MediaMetadataCompat.METADATA_KEY_ARTIST, song.artist)
+            .putString(MediaMetadataCompat.METADATA_KEY_ALBUM, song.artist)
+            .putLong(MediaMetadataCompat.METADATA_KEY_DURATION, duration)
+            .putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, artworkBitmap)
+            .putBitmap(MediaMetadataCompat.METADATA_KEY_ART, artworkBitmap)
+            .build()
+
+        mediaSession?.setMetadata(metadata)
+        mediaSession?.isActive = true
+
+        Log.d("MediaMetadata", "Set metadata - Duration: $duration ms")
+    }
+
+    private fun updatePlaybackState() {
+        if (isUpdating) return // Prevent recursive updates
+
+        val currentPosition = PlayerController.getCurrentPosition().toLong()
+        val duration = PlayerController.getDuration().toLong()
+        val isPlaying = PlayerController.isPlaying()
+
+//        Log.d("PlaybackState", "Position: $currentPosition, Duration: $duration, Playing: $isPlaying")
+
+        val playbackState = PlaybackStateCompat.Builder()
+            .setActions(
+                PlaybackStateCompat.ACTION_PLAY or
+                        PlaybackStateCompat.ACTION_PAUSE or
+                        PlaybackStateCompat.ACTION_SKIP_TO_NEXT or
+                        PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS or
+                        PlaybackStateCompat.ACTION_SEEK_TO or
+                        PlaybackStateCompat.ACTION_STOP or
+                        PlaybackStateCompat.ACTION_PLAY_PAUSE
+            )
+            .setState(
+                if (isPlaying) PlaybackStateCompat.STATE_PLAYING else PlaybackStateCompat.STATE_PAUSED,
+                currentPosition,
+                if (isPlaying) 1.0f else 0.0f,
+                System.currentTimeMillis()
+            )
+            .build()
+
+        mediaSession?.setPlaybackState(playbackState)
+
+        // Update notification with current song info
+        val currentSong = PlayerController.getCurrentSong()
+        if (currentSong != null) {
+            isUpdating = true
+            serviceScope.launch {
+                val artworkBitmap: Bitmap = withContext(Dispatchers.IO) {
+                    try {
+                        Glide.with(this@MusicNotificationService)
+                            .asBitmap()
+                            .load(currentSong.coverPath)
+                            .submit()
+                            .get()
+                    } catch (e: Exception) {
+                        BitmapFactory.decodeResource(resources, R.drawable.logo)
+                    }
+                }
+                createAndShowNotification(currentSong, artworkBitmap)
+                isUpdating = false
+            }
+        }
+    }
+
+    private fun startPeriodicUpdates() {
+        // Clear any existing updates first
+        stopPeriodicUpdates()
+
+        updateRunnable = object : Runnable {
+            override fun run() {
+                if (PlayerController.isPlaying()) {
+//                    Log.d("PeriodicUpdate", "Updating playback state - Playing")
+                    updatePlaybackState()
+                } else {
+//                    Log.d("PeriodicUpdate", "Player paused, updating state once")
+                    updatePlaybackState()
+                }
+
+                // Continue updates every second
+                updateHandler.postDelayed(this, 1000)
+            }
+        }
+        updateHandler.post(updateRunnable!!)
+    }
+
+    private fun stopPeriodicUpdates() {
+        updateRunnable?.let {
+            updateHandler.removeCallbacks(it)
+//            Log.d("PeriodicUpdate", "Stopped periodic updates")
+        }
+        updateRunnable = null
+    }
+
+    private fun getPendingIntent(action: String): PendingIntent {
+        val intent = Intent(this, MusicNotificationReceiver::class.java).apply {
+            this.action = action
+        }
+        return PendingIntent.getBroadcast(
+            this,
+            action.hashCode(),
+            intent,
+            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
+        )
+    }
+
+    private fun createNotificationChannel() {
+        val channel = NotificationChannel(
+            CHANNEL_ID,
+            "Purrytify Music",
+            NotificationManager.IMPORTANCE_LOW
+        ).apply {
+            description = "Menampilkan kontrol pemutar musik"
+            setShowBadge(false)
+            lockscreenVisibility = Notification.VISIBILITY_PUBLIC
+            setSound(null, null)
+        }
+
+        val manager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
+        manager.createNotificationChannel(channel)
+    }
+
+    private fun formatTime(milliseconds: Int): String {
+        val totalSeconds = milliseconds / 1000
+        val minutes = totalSeconds / 60
+        val seconds = totalSeconds % 60
+        return String.format("%d:%02d", minutes, seconds)
+    }
+
+    override fun onTaskRemoved(rootIntent: Intent?) {
+        super.onTaskRemoved(rootIntent)
+        Log.d("MusicNotification", "Task removed - keeping service alive")
+
+        PlayerController.pause()
+        PlayerController.release()
+        NowPlayingManager.viewModel?.clearQueue()
+
+        stopForeground(true)
+        stopSelf()
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        stopPeriodicUpdates()
+        mediaSession?.release()
+        mediaSession = null
+        serviceScope.cancel()
+        Log.d("MusicNotification", "Service dihentikan")
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_corner_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_corner_background.xml b/app/src/main/res/drawable/rounded_corner_background.xml
new file mode 100644
--- /dev/null	(date 1748195617163)
+++ b/app/src/main/res/drawable/rounded_corner_background.xml	(date 1748195617163)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="8dp" />
+    <solid android:color="#333333" />
+</shape>
\ No newline at end of file
Index: app/src/main/res/xml/file_paths.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/file_paths.xml b/app/src/main/res/xml/file_paths.xml
new file mode 100644
--- /dev/null	(date 1748195617199)
+++ b/app/src/main/res/xml/file_paths.xml	(date 1748195617199)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<paths>
+    <cache-path name="shared_qr" path="." />
+    <external-files-path
+        name="my_images"
+        path="." />
+</paths>
Index: app/src/main/res/layout-land/fragment_song_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/fragment_song_detail.xml b/app/src/main/res/layout-land/fragment_song_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617177)
+++ b/app/src/main/res/layout-land/fragment_song_detail.xml	(date 1748195617177)
@@ -0,0 +1,206 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/black">
+
+    <!-- Top Bar -->
+    <ImageButton
+        android:id="@+id/btnBack"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_margin="16dp"
+        android:background="?attr/selectableItemBackgroundBorderless"
+        android:contentDescription="@string/_back"
+        android:src="@drawable/ic_arrow_down"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent" />
+
+    <ImageButton
+        android:id="@+id/btnOptions"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_margin="16dp"
+        android:background="?attr/selectableItemBackgroundBorderless"
+        android:contentDescription="@string/_options"
+        android:src="@drawable/ic_more_vert"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <!-- Album Art (Left Panel) -->
+
+    <!-- Right Panel -->
+
+    <ImageView
+        android:id="@+id/ivCover"
+        android:layout_width="250dp"
+        android:layout_height="250dp"
+        android:layout_margin="32dp"
+        android:contentDescription="@string/album_cover_player"
+        android:scaleType="centerCrop"
+        android:src="@drawable/album_default"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintDimensionRatio="1:1"
+        app:layout_constraintEnd_toStartOf="@+id/rightPanel"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/btnBack"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <LinearLayout
+        android:id="@+id/rightPanel"
+        android:layout_width="390dp"
+        android:layout_height="305dp"
+        android:layout_marginTop="64dp"
+        android:orientation="vertical"
+        android:padding="24dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@id/ivCover"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.0">
+
+        <!-- Title & Favorite -->
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <TextView
+                android:id="@+id/tvTitle"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="48dp"
+                android:ellipsize="marquee"
+                android:focusable="true"
+                android:focusableInTouchMode="true"
+                android:marqueeRepeatLimit="marquee_forever"
+                android:scrollHorizontally="true"
+                android:singleLine="true"
+                android:text="@string/_title"
+                android:textColor="@android:color/white"
+                android:textSize="25sp"
+                android:textStyle="bold"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <ImageButton
+                android:id="@+id/btnFavorite"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:layout_marginEnd="4dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:contentDescription="@string/_favorit"
+                android:src="@drawable/ic_heart_outline"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toTopOf="@id/tvTitle" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
+        <!-- Artist -->
+        <TextView
+            android:id="@+id/tvArtist"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="4dp"
+            android:text="@string/_detail"
+            android:textColor="@android:color/white"
+            android:textSize="20sp" />
+
+        <!-- SeekBar -->
+        <SeekBar
+            android:id="@+id/seekBar"
+            android:layout_width="match_parent"
+            android:layout_height="30dp"
+            android:layout_marginTop="24dp"
+            android:progress="0"
+            android:progressBackgroundTint="#777777"
+            android:progressTint="@android:color/white"
+            android:thumbTint="@android:color/white" />
+
+        <!-- Time Labels -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="4dp"
+            android:orientation="horizontal">
+
+            <TextView
+                android:id="@+id/tvCurrentTime"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="0:00"
+                android:textColor="@android:color/white"
+                android:textSize="12sp" />
+
+            <!-- Spacer -->
+            <View
+                android:layout_width="0dp"
+                android:layout_height="0dp"
+                android:layout_weight="1" />
+
+            <TextView
+                android:id="@+id/tvDuration"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="4:12"
+                android:textColor="@android:color/white"
+                android:textSize="12sp" />
+        </LinearLayout>
+
+
+        <!-- Playback Controls -->
+        <LinearLayout
+            android:id="@+id/playerControls"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="32dp"
+            android:gravity="center"
+            android:orientation="horizontal">
+
+            <ImageButton
+                android:id="@+id/btnShuffle"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:contentDescription="@string/shuffle"
+                android:src="@drawable/ic_shuffle" />
+
+            <ImageButton
+                android:id="@+id/btnPrev"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:contentDescription="@string/previous_song"
+                android:src="@drawable/ic_skip_previous" />
+
+            <ImageButton
+                android:id="@+id/btnPlayPause"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="16dp"
+                android:layout_marginEnd="16dp"
+                android:background="@android:color/transparent"
+                android:contentDescription="@string/play_song"
+                android:scaleType="centerInside"
+                android:src="@drawable/ic_pause_btn" />
+
+            <ImageButton
+                android:id="@+id/btnNext"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:contentDescription="@string/next_song_play"
+                android:src="@drawable/ic_skip_next" />
+
+            <ImageButton
+                android:id="@+id/btnRepeat"
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:background="?attr/selectableItemBackgroundBorderless"
+                android:contentDescription="@string/repeat"
+                android:src="@drawable/ic_repeat" />
+        </LinearLayout>
+    </LinearLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout-land/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/fragment_profile.xml b/app/src/main/res/layout-land/fragment_profile.xml
new file mode 100644
--- /dev/null	(date 1748195617176)
+++ b/app/src/main/res/layout-land/fragment_profile.xml	(date 1748195617176)
@@ -0,0 +1,339 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <View
+        android:id="@+id/backgroundGradient"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@drawable/profile_gradient_background"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <LinearLayout
+        android:id="@+id/networkErrorLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:padding="24dp"
+        android:visibility="gone"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent">
+
+        <ImageView
+            android:layout_width="100dp"
+            android:layout_height="100dp"
+            android:src="@drawable/no_internet"
+            android:contentDescription="@string/no_internet_connection" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="16dp"
+            android:text="@string/no_internet_connection"
+            android:textColor="@color/white"
+            android:textSize="20sp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:gravity="center"
+            android:text="@string/check_your_internet"
+            android:textColor="@color/gray"
+            android:textSize="16sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/profileContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:orientation="horizontal"
+        android:padding="24dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="1.0"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="1.0">
+
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/txtProfileTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="24dp"
+                android:text="@string/profile"
+                android:textColor="@color/white"
+                android:textSize="24sp"
+                android:textStyle="bold" />
+
+            <ImageView
+                android:id="@+id/imgProfile"
+                android:layout_width="120dp"
+                android:layout_height="120dp"
+                android:background="@drawable/circle_background"
+                android:contentDescription="@string/circle_background"
+                android:scaleType="centerCrop"
+                tools:src="@drawable/profile" />
+
+            <ImageButton
+                android:id="@+id/btnEditPhoto"
+                android:layout_width="32dp"
+                android:layout_height="32dp"
+                android:layout_marginTop="-32dp"
+                android:layout_marginEnd="-64dp"
+                android:background="@drawable/circle_edit_button"
+                android:contentDescription="@string/circle_edit_button"
+                android:padding="6dp"
+                android:src="@drawable/ic_edit" />
+
+            <TextView
+                android:id="@+id/txtUsername"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="24dp"
+                android:text="@string/username"
+                android:textColor="@color/white"
+                android:textSize="20sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/txtLocation"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="4dp"
+                android:text="@string/location"
+                android:textColor="@color/gray"
+                android:textSize="16sp" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="368dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:paddingStart="24dp">
+
+            <LinearLayout
+                android:id="@+id/statsContainer"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:baselineAligned="false"
+                android:gravity="center"
+                android:orientation="horizontal">
+
+                <!-- Songs -->
+                <LinearLayout
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/txtSongsCount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/_135"
+                        android:textColor="@color/white"
+                        android:textSize="18sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/songs"
+                        android:textColor="@color/gray"
+                        android:textSize="14sp" />
+                </LinearLayout>
+
+                <!-- Liked -->
+                <LinearLayout
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/txtLikedCount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/_32"
+                        android:textColor="@color/white"
+                        android:textSize="18sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/liked"
+                        android:textColor="@color/gray"
+                        android:textSize="14sp" />
+                </LinearLayout>
+
+                <!-- Listened -->
+                <LinearLayout
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/txtListenedCount"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/_50"
+                        android:textColor="@color/white"
+                        android:textSize="18sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/listened"
+                        android:textColor="@color/gray"
+                        android:textSize="14sp" />
+                </LinearLayout>
+            </LinearLayout>
+
+            <com.google.android.material.card.MaterialCardView
+                android:id="@+id/cardSoundCapsule"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="12dp"
+                android:clickable="true"
+                android:focusable="true"
+                app:cardBackgroundColor="#1E1E1E"
+                app:cardCornerRadius="12dp"
+                app:cardElevation="4dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal"
+                    android:padding="16dp">
+
+                    <ImageView
+                        android:layout_width="48dp"
+                        android:layout_height="48dp"
+                        android:layout_gravity="center_vertical"
+                        android:src="@android:drawable/ic_media_play"
+                        app:tint="#1DB954" />
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center_vertical"
+                        android:layout_marginStart="16dp"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Your Sound Capsule"
+                            android:textColor="@color/white"
+                            android:textSize="16sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/tvAnalyticsSummary"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="View your music analytics"
+                            android:textColor="@color/gray"
+                            android:textSize="14sp" />
+
+                        <TextView
+                            android:id="@+id/tvTimeListened"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="4dp"
+                            android:text="0 min this month"
+                            android:textColor="#1DB954"
+                            android:textSize="12sp"
+                            android:textStyle="bold"
+                            android:visibility="gone" />
+                    </LinearLayout>
+
+                    <ImageView
+                        android:layout_width="24dp"
+                        android:layout_height="24dp"
+                        android:layout_gravity="center_vertical"
+                        android:src="@android:drawable/ic_media_next"
+                        app:tint="@color/gray" />
+                </LinearLayout>
+            </com.google.android.material.card.MaterialCardView>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="20dp"
+                android:gravity="center"
+                android:orientation="horizontal"
+                android:baselineAligned="false">
+
+                <Button
+                    android:id="@+id/btnLogout"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginEnd="8dp"
+                    android:layout_weight="1"
+                    android:background="@drawable/button_outline_background"
+                    android:paddingStart="24dp"
+                    android:paddingEnd="24dp"
+                    android:text="@string/logout"
+                    android:textAllCaps="false"
+                    android:textColor="@color/white" />
+
+                <Button
+                    android:id="@+id/btnEditProfile"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_marginStart="8dp"
+                    android:layout_weight="1"
+                    android:background="@drawable/button_outline_background"
+                    android:paddingStart="24dp"
+                    android:paddingEnd="24dp"
+                    android:text="@string/edit_profile"
+                    android:textAllCaps="false"
+                    android:textColor="@color/white" />
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/layout-land/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/fragment_home.xml b/app/src/main/res/layout-land/fragment_home.xml
new file mode 100644
--- /dev/null	(date 1748195617174)
+++ b/app/src/main/res/layout-land/fragment_home.xml	(date 1748195617174)
@@ -0,0 +1,115 @@
+<androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fillViewport="true"
+    android:paddingBottom="8dp"
+    android:background="@android:color/black">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <!-- Made for You / Recommendations Title -->
+        <TextView
+            android:id="@+id/labelRecommendations"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Made for you"
+            android:textColor="@android:color/white"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            android:paddingBottom="8dp" />
+
+        <!-- Horizontal Recommendations -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvRecommendations"
+            android:layout_width="match_parent"
+            android:layout_height="180dp"
+            android:layout_marginBottom="16dp"
+            android:clipToPadding="false"
+            android:orientation="horizontal"
+            android:overScrollMode="never"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/item_recommendation" />
+
+        <!-- Chart Title -->
+        <TextView
+            android:id="@+id/labelCharts"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Charts"
+            android:textColor="@android:color/white"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            android:paddingBottom="8dp" />
+
+        <!-- Horizontal Charts -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvCharts"
+            android:layout_width="match_parent"
+            android:layout_height="180dp"
+            android:layout_marginBottom="16dp"
+            android:clipToPadding="false"
+            android:orientation="horizontal"
+            android:overScrollMode="never"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/item_chart_card" />
+
+        <!-- New Songs Title -->
+        <TextView
+            android:id="@+id/labelNewSongs"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/new_songs"
+            android:textColor="@android:color/white"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            android:paddingBottom="8dp" />
+
+        <!-- Horizontal New Songs -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvNewSongs"
+            android:layout_width="match_parent"
+            android:layout_height="180dp"
+            android:layout_marginBottom="16dp"
+            android:clipToPadding="false"
+            android:orientation="horizontal"
+            android:overScrollMode="never"
+            android:paddingStart="8dp"
+            android:paddingEnd="8dp"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/item_song_card" />
+
+        <!-- Recently Played Title -->
+        <TextView
+            android:id="@+id/labelRecentlyPlayed"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/recently_played"
+            android:textColor="@android:color/white"
+            android:textSize="20sp"
+            android:textStyle="bold"
+            android:paddingBottom="8dp" />
+
+        <!-- Recently Played Vertical Scroll -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvRecentlyPlayed"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="1"
+            android:overScrollMode="never"
+
+            android:clipToPadding="false"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
+            tools:listitem="@layout/item_song_list" />
+
+    </LinearLayout>
+</androidx.core.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/res/layout-land/fragment_add_song_bottom_sheet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/fragment_add_song_bottom_sheet.xml b/app/src/main/res/layout-land/fragment_add_song_bottom_sheet.xml
new file mode 100644
--- /dev/null	(date 1748195617174)
+++ b/app/src/main/res/layout-land/fragment_add_song_bottom_sheet.xml	(date 1748195617174)
@@ -0,0 +1,147 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="16dp"
+    android:background="@color/black">
+
+    <!-- Judul -->
+    <TextView
+        android:id="@+id/textTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:layout_marginBottom="16dp"
+        android:fontFamily="sans-serif-medium"
+        android:text="@string/upload_song"
+        android:textColor="@android:color/white"
+        android:textSize="18sp"
+        android:textStyle="bold" />
+
+    <!-- Konten utama dibagi horizontal -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <!-- Kiri: Gambar -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:orientation="horizontal"
+            android:gravity="center">
+
+            <ImageView
+                android:id="@+id/imgUpload"
+                android:layout_width="144dp"
+                android:layout_height="144dp"
+                android:layout_marginEnd="8dp"
+                android:scaleType="centerCrop"
+                android:src="@drawable/photo_upload"
+                android:contentDescription="@string/photo_upload"/>
+
+            <ImageView
+                android:id="@+id/btnUploadFile"
+                android:layout_width="144dp"
+                android:layout_height="144dp"
+                android:layout_marginStart="16dp"
+                android:scaleType="centerCrop"
+                android:src="@drawable/file_upload"
+                android:contentDescription="@string/file_upload"/>
+        </LinearLayout>
+
+        <!-- Kanan: Formulir -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:orientation="vertical"
+            android:paddingStart="16dp"
+            android:paddingTop="8dp">
+
+            <!-- Label Title -->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/title_add_edit_song"
+                android:textColor="@android:color/white"
+                android:textStyle="bold"
+                android:layout_marginTop="8dp"/>
+
+            <!-- Input Title -->
+            <EditText
+                android:id="@+id/inputTitle"
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:background="@drawable/add_song_edit_text_border"
+                android:hint="@string/song_title_add_edit_song"
+                android:padding="8dp"
+                android:textSize="12sp"
+                android:textColor="@android:color/white"
+                android:textColorHint="@color/white_gray"
+                android:layout_marginTop="4dp"/>
+
+            <!-- Label Artist -->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/artist_add_edit_song"
+                android:textColor="@android:color/white"
+                android:textStyle="bold"
+                android:layout_marginTop="16dp"/>
+
+            <!-- Input Artist -->
+            <EditText
+                android:id="@+id/inputArtist"
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:background="@drawable/add_song_edit_text_border"
+                android:hint="@string/artist_name_add_edit_song"
+                android:padding="8dp"
+                android:textSize="12sp"
+                android:textColor="@android:color/white"
+                android:textColorHint="@color/white_gray"
+                android:layout_marginTop="4dp"/>
+        </LinearLayout>
+    </LinearLayout>
+
+    <!-- Tombol Bawah -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="end"
+        android:layout_marginTop="16dp"
+        android:orientation="horizontal">
+
+        <Button
+            style="@style/CustomButton"
+            android:id="@+id/btnCancel"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:backgroundTint="@color/gray"
+            android:fontFamily="sans-serif-medium"
+            android:text="@string/cancel"
+            android:textSize="16sp"
+            android:textAllCaps="false"
+            app:cornerRadius="48dp"/>
+
+        <Button
+            style="@style/CustomButton"
+            android:id="@+id/btnSave"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="16dp"
+            android:layout_weight="1"
+            android:background="@drawable/button_green_background"
+            android:fontFamily="sans-serif-medium"
+            android:text="@string/save"
+            android:textSize="16sp"
+            android:textAllCaps="false"
+            app:cornerRadius="48dp"/>
+    </LinearLayout>
+</LinearLayout>
Index: app/src/main/java/com/tubes/purry/utils/MusicNotificationReceiver.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/utils/MusicNotificationReceiver.kt b/app/src/main/java/com/tubes/purry/utils/MusicNotificationReceiver.kt
new file mode 100644
--- /dev/null	(date 1748195617139)
+++ b/app/src/main/java/com/tubes/purry/utils/MusicNotificationReceiver.kt	(date 1748195617139)
@@ -0,0 +1,66 @@
+package com.tubes.purry.utils
+
+import android.content.BroadcastReceiver
+import android.content.Context
+import android.content.Intent
+import android.util.Log
+import com.tubes.purry.ui.player.NowPlayingManager
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.delay
+import kotlinx.coroutines.launch
+
+class MusicNotificationReceiver : BroadcastReceiver() {
+
+    companion object {
+        const val ACTION_PLAY = "com.tubes.purry.ACTION_PLAY"
+        const val ACTION_PAUSE = "com.tubes.purry.ACTION_PAUSE"
+        const val ACTION_NEXT = "com.tubes.purry.ACTION_NEXT"
+        const val ACTION_PREV = "com.tubes.purry.ACTION_PREV"
+        const val ACTION_DISMISS = "ACTION_DISMISS"
+    }
+
+    override fun onReceive(context: Context, intent: Intent) {
+        val action = intent.action
+        val viewModel = NowPlayingManager.viewModel
+
+        if (viewModel == null) {
+            Log.e("MusicNotifReceiver", "ViewModel not initialized")
+            return
+        }
+
+        Log.d("MusicNotifReceiver", "Received action: $action")
+
+        when (action) {
+            ACTION_PLAY, ACTION_PAUSE -> {
+                viewModel.togglePlayPause()
+                Log.d("MusicNotifReceiver", "Toggle play/pause dipanggil")
+            }
+
+            ACTION_NEXT -> {
+                viewModel.nextSong(context)
+                Log.d("MusicNotifReceiver", "Next dipanggil")
+            }
+
+            ACTION_PREV -> {
+                viewModel.previousSong(context)
+                Log.d("MusicNotifReceiver", "Prev dipanggil")
+            }
+
+            ACTION_DISMISS -> {
+                Log.d("NotificationReceiver", "Dismiss action received")
+                viewModel.dismissPlayer()
+                val serviceIntent = Intent(context, MusicNotificationService::class.java)
+                context.stopService(serviceIntent)
+                return
+            }
+        }
+
+        // Update notification untuk action selain dismiss
+        CoroutineScope(Dispatchers.Main).launch {
+            delay(100)
+            val serviceIntent = Intent(context, MusicNotificationService::class.java)
+            context.startService(serviceIntent)
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/utils/DownloadUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/utils/DownloadUtils.kt b/app/src/main/java/com/tubes/purry/utils/DownloadUtils.kt
new file mode 100644
--- /dev/null	(date 1748195617138)
+++ b/app/src/main/java/com/tubes/purry/utils/DownloadUtils.kt	(date 1748195617138)
@@ -0,0 +1,108 @@
+package com.tubes.purry.utils
+
+import android.content.Context
+import android.os.Handler
+import android.os.Looper
+import android.util.Log
+import android.widget.Toast
+import com.tubes.purry.data.local.AppDatabase
+import com.tubes.purry.data.model.OnlineSong
+import com.tubes.purry.data.model.Song
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+import okhttp3.*
+import java.io.File
+import java.io.FileOutputStream
+import java.io.IOException
+
+object DownloadUtils {
+
+    private val client = OkHttpClient()
+
+    fun downloadSong(
+        context: Context,
+        onlineSong: OnlineSong,
+        onComplete: (File?) -> Unit
+    ) {
+        val fileName = "${onlineSong.title}_${onlineSong.artist}.mp3"
+            .replace("[^a-zA-Z0-9._-]".toRegex(), "_")
+
+        val dir = File(context.getExternalFilesDir(null), "PurryMusic")
+        if (!dir.exists()) dir.mkdirs()
+
+        val destFile = File(dir, fileName)
+
+        if (destFile.exists()) {
+            Log.d("DownloadUtils", "File sudah ada: ${destFile.absolutePath}")
+            Handler(Looper.getMainLooper()).post {
+                onComplete(destFile)
+            }
+            return
+        }
+
+        val request = Request.Builder().url(onlineSong.url).build()
+
+        client.newCall(request).enqueue(object : Callback {
+            override fun onFailure(call: Call, e: IOException) {
+                Log.e("DownloadUtils", "Download gagal: ${e.message}")
+                Handler(Looper.getMainLooper()).post {
+                    Toast.makeText(context, "Download gagal: ${e.message}", Toast.LENGTH_SHORT).show()
+                    onComplete(null)
+                }
+            }
+
+            override fun onResponse(call: Call, response: Response) {
+                if (!response.isSuccessful) {
+                    Log.e("DownloadUtils", "Response gagal: ${response.code}")
+                    Handler(Looper.getMainLooper()).post {
+                        Toast.makeText(context, "Download gagal: ${response.code}", Toast.LENGTH_SHORT).show()
+                        onComplete(null)
+                    }
+                    return
+                }
+
+                try {
+                    val input = response.body?.byteStream()
+                    val output = FileOutputStream(destFile)
+
+                    input?.copyTo(output)
+
+                    output.flush()
+                    output.close()
+                    input?.close()
+
+                    Log.d("DownloadUtils", "Download selesai: ${destFile.absolutePath}")
+
+                    val song = Song(
+                        id = onlineSong.id.toString(),
+                        title = onlineSong.title,
+                        artist = onlineSong.artist,
+                        filePath = destFile.absolutePath,
+                        coverPath = onlineSong.artwork,
+                        duration = parseDuration(onlineSong.duration),
+                        isLiked = false,
+                        isLocal = true,
+                        lastPlayedAt = 0L
+                    )
+
+                    CoroutineScope(Dispatchers.IO).launch {
+                        AppDatabase.getDatabase(context).songDao().insert(song)
+                        withContext(Dispatchers.Main) {
+                            Toast.makeText(context, "Berhasil disimpan ke: ${destFile.absolutePath}", Toast.LENGTH_SHORT).show()
+                            onComplete(destFile)
+                        }
+                    }
+
+                } catch (e: Exception) {
+                    Log.e("DownloadUtils", "Gagal menyimpan file: ${e.message}")
+                    Handler(Looper.getMainLooper()).post {
+                        Toast.makeText(context, "Gagal menyimpan file", Toast.LENGTH_SHORT).show()
+                        onComplete(null)
+                    }
+                }
+            }
+        })
+    }
+}
Index: app/src/main/java/com/tubes/purry/utils/FileUtil.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/utils/FileUtil.kt b/app/src/main/java/com/tubes/purry/utils/FileUtil.kt
new file mode 100644
--- /dev/null	(date 1748195617138)
+++ b/app/src/main/java/com/tubes/purry/utils/FileUtil.kt	(date 1748195617138)
@@ -0,0 +1,92 @@
+package com.tubes.purry.utils
+
+import android.content.Context
+import android.graphics.Bitmap
+import android.graphics.Color
+import com.google.zxing.BarcodeFormat
+import com.google.zxing.EncodeHintType
+import com.google.zxing.MultiFormatWriter
+import com.google.zxing.common.BitMatrix
+import android.content.Intent
+import android.net.Uri
+import androidx.core.content.FileProvider
+import java.io.File
+import java.io.FileOutputStream
+
+fun generateQRCodeBitmap(content: String, width: Int = 512, height: Int = 512): Bitmap {
+    val hints = hashMapOf<EncodeHintType, Any>().apply {
+        put(EncodeHintType.MARGIN, 1) // QR padding kecil
+    }
+
+    val bitMatrix: BitMatrix = MultiFormatWriter().encode(
+        content,
+        BarcodeFormat.QR_CODE,
+        width,
+        height,
+        hints
+    )
+
+    val bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.RGB_565)
+    for (x in 0 until width) {
+        for (y in 0 until height) {
+            bitmap.setPixel(x, y, if (bitMatrix[x, y]) Color.BLACK else Color.WHITE)
+        }
+    }
+    return bitmap
+}
+
+fun previewAndShareQrCode(context: Context, serverId: Int, songTitle: String, artist: String) {
+    val uriString = "purrytify://song/$serverId"
+    val qrBitmap: Bitmap = generateQRCodeBitmap(uriString)
+
+    val fileName = "qr_preview_srv_$serverId.png"
+    val file = File(context.cacheDir, fileName)
+
+    FileOutputStream(file).use { out ->
+        qrBitmap.compress(Bitmap.CompressFormat.PNG, 100, out)
+    }
+
+    val uri: Uri = FileProvider.getUriForFile(
+        context,
+        "${context.packageName}.fileprovider",
+        file
+    )
+
+    val intent = Intent(Intent.ACTION_SEND).apply {
+        type = "image/png"
+        putExtra(Intent.EXTRA_STREAM, uri)
+        putExtra(Intent.EXTRA_TEXT, "Scan QR ini untuk membuka \"$songTitle\" oleh $artist di Purrytify 🎶")
+        addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION or Intent.FLAG_GRANT_WRITE_URI_PERMISSION)
+        clipData = android.content.ClipData.newRawUri("QR", uri)
+    }
+
+    context.startActivity(Intent.createChooser(intent, "Bagikan QR Lagu"))
+}
+
+
+
+fun shareQrCode(context: Context, songId: String, songTitle: String, artist: String) {
+    val uriString = "purrytify://song/$songId"
+    val qrBitmap: Bitmap = generateQRCodeBitmap(uriString)
+
+    val fileName = "qr_song_${songId}.png"
+    val file = File(context.cacheDir, fileName)
+    FileOutputStream(file).use { out ->
+        qrBitmap.compress(Bitmap.CompressFormat.PNG, 100, out)
+    }
+
+    val uri: Uri = FileProvider.getUriForFile(
+        context,
+        "${context.packageName}.fileprovider", // pastikan match dengan manifest
+        file
+    )
+
+    val intent = Intent(Intent.ACTION_SEND).apply {
+        type = "image/png"
+        putExtra(Intent.EXTRA_STREAM, uri)
+        putExtra(Intent.EXTRA_TEXT, "Scan QR ini untuk membuka \"$songTitle\" oleh $artist di Purrytify 🎶")
+        addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
+    }
+
+    context.startActivity(Intent.createChooser(intent, "Bagikan QR Lagu"))
+}
Index: app/src/main/res/layout-land/fragment_top_chart_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout-land/fragment_top_chart_detail.xml b/app/src/main/res/layout-land/fragment_top_chart_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617178)
+++ b/app/src/main/res/layout-land/fragment_top_chart_detail.xml	(date 1748195617178)
@@ -0,0 +1,132 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/black">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@android:color/black"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <LinearLayout
+        android:id="@+id/landscapeContent"
+        android:layout_width="match_parent"
+        android:layout_height="375dp"
+        android:layout_marginTop="4dp"
+        android:layout_marginBottom="36dp"
+        android:orientation="horizontal"
+        android:padding="4dp"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <!-- Left Column -->
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="27dp"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@android:color/transparent"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            app:navigationIconTint="@android:color/white"
+            app:title="" />
+
+        <LinearLayout
+            android:layout_width="43dp"
+            android:layout_height="347dp"
+            android:layout_weight="1"
+            android:gravity="top|center_horizontal"
+            android:orientation="vertical">
+
+            <ImageView
+                android:id="@+id/ivChartCover"
+                android:layout_width="200dp"
+                android:layout_height="200dp"
+                android:layout_marginBottom="12dp"
+                android:contentDescription="@string/chart_cover"
+                android:scaleType="centerCrop"
+                android:src="@drawable/cov_playlist_global" />
+
+            <TextView
+                android:id="@+id/tvChartTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Top 50"
+                android:textColor="@android:color/white"
+                android:textSize="24sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/tvChartDescription"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="12dp"
+                android:text="Global • Apr 2025 • 2h 55min"
+                android:textColor="#CCCCCC"
+                android:textSize="14sp" />
+
+            <LinearLayout
+                android:id="@+id/chartActionBar"
+                android:layout_width="187dp"
+                android:layout_height="48dp"
+                android:layout_marginBottom="12dp"
+                android:gravity="center"
+                android:orientation="horizontal">
+
+                <ImageButton
+                    android:id="@+id/btnShuffle"
+                    android:layout_width="36dp"
+                    android:layout_height="36dp"
+                    android:layout_marginEnd="16dp"
+                    android:background="@drawable/bg_circle_gray"
+                    android:contentDescription="@string/shuffle"
+                    android:src="@drawable/ic_shuffle"
+                    app:tint="@android:color/white" />
+
+                <ImageButton
+                    android:id="@+id/btnPlay"
+                    android:layout_width="36dp"
+                    android:layout_height="36dp"
+                    android:layout_marginEnd="12dp"
+                    android:background="@drawable/bg_circle_green"
+                    android:contentDescription="@string/play"
+                    android:src="@drawable/ic_play"
+                    app:tint="@android:color/white" />
+
+                <ImageButton
+                    android:id="@+id/btnDownloadAll"
+                    android:layout_width="36dp"
+                    android:layout_height="36dp"
+                    android:background="@drawable/bg_circle_gray"
+                    android:contentDescription="@string/download_all"
+                    android:src="@drawable/ic_download"
+                    app:tint="@android:color/white" />
+            </LinearLayout>
+        </LinearLayout>
+
+        <!-- Right Column (Songs) -->
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rvChartSongs"
+            android:layout_width="0dp"
+            android:layout_height="346dp"
+            android:layout_weight="2"
+            android:clipToPadding="false"
+            android:contentDescription="@string/songs"
+            android:nestedScrollingEnabled="false"
+            android:paddingStart="16dp"
+            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
+
+    </LinearLayout>
+
+    <!-- Mini Player -->
+    <FrameLayout
+        android:id="@+id/miniPlayerContainer"
+        android:layout_width="match_parent"
+        android:layout_height="64dp"
+        android:layout_gravity="bottom"
+        android:background="#222"
+        android:visibility="gone" />
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
Index: app/src/main/res/drawable/ic_qr_scan.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_qr_scan.xml b/app/src/main/res/drawable/ic_qr_scan.xml
new file mode 100644
--- /dev/null	(date 1748195617160)
+++ b/app/src/main/res/drawable/ic_qr_scan.xml	(date 1748195617160)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:pathData="M15,3H21V8H19V5H15V3ZM9,3V5H5V8H3V3H9ZM15,21V19H19V16H21V21H15ZM9,21H3V16H5V19H9V21ZM3,11H21V13H3V11Z"
+      android:fillColor="#ffffff"/>
+</vector>
Index: app/src/main/res/drawable/ic_downloaded.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_downloaded.xml b/app/src/main/res/drawable/ic_downloaded.xml
new file mode 100644
--- /dev/null	(date 1748195617156)
+++ b/app/src/main/res/drawable/ic_downloaded.xml	(date 1748195617156)
@@ -0,0 +1,16 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="16dp"
+    android:height="16dp"
+    android:viewportWidth="16"
+    android:viewportHeight="16">
+    <path
+        android:pathData="M8,8m-8,0a8,8 0,1 1,16 0a8,8 0,1 1,-16 0"
+        android:fillColor="#1DB954"/>
+    <path
+        android:pathData="M7.837,4V11.5M7.837,11.5L10.682,9.167M7.837,11.5L5,9.167"
+        android:strokeLineJoin="round"
+        android:strokeWidth="1.5"
+        android:fillColor="#00000000"
+        android:strokeColor="#000000"
+        android:strokeLineCap="round"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_share.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_share.xml b/app/src/main/res/drawable/ic_share.xml
new file mode 100644
--- /dev/null	(date 1748195617161)
+++ b/app/src/main/res/drawable/ic_share.xml	(date 1748195617161)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="16dp"
+    android:height="16dp"
+    android:viewportWidth="16"
+    android:viewportHeight="16">
+  <path
+      android:pathData="M12,10.72C11.493,10.72 11.04,10.92 10.693,11.233L5.94,8.467C5.973,8.314 6,8.16 6,8C6,7.84 5.973,7.687 5.94,7.534L10.64,4.793C11,5.127 11.473,5.333 12,5.333C13.107,5.333 14,4.44 14,3.333C14,2.227 13.107,1.334 12,1.334C10.893,1.334 10,2.227 10,3.333C10,3.493 10.027,3.647 10.06,3.8L5.36,6.54C5,6.207 4.527,6 4,6C2.893,6 2,6.893 2,8C2,9.107 2.893,10 4,10C4.527,10 5,9.793 5.36,9.46L10.107,12.233C10.073,12.373 10.053,12.52 10.053,12.667C10.053,13.74 10.927,14.613 12,14.613C13.073,14.613 13.947,13.74 13.947,12.667C13.947,11.594 13.073,10.72 12,10.72Z"
+      android:fillColor="#ffffff"/>
+</vector>
Index: app/src/main/res/drawable/ic_analytics.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_analytics.xml b/app/src/main/res/drawable/ic_analytics.xml
new file mode 100644
--- /dev/null	(date 1748195617153)
+++ b/app/src/main/res/drawable/ic_analytics.xml	(date 1748195617153)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="@color/primary_green">
+
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M5,9.2h3V19H5zM10.6,5h2.8v14h-2.8zm5.6,8H19v6h-2.8z"/>
+
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_arrow_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_arrow_right.xml b/app/src/main/res/drawable/ic_arrow_right.xml
new file mode 100644
--- /dev/null	(date 1748195617153)
+++ b/app/src/main/res/drawable/ic_arrow_right.xml	(date 1748195617153)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="@color/text_secondary">
+
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M10,6L8.59,7.41 13.17,12l-4.58,4.59L10,18l6,-6z"/>
+
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_chart.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_chart.xml b/app/src/main/res/drawable/ic_chart.xml
new file mode 100644
--- /dev/null	(date 1748195617154)
+++ b/app/src/main/res/drawable/ic_chart.xml	(date 1748195617154)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="@color/primary_green">
+
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M3.5,18.49l6,-6.01 4,4L22,6.92l-1.41,-1.41 -7.09,7.97 -4,-4L2,16.99z"/>
+
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_export.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_export.xml b/app/src/main/res/drawable/ic_export.xml
new file mode 100644
--- /dev/null	(date 1748195617156)
+++ b/app/src/main/res/drawable/ic_export.xml	(date 1748195617156)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="@color/primary_green">
+
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M9,3L5,6.99h3V14h2V6.99h3L9,3zM16,17.01V10h-2v7.01h-3L15,21l4,-3.99h-3z"/>
+
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_circle_green.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_circle_green.xml b/app/src/main/res/drawable/bg_circle_green.xml
new file mode 100644
--- /dev/null	(date 1748195617143)
+++ b/app/src/main/res/drawable/bg_circle_green.xml	(date 1748195617143)
@@ -0,0 +1,4 @@
+<!-- res/drawable/bg_circle_gray.xml -->
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="oval">
+    <solid android:color="@color/green" />
+</shape>
Index: app/src/main/res/drawable/ic_music_note.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_music_note.xml b/app/src/main/res/drawable/ic_music_note.xml
new file mode 100644
--- /dev/null	(date 1748195617158)
+++ b/app/src/main/res/drawable/ic_music_note.xml	(date 1748195617158)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="@color/text_secondary">
+
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,3v10.55c-0.59,-0.34 -1.27,-0.55 -2,-0.55 -2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4V7h4V3h-6z"/>
+
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/bg_circle_gray.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_circle_gray.xml b/app/src/main/res/drawable/bg_circle_gray.xml
new file mode 100644
--- /dev/null	(date 1748195617142)
+++ b/app/src/main/res/drawable/bg_circle_gray.xml	(date 1748195617142)
@@ -0,0 +1,4 @@
+<!-- res/drawable/bg_circle_gray.xml -->
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="oval">
+    <solid android:color="#444444" />
+</shape>
Index: app/src/main/res/drawable/ic_arrow_back.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_arrow_back.xml b/app/src/main/res/drawable/ic_arrow_back.xml
new file mode 100644
--- /dev/null	(date 1748195617153)
+++ b/app/src/main/res/drawable/ic_arrow_back.xml	(date 1748195617153)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_download.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_download.xml b/app/src/main/res/drawable/ic_download.xml
new file mode 100644
--- /dev/null	(date 1748195617155)
+++ b/app/src/main/res/drawable/ic_download.xml	(date 1748195617155)
@@ -0,0 +1,17 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="16dp"
+    android:height="16dp"
+    android:viewportWidth="16"
+    android:viewportHeight="16">
+  <group>
+    <clip-path
+        android:pathData="M0,0h16v16h-16z"/>
+    <path
+        android:pathData="M8,3.765V11.177M8,11.177L10.823,8.706M8,11.177L5.176,8.706M8,15.059C11.899,15.059 15.059,11.899 15.059,8C15.059,4.102 11.899,0.941 8,0.941C4.101,0.941 0.941,4.102 0.941,8C0.941,11.899 4.101,15.059 8,15.059Z"
+        android:strokeLineJoin="round"
+        android:strokeWidth="1.5"
+        android:fillColor="#00000000"
+        android:strokeColor="#ffffff"
+        android:strokeLineCap="round"/>
+  </group>
+</vector>
Index: app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationSongAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationSongAdapter.kt b/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationSongAdapter.kt
new file mode 100644
--- /dev/null	(date 1748195617134)
+++ b/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationSongAdapter.kt	(date 1748195617134)
@@ -0,0 +1,144 @@
+package com.tubes.purry.ui.recommendation
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageButton
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.TextView
+import android.widget.Toast
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.data.local.AppDatabase
+import com.tubes.purry.data.model.OnlineSong
+import com.tubes.purry.data.model.Song
+import com.tubes.purry.utils.DownloadUtils
+import com.tubes.purry.utils.parseDuration
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import java.io.File
+import java.util.UUID
+
+class RecommendationSongAdapter(
+    private var songs: List<Song>,
+    private val context: Context,
+    private val onClick: (Song) -> Unit,
+    private val country: String
+) : RecyclerView.Adapter<RecommendationSongAdapter.ViewHolder>() {
+
+    private val downloadingSongs = mutableSetOf<String>()
+    private val downloadedSongs = mutableSetOf<String>()
+
+    inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        private val cover: ImageView = view.findViewById(R.id.imgCover)
+        private val title: TextView = view.findViewById(R.id.tvTitle)
+        private val artist: TextView = view.findViewById(R.id.tvArtist)
+        private val btnDownload: ImageButton = view.findViewById(R.id.btnEdit)
+        private val progressBar: ProgressBar = view.findViewById(R.id.downloadProgress)
+        private val btnDelete: ImageButton = view.findViewById(R.id.btnDelete)
+
+        fun bind(song: Song) {
+            title.text = song.title
+            artist.text = song.artist
+
+            Glide.with(itemView.context)
+                .load(song.coverPath ?: R.drawable.album_default)
+                .placeholder(R.drawable.album_default)
+                .into(cover)
+
+            itemView.setOnClickListener {
+                onClick(song)
+            }
+
+            btnDelete.visibility = View.GONE
+
+            when {
+                downloadingSongs.contains(song.id) -> {
+                    btnDownload.visibility = View.INVISIBLE
+                    progressBar.visibility = View.VISIBLE
+                }
+                downloadedSongs.contains(song.id) -> {
+                    progressBar.visibility = View.GONE
+                    btnDownload.visibility = View.VISIBLE
+                    btnDownload.setImageResource(R.drawable.ic_downloaded)
+                    btnDownload.setColorFilter(itemView.context.getColor(android.R.color.white))
+                    btnDownload.setOnClickListener(null)
+                }
+                else -> {
+                    progressBar.visibility = View.GONE
+                    btnDownload.visibility = View.VISIBLE
+                    btnDownload.setImageResource(R.drawable.ic_download)
+                    btnDownload.setColorFilter(itemView.context.getColor(android.R.color.white))
+                    btnDownload.setOnClickListener {
+                        downloadingSongs.add(song.id)
+                        notifyItemChanged(adapterPosition)
+
+                        val online = OnlineSong(
+                            id = song.serverId ?: 0,
+                            title = song.title,
+                            artist = song.artist,
+                            url = song.filePath ?: "",
+                            artwork = song.coverPath ?: "",
+                            duration = song.duration.toString(),
+                            rank = 0,
+                            country = country
+                        )
+
+                        DownloadUtils.downloadSong(context, online) { file ->
+                            if (file != null) {
+                                Toast.makeText(context, "Unduh selesai: ${song.title}", Toast.LENGTH_SHORT).show()
+                                val localSong = song.copy(
+                                    id = UUID.randomUUID().toString(),
+                                    filePath = file.absolutePath,
+                                    isLocal = true
+                                )
+                                CoroutineScope(Dispatchers.IO).launch {
+                                    AppDatabase.getDatabase(context).songDao().insert(localSong)
+                                }
+                                downloadedSongs.add(song.id)
+                            } else {
+                                Toast.makeText(context, "Gagal download lagu", Toast.LENGTH_SHORT).show()
+                            }
+                            downloadingSongs.remove(song.id)
+                            notifyItemChanged(adapterPosition)
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_song_list, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.bind(songs[position])
+    }
+
+    override fun getItemCount(): Int = songs.size
+
+    fun updateSongs(newSongs: List<Song>) {
+        songs = newSongs
+        notifyDataSetChanged()
+    }
+
+    fun checkDownloadedStatus() {
+        downloadedSongs.clear()
+        songs.forEach {
+            val fileName = "${it.title}_${it.artist}.mp3"
+                .replace("[^a-zA-Z0-9._-]".toRegex(), "_")
+            val file = File(context.getExternalFilesDir(null), "PurryMusic/$fileName")
+            if (file.exists()) {
+                downloadedSongs.add(it.id)
+            }
+        }
+        notifyDataSetChanged()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationDetailActivity.kt b/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617133)
+++ b/app/src/main/java/com/tubes/purry/ui/recommendation/RecommendationDetailActivity.kt	(date 1748195617133)
@@ -0,0 +1,241 @@
+package com.tubes.purry.ui.recommendation
+
+import android.os.Bundle
+import android.util.Log
+import android.widget.Toast
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.lifecycle.asLiveData
+import androidx.lifecycle.lifecycleScope
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.tubes.purry.PurrytifyApplication
+import com.tubes.purry.R
+import com.tubes.purry.data.local.AppDatabase
+import com.tubes.purry.data.model.RecommendationType
+import com.tubes.purry.data.model.Song
+import com.tubes.purry.data.model.toTemporarySong
+import com.tubes.purry.data.remote.ApiClient
+import com.tubes.purry.databinding.ActivityRecommendationDetailBinding
+import com.tubes.purry.ui.library.SongViewModel
+import com.tubes.purry.ui.library.SongViewModelFactory
+import com.tubes.purry.ui.player.NowPlayingViewModel
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+
+class RecommendationDetailActivity : AppCompatActivity() {
+    private lateinit var binding: ActivityRecommendationDetailBinding
+    private lateinit var adapter: RecommendationSongAdapter
+    private lateinit var nowPlayingViewModel: NowPlayingViewModel
+    private var currentSongs: List<Song> = emptyList()
+    private lateinit var sessionManager: SessionManager
+
+    private val songViewModel: SongViewModel by viewModels {
+        SongViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityRecommendationDetailBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        sessionManager = SessionManager(this)
+        nowPlayingViewModel = (application as PurrytifyApplication).nowPlayingViewModel
+
+        setupUI()
+        loadRecommendations()
+    }
+
+    private fun setupUI() {
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener { onBackPressed() }
+
+        adapter = RecommendationSongAdapter(
+            songs = emptyList(),
+            context = this,
+            onClick = { song -> onSongClicked(song) },
+            country = "ID" // Bisa diganti dengan dari profile jika perlu
+        )
+
+        binding.rvRecommendationSongs.apply {
+            adapter = this@RecommendationDetailActivity.adapter
+            layoutManager = LinearLayoutManager(this@RecommendationDetailActivity)
+        }
+    }
+
+    private fun loadRecommendations() {
+        val recommendationType = RecommendationType.valueOf(
+            intent.getStringExtra("recommendation_type") ?: RecommendationType.DAILY_MIX.name
+        )
+        val title = intent.getStringExtra("title") ?: "Recommendation"
+        val description = intent.getStringExtra("description") ?: ""
+        val imageRes = intent.getIntExtra("image_res", R.drawable.cov_playlist_global)
+
+        binding.ivRecommendationCover.setImageResource(imageRes)
+        binding.tvRecommendationTitle.text = title
+        binding.tvRecommendationDescription.text = description
+
+        when (recommendationType) {
+            RecommendationType.DAILY_MIX -> loadDailyMix()
+            RecommendationType.RECENTLY_PLAYED_MIX -> loadRecentlyPlayedMix()
+            RecommendationType.LIKED_SONGS_MIX -> loadLikedSongsMix()
+            RecommendationType.DISCOVERY_MIX -> loadDiscoveryMix()
+        }
+    }
+
+    private fun loadDailyMix() {
+        lifecycleScope.launch {
+            try {
+                val onlineSongs = ApiClient.apiService.getTopSongsGlobal()
+                val dailyMixSongs = onlineSongs.shuffled().take(25).map { it.toTemporarySong() }
+
+                currentSongs = dailyMixSongs
+                adapter.updateSongs(dailyMixSongs)
+                adapter.checkDownloadedStatus()
+
+                Log.d("RecommendationDetail", "Daily mix loaded: ${dailyMixSongs.size} songs")
+            } catch (e: Exception) {
+                Log.e("RecommendationDetail", "Error loading daily mix", e)
+                Toast.makeText(this@RecommendationDetailActivity, "Failed to load daily mix", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun loadRecentlyPlayedMix() {
+        songViewModel.recentlyPlayed.observe(this) { localRecentSongs ->
+            lifecycleScope.launch {
+                try {
+                    val recentSongs = localRecentSongs.take(20)
+                    val onlineSongs = ApiClient.apiService.getTopSongsGlobal()
+                    val additionalSongs = onlineSongs.shuffled().take(10).map { it.toTemporarySong() }
+
+                    val mixedSongs = (recentSongs + additionalSongs).distinctBy { it.id }
+                    currentSongs = mixedSongs
+                    adapter.updateSongs(mixedSongs)
+                    adapter.checkDownloadedStatus()
+
+                    Log.d("RecommendationDetail", "Recently played mix loaded: ${mixedSongs.size} songs")
+                } catch (e: Exception) {
+                    Log.e("RecommendationDetail", "Error loading recently played songs", e)
+                    currentSongs = localRecentSongs
+                    adapter.updateSongs(localRecentSongs)
+                    adapter.checkDownloadedStatus()
+                }
+            }
+        }
+    }
+
+    private fun loadLikedSongsMix() {
+        val db = AppDatabase.getDatabase(applicationContext)
+        val userId = sessionManager.getUserId()
+
+        if (userId != null) {
+            db.LikedSongDao().getLikedSongsByUser(userId).observe(this) { likedSongs ->
+                lifecycleScope.launch {
+                    try {
+                        val onlineSongs = ApiClient.apiService.getTopSongsGlobal()
+
+                        val similarOnlineSongs = likedSongs.flatMap { likedSong ->
+                            onlineSongs.filter { onlineSong ->
+                                onlineSong.title.contains(likedSong.title, true) ||
+                                        likedSong.title.contains(onlineSong.title, true) ||
+                                        onlineSong.artist.contains(likedSong.artist, true) ||
+                                        likedSong.artist.contains(onlineSong.artist, true)
+                            }.map { it.toTemporarySong() }
+                        }
+
+                        val uniqueSimilarSongs = similarOnlineSongs.distinctBy { it.id }
+                        val mixedSongs = (likedSongs + uniqueSimilarSongs).distinctBy {
+                            "${it.title.lowercase()}-${it.artist.lowercase()}"
+                        }.take(25)
+
+                        currentSongs = mixedSongs
+                        adapter.updateSongs(mixedSongs)
+                        adapter.checkDownloadedStatus()
+
+                        Log.d("RecommendationDetail", "Liked songs mix loaded: ${mixedSongs.size} songs")
+
+                    } catch (e: Exception) {
+                        Log.e("RecommendationDetail", "Error loading similar online songs", e)
+                        currentSongs = likedSongs
+                        adapter.updateSongs(likedSongs)
+                        adapter.checkDownloadedStatus()
+                    }
+                }
+            }
+        } else {
+            Toast.makeText(this, "Please login to see liked songs mix", Toast.LENGTH_SHORT).show()
+        }
+    }
+
+    private fun loadDiscoveryMix() {
+        songViewModel.allSongs.observe(this) { allLocalSongs ->
+            songViewModel.recentlyPlayed.observe(this) { recentlyPlayedSongs ->
+                lifecycleScope.launch {
+                    try {
+                        val recentlyPlayedIds = recentlyPlayedSongs.map { it.id }.toSet()
+                        val unplayedLocalSongs = allLocalSongs.filter {
+                            it.id !in recentlyPlayedIds
+                        }.shuffled().take(15)
+
+                        val onlineSongs = ApiClient.apiService.getTopSongsGlobal()
+                        val randomOnlineSongs = onlineSongs.shuffled().take(15).map { it.toTemporarySong() }
+
+                        val discoveryMix = (unplayedLocalSongs + randomOnlineSongs)
+                            .distinctBy { it.id }
+                            .shuffled()
+                            .take(30)
+
+                        currentSongs = discoveryMix
+                        adapter.updateSongs(discoveryMix)
+                        adapter.checkDownloadedStatus()
+
+                        Log.d("RecommendationDetail", "Discovery mix loaded: ${discoveryMix.size} songs")
+
+                    } catch (e: Exception) {
+                        Log.e("RecommendationDetail", "Error loading discovery mix", e)
+                        val recentlyPlayedIds = recentlyPlayedSongs.map { it.id }.toSet()
+                        val fallbackSongs = allLocalSongs.filter {
+                            it.id !in recentlyPlayedIds
+                        }.shuffled().take(30)
+
+                        currentSongs = fallbackSongs
+                        adapter.updateSongs(fallbackSongs)
+                        adapter.checkDownloadedStatus()
+                        Toast.makeText(this@RecommendationDetailActivity, "Discovery mix using local songs only", Toast.LENGTH_SHORT).show()
+                    }
+                }
+            }
+        }
+    }
+
+    private fun onSongClicked(song: Song) {
+        Log.d("RecommendationDetail", "Song clicked: ${song.title}")
+        Log.d("RecommendationDetail", "Song ID: ${song.id}")
+        Log.d("RecommendationDetail", "Song isLocal: ${song.isLocal}")
+        Log.d("RecommendationDetail", "Song serverId: ${song.serverId}")
+        Log.d("RecommendationDetail", "Current songs count: ${currentSongs.size}")
+
+        if (currentSongs.isNotEmpty()) {
+            try {
+                nowPlayingViewModel.setQueueFromClickedSong(song, currentSongs, this)
+                nowPlayingViewModel.playSong(song, this)
+
+                if (song.isLocal) {
+                    songViewModel.markAsPlayed(song)
+                }
+
+                Log.d("RecommendationDetail", "Song playback initiated successfully")
+                Toast.makeText(this, "Playing: ${song.title}", Toast.LENGTH_SHORT).show()
+
+            } catch (e: Exception) {
+                Log.e("RecommendationDetail", "Error playing song", e)
+                Toast.makeText(this, "Error playing song: ${e.message}", Toast.LENGTH_SHORT).show()
+            }
+        } else {
+            Log.e("RecommendationDetail", "No songs in current queue")
+            Toast.makeText(this, "No songs available to play", Toast.LENGTH_SHORT).show()
+        }
+    }
+}
Index: app/src/main/java/com/tubes/purry/ui/qr/ScanQRActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/qr/ScanQRActivity.kt b/app/src/main/java/com/tubes/purry/ui/qr/ScanQRActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617132)
+++ b/app/src/main/java/com/tubes/purry/ui/qr/ScanQRActivity.kt	(date 1748195617132)
@@ -0,0 +1,104 @@
+package com.tubes.purry.ui.qr
+
+import android.Manifest
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.net.Uri
+import android.os.Bundle
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import com.google.zxing.integration.android.IntentIntegrator
+import com.tubes.purry.MainActivity
+
+class ScanQRActivity : AppCompatActivity() {
+
+    companion object {
+        private const val CAMERA_PERMISSION_REQUEST_CODE = 1001
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+
+        // Periksa izin kamera
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
+            != PackageManager.PERMISSION_GRANTED
+        ) {
+            ActivityCompat.requestPermissions(
+                this,
+                arrayOf(Manifest.permission.CAMERA),
+                CAMERA_PERMISSION_REQUEST_CODE
+            )
+        } else {
+            startScanner()
+        }
+    }
+
+    private fun startScanner() {
+        IntentIntegrator(this).apply {
+            setPrompt("Arahkan kamera ke QR lagu")
+            setOrientationLocked(true)
+            setBeepEnabled(true)
+            initiateScan()
+        }
+    }
+
+    override fun onRequestPermissionsResult(
+        requestCode: Int,
+        permissions: Array<out String>,
+        grantResults: IntArray
+    ) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == CAMERA_PERMISSION_REQUEST_CODE) {
+            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                startScanner()
+            } else {
+                Toast.makeText(this, "Izin kamera diperlukan untuk scan QR", Toast.LENGTH_LONG).show()
+                finish()
+            }
+        }
+    }
+
+    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
+        val result = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)
+        if (result != null) {
+            if (result.contents != null) {
+                try {
+                    val scannedUri = Uri.parse(result.contents)
+
+                    if (scannedUri.scheme == "purrytify" && scannedUri.host == "song") {
+                        val rawId = scannedUri.lastPathSegment
+                        val idInt = rawId?.toIntOrNull()
+
+                        if (idInt != null && idInt > 0) {
+                            val deepLinkIntent = Intent(Intent.ACTION_VIEW).apply {
+                                setClass(this@ScanQRActivity, MainActivity::class.java)
+                                setData(Uri.parse("purrytify://song/$idInt"))
+                                addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP)
+                            }
+
+                            startActivity(deepLinkIntent)
+                            finish()
+                        } else {
+                            Toast.makeText(this, "ID lagu tidak valid: $rawId", Toast.LENGTH_SHORT).show()
+                            finish()
+                        }
+                    } else {
+                        Toast.makeText(this, "QR tidak valid untuk lagu Purrytify", Toast.LENGTH_SHORT).show()
+                        finish()
+                    }
+                } catch (e: Exception) {
+                    Toast.makeText(this, "QR tidak dikenali", Toast.LENGTH_SHORT).show()
+                    finish()
+                }
+            } else {
+                Toast.makeText(this, "Scan dibatalkan", Toast.LENGTH_SHORT).show()
+                finish()
+            }
+        } else {
+            super.onActivityResult(requestCode, resultCode, data)
+        }
+    }
+
+}
Index: app/src/main/java/com/tubes/purry/ui/analytics/TopSongsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/TopSongsActivity.kt b/app/src/main/java/com/tubes/purry/ui/analytics/TopSongsActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617107)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/TopSongsActivity.kt	(date 1748195617107)
@@ -0,0 +1,123 @@
+package com.tubes.purry.ui.analytics
+
+import android.os.Bundle
+import android.view.View
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.lifecycle.lifecycleScope
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivityTopSongsBinding
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class TopSongsActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivityTopSongsBinding
+    private lateinit var sessionManager: SessionManager
+    private lateinit var adapter: TopSongsAdapter
+    private var currentMonth: String = ""
+
+    private val viewModel: SoundCapsuleViewModel by viewModels {
+        SoundCapsuleViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityTopSongsBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        sessionManager = SessionManager(this)
+        currentMonth = intent.getStringExtra("month") ?: getCurrentMonth()
+
+        setupUI()
+        loadTopSongs()
+    }
+
+    private fun setupUI() {
+        // Setup toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener {
+            onBackPressed()
+        }
+
+        // Set month title
+        val monthName = formatMonthDisplay(currentMonth)
+        binding.tvMonth.text = monthName
+
+        // Setup RecyclerView
+        adapter = TopSongsAdapter()
+        binding.rvTopSongs.apply {
+            adapter = this@TopSongsActivity.adapter
+            layoutManager = LinearLayoutManager(this@TopSongsActivity)
+        }
+    }
+
+    private fun loadTopSongs() {
+        val userId = sessionManager.getUserId()
+        if (userId == null) {
+            showError("User not logged in")
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        lifecycleScope.launch {
+            try {
+                val analytics = viewModel.getMonthlyAnalytics(userId, currentMonth)
+                val topSongs = viewModel.getTopSongs(userId, currentMonth, 50)
+
+                if (topSongs.isEmpty()) {
+                    showNoData()
+                } else {
+                    // Update header
+                    binding.tvSummary.text = "You played ${analytics.totalSongsPlayed} different songs this month.\nHere are your Top 5 Songs"
+
+                    // Update list
+                    adapter.submitList(topSongs.take(5))
+                    binding.contentLayout.visibility = View.VISIBLE
+                    binding.tvNoData.visibility = View.GONE
+                }
+            } catch (e: Exception) {
+                showError("Failed to load data: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun showNoData() {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = "No songs data available for ${formatMonthDisplay(currentMonth)}"
+    }
+
+    private fun showError(message: String) {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = message
+    }
+
+    private fun formatMonthDisplay(month: String): String {
+        return try {
+            val inputFormat = SimpleDateFormat("yyyy-MM", Locale.getDefault())
+            val outputFormat = SimpleDateFormat("MMMM yyyy", Locale.getDefault())
+            val date = inputFormat.parse(month)
+            outputFormat.format(date ?: Date())
+        } catch (e: Exception) {
+            month
+        }
+    }
+
+    private fun getCurrentMonth(): String {
+        return SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/chart/OnlineSongListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/chart/OnlineSongListAdapter.kt b/app/src/main/java/com/tubes/purry/ui/chart/OnlineSongListAdapter.kt
new file mode 100644
--- /dev/null	(date 1748195617112)
+++ b/app/src/main/java/com/tubes/purry/ui/chart/OnlineSongListAdapter.kt	(date 1748195617112)
@@ -0,0 +1,120 @@
+package com.tubes.purry.ui.chart
+
+import android.content.Context
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageButton
+import android.widget.ImageView
+import android.widget.ProgressBar
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.data.model.OnlineSong
+import java.io.File
+
+class OnlineSongListAdapter(
+    private var songs: List<OnlineSong>,
+    private val onClick: (OnlineSong) -> Unit,
+    private val onDownloadClick: (OnlineSong) -> Unit
+) : RecyclerView.Adapter<OnlineSongListAdapter.ViewHolder>() {
+
+    private val downloadingSongs = mutableSetOf<String>()
+    private val downloadedSongs = mutableSetOf<String>()
+
+    inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        private val cover: ImageView = view.findViewById(R.id.imgCover)
+        private val title: TextView = view.findViewById(R.id.tvTitle)
+        private val artist: TextView = view.findViewById(R.id.tvArtist)
+        private val btnDownload: ImageButton = view.findViewById(R.id.btnEdit)
+        private val progressBar: ProgressBar = view.findViewById(R.id.downloadProgress)
+        private val btnDelete: ImageButton = view.findViewById(R.id.btnDelete)
+
+        fun bind(song: OnlineSong) {
+            title.text = "${song.rank}. ${song.title}"
+            artist.text = song.artist
+
+            Glide.with(itemView.context)
+                .load(song.artwork)
+                .placeholder(R.drawable.album_default)
+                .into(cover)
+
+            itemView.setOnClickListener {
+                onClick(song)
+            }
+
+            btnDelete.visibility = View.GONE
+
+            when {
+                downloadingSongs.contains(song.url) -> {
+                    btnDownload.visibility = View.INVISIBLE
+                    progressBar.visibility = View.VISIBLE
+                }
+                downloadedSongs.contains(song.url) -> {
+                    progressBar.visibility = View.GONE
+                    btnDownload.visibility = View.VISIBLE
+                    btnDownload.setImageResource(R.drawable.ic_downloaded)
+                    btnDownload.setColorFilter(itemView.context.getColor(android.R.color.white))
+                    btnDownload.setOnClickListener(null)
+                }
+                else -> {
+                    progressBar.visibility = View.GONE
+                    btnDownload.visibility = View.VISIBLE
+                    btnDownload.setImageResource(R.drawable.ic_download)
+                    btnDownload.setColorFilter(itemView.context.getColor(android.R.color.white))
+                    btnDownload.setOnClickListener {
+                        downloadingSongs.add(song.url)
+                        notifyItemChanged(adapterPosition)
+                        onDownloadClick(song)
+                    }
+                }
+            }
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_song_list, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.bind(songs[position])
+    }
+
+    override fun getItemCount(): Int = songs.size
+
+    fun updateSongs(newSongs: List<OnlineSong>) {
+        songs = newSongs
+        notifyDataSetChanged()
+    }
+
+    fun markAsDownloading(songUrl: String) {
+        downloadingSongs.add(songUrl)
+        notifyItemChanged(findIndex(songUrl))
+    }
+
+    fun markAsDownloaded(songUrl: String) {
+        downloadingSongs.remove(songUrl)
+        downloadedSongs.add(songUrl)
+        notifyItemChanged(findIndex(songUrl))
+    }
+
+    private fun findIndex(songUrl: String): Int {
+        return songs.indexOfFirst { it.url == songUrl }
+    }
+
+    fun checkDownloadedStatus(context: Context) {
+        downloadedSongs.clear()
+        songs.forEach {
+            val fileName = "${it.title}_${it.artist}.mp3"
+                .replace("[^a-zA-Z0-9._-]".toRegex(), "_")
+            val file = File(context.getExternalFilesDir(null), "PurryMusic/$fileName")
+            if (file.exists()) {
+                downloadedSongs.add(it.url)
+            }
+        }
+        notifyDataSetChanged()
+    }
+}
Index: app/src/main/java/com/tubes/purry/ui/chart/ChartViewModelFactory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModelFactory.kt b/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModelFactory.kt
new file mode 100644
--- /dev/null	(date 1748195617111)
+++ b/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModelFactory.kt	(date 1748195617111)
@@ -0,0 +1,15 @@
+package com.tubes.purry.ui.chart
+
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.ViewModelProvider
+import com.tubes.purry.data.repository.ChartRepository
+
+class ChartViewModelFactory : ViewModelProvider.Factory {
+    @Suppress("UNCHECKED_CAST")
+    override fun <T : ViewModel> create(modelClass: Class<T>): T {
+        if (modelClass.isAssignableFrom(ChartViewModel::class.java)) {
+            return ChartViewModel(ChartRepository()) as T
+        }
+        throw IllegalArgumentException("Unknown ViewModel class")
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/chart/ChartViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModel.kt b/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModel.kt
new file mode 100644
--- /dev/null	(date 1748195617110)
+++ b/app/src/main/java/com/tubes/purry/ui/chart/ChartViewModel.kt	(date 1748195617110)
@@ -0,0 +1,25 @@
+package com.tubes.purry.ui.chart
+
+import androidx.lifecycle.*
+import com.tubes.purry.data.model.OnlineSong
+import com.tubes.purry.data.repository.ChartRepository
+import kotlinx.coroutines.launch
+
+class ChartViewModel(private val repository: ChartRepository) : ViewModel() {
+    private val _songs = MutableLiveData<List<OnlineSong>>()
+    val songs: LiveData<List<OnlineSong>> = _songs
+
+    private val _error = MutableLiveData<String>()
+    val error: LiveData<String> = _error
+
+    fun fetchSongs(isGlobal: Boolean, countryCode: String?) {
+        viewModelScope.launch {
+            try {
+                val result = repository.getTopSongs(isGlobal, countryCode)
+                _songs.value = result
+            } catch (e: Exception) {
+                _error.value = "Gagal memuat lagu: ${e.localizedMessage}"
+            }
+        }
+    }
+}
Index: app/src/main/java/com/tubes/purry/ui/chart/ChartAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/chart/ChartAdapter.kt b/app/src/main/java/com/tubes/purry/ui/chart/ChartAdapter.kt
new file mode 100644
--- /dev/null	(date 1748195617109)
+++ b/app/src/main/java/com/tubes/purry/ui/chart/ChartAdapter.kt	(date 1748195617109)
@@ -0,0 +1,45 @@
+package com.tubes.purry.ui.chart
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.tubes.purry.R
+import com.tubes.purry.data.model.ChartItem
+
+class ChartAdapter(
+    private val items: List<ChartItem>,
+    private val onClick: (ChartItem) -> Unit
+) : RecyclerView.Adapter<ChartAdapter.ChartViewHolder>() {
+
+    inner class ChartViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        val imgCover: ImageView = view.findViewById(R.id.imgCover)
+        val tvTitle: TextView = view.findViewById(R.id.tvTitle)
+        val tvArtist: TextView = view.findViewById(R.id.tvArtist)
+//        val chartImage: ImageView = view.findViewById(R.id.chartImage)
+//        val chartTitle: TextView = view.findViewById(R.id.chartTitle)
+//        val chartDescription: TextView = view.findViewById(R.id.chartDescription)
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ChartViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_song_card, parent, false)
+        return ChartViewHolder(view)
+    }
+
+    override fun getItemCount(): Int = items.size
+
+    override fun onBindViewHolder(holder: ChartViewHolder, position: Int) {
+        val item = items[position]
+//        holder.chartImage.setImageResource(item.imageRes)
+//        holder.chartTitle.text = item.title
+//        holder.chartDescription.text = item.description
+        holder.imgCover.setImageResource(item.imageRes)
+        holder.tvTitle.text = item.title
+        holder.tvArtist.text = item.description
+
+        holder.itemView.setOnClickListener { onClick(item) }
+    }
+}
Index: app/src/main/java/com/tubes/purry/ui/analytics/MonthDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/MonthDetailActivity.kt b/app/src/main/java/com/tubes/purry/ui/analytics/MonthDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617103)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/MonthDetailActivity.kt	(date 1748195617103)
@@ -0,0 +1,245 @@
+package com.tubes.purry.ui.analytics
+
+import android.content.Intent
+import android.os.Bundle
+import android.view.View
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.lifecycle.lifecycleScope
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivityMonthDetailBinding
+import com.tubes.purry.data.model.MonthlyAnalytics
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class MonthDetailActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivityMonthDetailBinding
+    private lateinit var sessionManager: SessionManager
+    private var currentMonth: String = ""
+
+    private val viewModel: SoundCapsuleViewModel by viewModels {
+        SoundCapsuleViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityMonthDetailBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        sessionManager = SessionManager(this)
+        currentMonth = intent.getStringExtra("month") ?: getCurrentMonth()
+
+        setupUI()
+        loadMonthData()
+    }
+
+    private fun setupUI() {
+        // Setup toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener {
+            onBackPressed()
+        }
+
+        // Set month title
+        val monthName = formatMonthDisplay(currentMonth)
+        binding.tvMonthTitle.text = monthName
+
+        // Setup click listeners
+        binding.cardTimeListened.setOnClickListener {
+            openTimeListenedDetail()
+        }
+
+        binding.cardTopArtists?.setOnClickListener {
+            openTopArtistsDetail()
+        }
+
+        binding.cardTopSongs?.setOnClickListener {
+            openTopSongsDetail()
+        }
+
+        binding.btnExport?.setOnClickListener {
+            exportCurrentMonth()
+        }
+    }
+
+    private fun loadMonthData() {
+        val userId = sessionManager.getUserId()
+        if (userId == null) {
+            showError("User not logged in")
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        lifecycleScope.launch {
+            try {
+                val analytics = viewModel.getMonthlyAnalytics(userId, currentMonth)
+                if (analytics.totalMinutesListened == 0L) {
+                    showNoData()
+                } else {
+                    displayAnalytics(analytics)
+                    binding.contentLayout.visibility = View.VISIBLE
+                    binding.tvNoData.visibility = View.GONE
+                }
+            } catch (e: Exception) {
+                showError("Failed to load data: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun displayAnalytics(analytics: MonthlyAnalytics) {
+        // Time listened
+        binding.tvTotalMinutes.text = "${analytics.totalMinutesListened} minutes"
+        binding.tvDailyAverage.text = "Daily average: ${analytics.dailyAverage} min"
+
+        // Top artist
+        if (analytics.topArtist != null) {
+            binding.tvTopArtist?.text = analytics.topArtist
+            binding.tvTopArtistPlays?.text = "${analytics.topArtistPlayCount} plays"
+
+            if (analytics.topArtistCover != null) {
+                binding.ivTopArtistCover?.let {
+                    Glide.with(this)
+                        .load(analytics.topArtistCover)
+                        .placeholder(R.drawable.ic_music_note)
+                        .error(R.drawable.ic_music_note)
+                        .into(it)
+                }
+            }
+        } else {
+            binding.tvTopArtist?.text = "No data"
+            binding.tvTopArtistPlays?.text = ""
+        }
+
+        // Top song
+        if (analytics.topSong != null) {
+            binding.tvTopSong?.text = analytics.topSong
+            binding.tvTopSongArtist?.text = analytics.topSongArtist
+            binding.tvTopSongPlays?.text = "${analytics.topSongPlayCount} plays"
+
+            if (analytics.topSongCover != null) {
+                binding.ivTopSongCover?.let {
+                    Glide.with(this)
+                        .load(analytics.topSongCover)
+                        .placeholder(R.drawable.ic_music_note)
+                        .error(R.drawable.ic_music_note)
+                        .into(it)
+                }
+            }
+        } else {
+            binding.tvTopSong?.text = "No data"
+            binding.tvTopSongArtist?.text = ""
+            binding.tvTopSongPlays?.text = ""
+        }
+
+        // Stats
+        binding.tvTotalSongs?.text = "${analytics.totalSongsPlayed} different songs"
+        binding.tvTotalArtists?.text = "${analytics.totalArtistsListened} artists"
+
+
+        // Day streaks
+        if (analytics.dayStreaks.isNotEmpty()) {
+            val topStreak = analytics.dayStreaks.first()
+            binding.tvStreakSong?.text = topStreak.songTitle
+            binding.tvStreakArtist?.text = topStreak.artist
+            binding.tvStreakDays?.text = "${topStreak.streakDays}-day streak"
+            binding.tvStreakDates?.text = "${topStreak.startDate} - ${topStreak.endDate}"
+
+            if (topStreak.cover != null) {
+                binding.ivStreakCover?.let {
+                    Glide.with(this)
+                        .load(topStreak.cover)
+                        .placeholder(R.drawable.ic_music_note)
+                        .error(R.drawable.ic_music_note)
+                        .into(it)
+                }
+            }
+
+            binding.cardDayStreak?.visibility = View.VISIBLE
+        } else {
+            binding.cardDayStreak?.visibility = View.GONE
+        }
+    }
+
+    private fun showNoData() {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = "No data available for ${formatMonthDisplay(currentMonth)}"
+    }
+
+    private fun showError(message: String) {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = message
+    }
+
+    private fun openTimeListenedDetail() {
+        val intent = Intent(this, TimeListenedDetailActivity::class.java)
+        intent.putExtra("month", currentMonth)
+        startActivity(intent)
+    }
+
+    private fun openTopArtistsDetail() {
+        val intent = Intent(this, TopArtistsActivity::class.java)
+        intent.putExtra("month", currentMonth)
+        startActivity(intent)
+    }
+
+    private fun openTopSongsDetail() {
+        val intent = Intent(this, TopSongsActivity::class.java)
+        intent.putExtra("month", currentMonth)
+        startActivity(intent)
+    }
+
+    private fun exportCurrentMonth() {
+        val userId = sessionManager.getUserId() ?: return
+
+        lifecycleScope.launch {
+            try {
+                binding.progressBar.visibility = View.VISIBLE
+                val success = viewModel.exportMonthData(userId, currentMonth)
+
+                if (success) {
+                    showToast("Export successful!")
+                } else {
+                    showToast("Export failed.")
+                }
+            } catch (e: Exception) {
+                showToast("Export error: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun formatMonthDisplay(month: String): String {
+        return try {
+            val inputFormat = SimpleDateFormat("yyyy-MM", Locale.getDefault())
+            val outputFormat = SimpleDateFormat("MMMM yyyy", Locale.getDefault())
+            val date = inputFormat.parse(month)
+            outputFormat.format(date ?: Date())
+        } catch (e: Exception) {
+            month
+        }
+    }
+
+    private fun getCurrentMonth(): String {
+        return SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+    }
+
+    private fun showToast(message: String) {
+        android.widget.Toast.makeText(this, message, android.widget.Toast.LENGTH_SHORT).show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsExportService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsExportService.kt b/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsExportService.kt
new file mode 100644
--- /dev/null	(date 1748195617102)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsExportService.kt	(date 1748195617102)
@@ -0,0 +1,361 @@
+package com.tubes.purry.ui.analytics
+
+import android.content.ContentValues
+import android.content.Context
+import android.graphics.Color
+import android.graphics.Paint
+import android.graphics.Typeface
+import android.graphics.pdf.PdfDocument
+import android.media.MediaScannerConnection
+import android.os.Build
+import android.os.Environment
+import android.provider.MediaStore
+import android.util.Log
+import androidx.annotation.RequiresApi
+import com.tubes.purry.data.model.AnalyticsExportData
+import java.io.File
+import java.io.FileOutputStream
+import java.io.FileWriter
+import java.io.OutputStream
+import java.text.SimpleDateFormat
+import java.util.*
+
+class AnalyticsExportService(private val context: Context) {
+
+    private fun createExportFileLegacy(fileName: String): File {
+        val downloadsDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)
+        val purritifyDir = File(downloadsDir, "Purritify")
+        if (!purritifyDir.exists()) {
+            purritifyDir.mkdirs()
+        }
+        return File(purritifyDir, fileName)
+    }
+
+    suspend fun exportPdfToMediaStore(exportData: AnalyticsExportData): Boolean {
+        return try {
+            val fileName = "purritify_analytics_${exportData.month}.pdf"
+            val pdfDocument = PdfDocument()
+            val pageInfo = PdfDocument.PageInfo.Builder(595, 842, 1).create()
+            val page = pdfDocument.startPage(pageInfo)
+            val canvas = page.canvas
+            val paint = Paint().apply {
+                color = Color.BLACK
+                textSize = 14f
+                typeface = Typeface.MONOSPACE
+            }
+
+            var y = 40
+            fun drawLine(text: String) {
+                canvas.drawText(text, 40f, y.toFloat(), paint)
+                y += 20
+            }
+
+            drawLine("🎧 Purritify Analytics Export")
+            drawLine("Month: ${exportData.month}")
+            drawLine("User: ${exportData.userInfo.username}")
+            drawLine("Exported at: ${SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.getDefault()).format(Date())}")
+            y += 20
+
+            drawLine("📊 Monthly Summary:")
+            drawLine("Total Minutes: ${exportData.analytics.totalMinutesListened}")
+            drawLine("Top Artist: ${exportData.analytics.topArtist ?: "N/A"}")
+            drawLine("Top Song: ${exportData.analytics.topSong ?: "N/A"}")
+            y += 20
+
+            drawLine("🎵 Top Songs:")
+            exportData.topSongs.take(5).forEach {
+                drawLine("${it.rank}. ${it.title} - ${it.artist} (${it.playCount} plays)")
+            }
+            y += 20
+
+            drawLine("🎤 Top Artists:")
+            exportData.topArtists.take(5).forEach {
+                drawLine("${it.rank}. ${it.name} (${it.playCount} plays)")
+            }
+
+            pdfDocument.finishPage(page)
+
+            val contentValues = ContentValues().apply {
+                put(MediaStore.Downloads.DISPLAY_NAME, fileName)
+                put(MediaStore.Downloads.MIME_TYPE, "application/pdf")
+                put(MediaStore.Downloads.RELATIVE_PATH, Environment.DIRECTORY_DOWNLOADS + "/Purritify")
+                put(MediaStore.Downloads.IS_PENDING, 1)
+            }
+
+            val contentResolver = context.contentResolver
+            val uri = contentResolver.insert(MediaStore.Downloads.EXTERNAL_CONTENT_URI, contentValues)
+                ?: throw Exception("Failed to create MediaStore record.")
+
+            contentResolver.openOutputStream(uri).use { output ->
+                pdfDocument.writeTo(output!!)
+            }
+
+            contentValues.clear()
+            contentValues.put(MediaStore.Downloads.IS_PENDING, 0)
+            contentResolver.update(uri, contentValues, null, null)
+
+            pdfDocument.close()
+            true
+        } catch (e: Exception) {
+            e.printStackTrace()
+            false
+        }
+    }
+
+
+
+    suspend fun exportToCsv(exportData: AnalyticsExportData): Boolean {
+        val fileName = "purritify_analytics_${exportData.month}.csv"
+        val outputStream = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
+            createExportFileApi29Plus(fileName)
+        } else {
+            FileOutputStream(createExportFileLegacy(fileName))
+        }
+
+        return try {
+            outputStream?.bufferedWriter()?.use { writer ->
+                // Header information
+                writer.append("Purritify Sound Capsule Export\n")
+                writer.append("Month,${exportData.month}\n")
+                writer.append("User,${exportData.userInfo.username}\n")
+                writer.append("Export Date,${exportData.exportDate}\n\n")
+
+                // Monthly Summary
+                writer.append("MONTHLY SUMMARY\n")
+                writer.append("Total Minutes Listened,${exportData.analytics.totalMinutesListened}\n")
+                writer.append("Daily Average (minutes),${exportData.analytics.dailyAverage}\n")
+                writer.append("Total Songs Played,${exportData.analytics.totalSongsPlayed}\n")
+                writer.append("Total Artists Listened,${exportData.analytics.totalArtistsListened}\n")
+                writer.append("Top Artist,${exportData.analytics.topArtist ?: "N/A"}\n")
+                writer.append("Top Artist Play Count,${exportData.analytics.topArtistPlayCount}\n")
+                writer.append("Top Song,${exportData.analytics.topSong ?: "N/A"}\n")
+                writer.append("Top Song Artist,${exportData.analytics.topSongArtist ?: "N/A"}\n")
+                writer.append("Top Song Play Count,${exportData.analytics.topSongPlayCount}\n\n")
+
+                // Daily Chart
+                writer.append("DAILY LISTENING CHART\n")
+                writer.append("Day,Minutes\n")
+                exportData.dailyChart.forEach { dayData ->
+                    writer.append("${dayData.day},${dayData.minutes}\n")
+                }
+                writer.append("\n")
+
+                // Top Songs
+                writer.append("TOP SONGS\n")
+                writer.append("Rank,Title,Artist,Play Count\n")
+                exportData.topSongs.forEach { song ->
+                    writer.append("${song.rank},\"${song.title}\",\"${song.artist}\",${song.playCount}\n")
+                }
+                writer.append("\n")
+
+                // Top Artists
+                writer.append("TOP ARTISTS\n")
+                writer.append("Rank,Artist,Play Count\n")
+                exportData.topArtists.forEach { artist ->
+                    writer.append("${artist.rank},\"${artist.name}\",${artist.playCount}\n")
+                }
+                writer.append("\n")
+
+                // Day Streaks
+                writer.append("DAY STREAKS\n")
+                writer.append("Song,Artist,Start Date,End Date,Streak Days\n")
+                exportData.analytics.dayStreaks.forEach { streak ->
+                    writer.append("\"${streak.songTitle}\",\"${streak.artist}\",${streak.startDate},${streak.endDate},${streak.streakDays}\n")
+                }
+            }
+
+            true
+        } catch (e: Exception) {
+            e.printStackTrace()
+            false
+        }
+    }
+
+    @RequiresApi(Build.VERSION_CODES.Q)
+    private fun createExportFileApi29Plus(fileName: String): OutputStream? {
+        val resolver = context.contentResolver
+        val contentValues = ContentValues().apply {
+            put(MediaStore.Downloads.DISPLAY_NAME, fileName)
+            put(MediaStore.Downloads.MIME_TYPE, "text/csv")
+            put(MediaStore.Downloads.RELATIVE_PATH, Environment.DIRECTORY_DOWNLOADS + "/Purritify")
+        }
+
+        val uri = resolver.insert(MediaStore.Downloads.EXTERNAL_CONTENT_URI, contentValues)
+        return uri?.let { resolver.openOutputStream(it) }
+    }
+
+
+
+    suspend fun exportAllDataToCsv(allData: List<AnalyticsExportData>): Boolean {
+        return try {
+            val fileName = "purritify_analytics_all_data.csv"
+            val file = createExportFile(fileName)
+
+            FileWriter(file).use { writer ->
+                // Header
+                writer.append("Purritify Complete Analytics Export\n")
+                writer.append("User,${allData.firstOrNull()?.userInfo?.username ?: "Unknown"}\n")
+                writer.append("Export Date,${SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault()).format(Date())}\n")
+                writer.append("Total Months,${allData.size}\n\n")
+
+                // Monthly Summary Table
+                writer.append("MONTHLY SUMMARY\n")
+                writer.append("Month,Total Minutes,Daily Avg,Songs Played,Artists,Top Artist,Top Song\n")
+                allData.forEach { data ->
+                    writer.append("${data.month},${data.analytics.totalMinutesListened},${data.analytics.dailyAverage},${data.analytics.totalSongsPlayed},${data.analytics.totalArtistsListened},\"${data.analytics.topArtist ?: "N/A"}\",\"${data.analytics.topSong ?: "N/A"}\"\n")
+                }
+                writer.append("\n")
+
+                // Detailed data for each month
+                allData.forEach { monthData ->
+                    writer.append("=== ${monthData.month.uppercase()} DETAILED DATA ===\n")
+
+                    // Top Songs for this month
+                    writer.append("TOP SONGS - ${monthData.month}\n")
+                    writer.append("Rank,Title,Artist,Play Count\n")
+                    monthData.topSongs.take(10).forEach { song ->
+                        writer.append("${song.rank},\"${song.title}\",\"${song.artist}\",${song.playCount}\n")
+                    }
+                    writer.append("\n")
+
+                    // Top Artists for this month
+                    writer.append("TOP ARTISTS - ${monthData.month}\n")
+                    writer.append("Rank,Artist,Play Count\n")
+                    monthData.topArtists.take(10).forEach { artist ->
+                        writer.append("${artist.rank},\"${artist.name}\",${artist.playCount}\n")
+                    }
+                    writer.append("\n")
+
+                    // Day Streaks for this month
+                    if (monthData.analytics.dayStreaks.isNotEmpty()) {
+                        writer.append("DAY STREAKS - ${monthData.month}\n")
+                        writer.append("Song,Artist,Start Date,End Date,Streak Days\n")
+                        monthData.analytics.dayStreaks.forEach { streak ->
+                            writer.append("\"${streak.songTitle}\",\"${streak.artist}\",${streak.startDate},${streak.endDate},${streak.streakDays}\n")
+                        }
+                        writer.append("\n")
+                    }
+                }
+            }
+
+            true
+        } catch (e: Exception) {
+            e.printStackTrace()
+            false
+        }
+    }
+
+    suspend fun exportAllDataToPdfMediaStore(allData: List<AnalyticsExportData>): Boolean {
+        return try {
+            val resolver = context.contentResolver
+            val fileName = "purritify_analytics_all_data_${System.currentTimeMillis()}.pdf"
+
+            val contentValues = ContentValues().apply {
+                put(MediaStore.MediaColumns.DISPLAY_NAME, fileName)
+                put(MediaStore.MediaColumns.MIME_TYPE, "application/pdf")
+                put(MediaStore.MediaColumns.RELATIVE_PATH, Environment.DIRECTORY_DOCUMENTS + "/Purritify")
+            }
+
+            val uri = resolver.insert(MediaStore.Files.getContentUri("external"), contentValues)
+            if (uri == null) {
+                Log.e("ExportPDF", "❌ Failed to create MediaStore entry.")
+                return false
+            }
+
+            resolver.openOutputStream(uri)?.use { outputStream ->
+                val document = PdfDocument()
+                val paint = Paint().apply {
+                    textSize = 12f
+                    color = Color.BLACK
+                }
+                val pageInfo = PdfDocument.PageInfo.Builder(595, 842, 1).create()
+                var page = document.startPage(pageInfo)
+                val canvas = page.canvas
+
+                var yPos = 40
+                fun drawLine(text: String) {
+                    if (yPos > 800) {
+                        document.finishPage(page)
+                        page = document.startPage(pageInfo)
+                        yPos = 40
+                    }
+                    canvas.drawText(text, 40f, yPos.toFloat(), paint)
+                    yPos += 20
+                }
+
+                drawLine("Purritify Complete Analytics Export")
+                drawLine("Export Date: ${SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault()).format(Date())}")
+                drawLine("User: ${allData.firstOrNull()?.userInfo?.username ?: "Unknown"}")
+                drawLine("Total Months: ${allData.size}")
+                drawLine("")
+
+                allData.forEach { data ->
+                    drawLine("Month: ${data.month}")
+                    drawLine("Total Minutes: ${data.analytics.totalMinutesListened}")
+                    drawLine("Daily Avg: ${data.analytics.dailyAverage}")
+                    drawLine("Songs Played: ${data.analytics.totalSongsPlayed}")
+                    drawLine("Artists Listened: ${data.analytics.totalArtistsListened}")
+                    drawLine("Top Artist: ${data.analytics.topArtist ?: "N/A"}")
+                    drawLine("Top Song: ${data.analytics.topSong ?: "N/A"}")
+                    drawLine("")
+
+                    drawLine("Top Songs:")
+                    data.topSongs.take(10).forEach {
+                        drawLine("- ${it.rank}. ${it.title} by ${it.artist} (${it.playCount} plays)")
+                    }
+                    drawLine("")
+
+                    drawLine("Top Artists:")
+                    data.topArtists.take(10).forEach {
+                        drawLine("- ${it.rank}. ${it.name} (${it.playCount} plays)")
+                    }
+                    drawLine("")
+
+                    if (data.analytics.dayStreaks.isNotEmpty()) {
+                        drawLine("Day Streaks:")
+                        data.analytics.dayStreaks.forEach {
+                            drawLine("- ${it.songTitle} by ${it.artist}, ${it.streakDays} days (${it.startDate} to ${it.endDate})")
+                        }
+                        drawLine("")
+                    }
+                }
+
+                document.finishPage(page)
+                document.writeTo(outputStream)
+                document.close()
+
+                MediaScannerConnection.scanFile(
+                    context,
+                    arrayOf(File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOCUMENTS), "Purritify/$fileName").absolutePath),
+                    arrayOf("application/pdf"),
+                    null
+                )
+
+            }
+
+            Log.d("ExportPDF", "✅ PDF exported to MediaStore: $fileName")
+            true
+        } catch (e: Exception) {
+            Log.e("ExportPDF", "❌ Failed to export PDF: ${e.message}", e)
+            false
+        }
+    }
+
+
+    private fun createExportFile(fileName: String): File {
+        val downloadsDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)
+        val purritifyDir = File(downloadsDir, "Purritify")
+
+        if (!purritifyDir.exists()) {
+            val created = purritifyDir.mkdirs()
+            Log.d("ExportCSV", "Creating directory ${purritifyDir.absolutePath} → success: $created")
+        } else {
+            Log.d("ExportCSV", "Directory already exists: ${purritifyDir.absolutePath}")
+        }
+
+        val outputFile = File(purritifyDir, fileName)
+        Log.d("ExportCSV", "Export file path: ${outputFile.absolutePath}")
+        return outputFile
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsAdapter.kt b/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsAdapter.kt
new file mode 100644
--- /dev/null	(date 1748195617101)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/AnalyticsAdapter.kt	(date 1748195617101)
@@ -0,0 +1,184 @@
+package com.tubes.purry.ui.analytics
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.DiffUtil
+import androidx.recyclerview.widget.ListAdapter
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ItemSoundCapsuleMonthBinding
+import com.tubes.purry.databinding.ItemTopSongBinding
+import com.tubes.purry.databinding.ItemTopArtistBinding
+import com.tubes.purry.data.model.TopSong
+import com.tubes.purry.data.model.TopArtist
+
+// Sound Capsule Adapter
+class SoundCapsuleAdapter(
+    private val onMonthClick: (String) -> Unit,
+    private val onExportClick: (String) -> Unit
+) : ListAdapter<MonthlyAnalyticsSummary, SoundCapsuleAdapter.ViewHolder>(DiffCallback) {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val binding = ItemSoundCapsuleMonthBinding.inflate(
+            LayoutInflater.from(parent.context), parent, false
+        )
+        return ViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.bind(getItem(position))
+    }
+
+    inner class ViewHolder(private val binding: ItemSoundCapsuleMonthBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        fun bind(item: MonthlyAnalyticsSummary) {
+            binding.apply {
+                tvMonthTitle.text = item.displayName
+                tvTotalMinutes.text = "${item.totalMinutes} minutes"
+                tvTopArtist.text = item.topArtist ?: "No data"
+                tvTopSong.text = item.topSong ?: "No data"
+                tvStreaks.text = if (item.dayStreaks > 0) "${item.dayStreaks} streaks" else "No streaks"
+
+                root.setOnClickListener { onMonthClick(item.month) }
+                btnExport.setOnClickListener { onExportClick(item.month) }
+            }
+        }
+    }
+
+    companion object DiffCallback : DiffUtil.ItemCallback<MonthlyAnalyticsSummary>() {
+        override fun areItemsTheSame(
+            oldItem: MonthlyAnalyticsSummary,
+            newItem: MonthlyAnalyticsSummary
+        ): Boolean = oldItem.month == newItem.month
+
+        override fun areContentsTheSame(
+            oldItem: MonthlyAnalyticsSummary,
+            newItem: MonthlyAnalyticsSummary
+        ): Boolean = oldItem == newItem
+    }
+}
+
+// Top Songs Adapter
+class TopSongsAdapter : ListAdapter<TopSong, TopSongsAdapter.ViewHolder>(TopSongDiffCallback) {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val binding = ItemTopSongBinding.inflate(
+            LayoutInflater.from(parent.context), parent, false
+        )
+        return ViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.bind(getItem(position))
+    }
+
+    inner class ViewHolder(private val binding: ItemTopSongBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        fun bind(song: TopSong) {
+            binding.apply {
+                tvRank.text = String.format("%02d", song.rank)
+                tvSongTitle.text = song.title
+                tvArtist.text = song.artist
+                tvPlayCount.text = "${song.playCount} plays"
+
+                if (song.cover != null) {
+                    Glide.with(itemView.context)
+                        .load(song.cover)
+                        .placeholder(R.drawable.ic_music_note)
+                        .error(R.drawable.ic_music_note)
+                        .into(ivCover)
+                } else {
+                    ivCover.setImageResource(R.drawable.ic_music_note)
+                }
+            }
+        }
+    }
+
+    companion object TopSongDiffCallback : DiffUtil.ItemCallback<TopSong>() {
+        override fun areItemsTheSame(oldItem: TopSong, newItem: TopSong): Boolean =
+            oldItem.rank == newItem.rank && oldItem.title == newItem.title
+
+        override fun areContentsTheSame(oldItem: TopSong, newItem: TopSong): Boolean =
+            oldItem == newItem
+    }
+}
+
+// Top Artists Adapter
+class TopArtistsAdapter : ListAdapter<TopArtist, TopArtistsAdapter.ViewHolder>(TopArtistDiffCallback) {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val binding = ItemTopArtistBinding.inflate(
+            LayoutInflater.from(parent.context), parent, false
+        )
+        return ViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        holder.bind(getItem(position))
+    }
+
+    inner class ViewHolder(private val binding: ItemTopArtistBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        fun bind(artist: TopArtist) {
+            binding.apply {
+                tvRank.text = String.format("%02d", artist.rank)
+                tvArtistName.text = artist.name
+                tvPlayCount.text = "${artist.playCount} plays"
+
+                if (artist.cover != null) {
+                    Glide.with(itemView.context)
+                        .load(artist.cover)
+                        .placeholder(R.drawable.ic_music_note)
+                        .error(R.drawable.ic_music_note)
+                        .into(ivCover)
+                } else {
+                    ivCover.setImageResource(R.drawable.ic_music_note)
+                }
+            }
+        }
+    }
+
+    companion object TopArtistDiffCallback : DiffUtil.ItemCallback<TopArtist>() {
+        override fun areItemsTheSame(oldItem: TopArtist, newItem: TopArtist): Boolean =
+            oldItem.rank == newItem.rank && oldItem.name == newItem.name
+
+        override fun areContentsTheSame(oldItem: TopArtist, newItem: TopArtist): Boolean =
+            oldItem == newItem
+    }
+}
+
+// ViewModel Factory
+class SoundCapsuleViewModelFactory(private val context: android.content.Context) :
+    androidx.lifecycle.ViewModelProvider.Factory {
+
+    override fun <T : androidx.lifecycle.ViewModel> create(modelClass: Class<T>): T {
+        if (modelClass.isAssignableFrom(SoundCapsuleViewModel::class.java)) {
+            val database = com.tubes.purry.data.local.AppDatabase.getDatabase(context)
+            val analyticsRepository = com.tubes.purry.data.repository.AnalyticsRepository(
+                database.analyticsDao(),
+                database.songDao()
+            )
+
+            // Create ProfileRepository with proper ApiService
+            val apiService = com.tubes.purry.data.remote.ApiClient.apiService
+            val sessionManager = com.tubes.purry.utils.SessionManager(context)
+            val authRepository = com.tubes.purry.data.repository.AuthRepository(apiService, sessionManager)
+            val profileRepository = com.tubes.purry.data.repository.ProfileRepository(apiService, authRepository)
+
+            val exportService = AnalyticsExportService(context)
+
+            @Suppress("UNCHECKED_CAST")
+            return SoundCapsuleViewModel(
+                context.applicationContext as android.app.Application,
+                analyticsRepository,
+                profileRepository,
+                exportService
+            ) as T
+        }
+        throw IllegalArgumentException("Unknown ViewModel class")
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/TopArtistsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/TopArtistsActivity.kt b/app/src/main/java/com/tubes/purry/ui/analytics/TopArtistsActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617106)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/TopArtistsActivity.kt	(date 1748195617106)
@@ -0,0 +1,123 @@
+package com.tubes.purry.ui.analytics
+
+import android.os.Bundle
+import android.view.View
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.lifecycle.lifecycleScope
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivityTopArtistsBinding
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class TopArtistsActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivityTopArtistsBinding
+    private lateinit var sessionManager: SessionManager
+    private lateinit var adapter: TopArtistsAdapter
+    private var currentMonth: String = ""
+
+    private val viewModel: SoundCapsuleViewModel by viewModels {
+        SoundCapsuleViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityTopArtistsBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        sessionManager = SessionManager(this)
+        currentMonth = intent.getStringExtra("month") ?: getCurrentMonth()
+
+        setupUI()
+        loadTopArtists()
+    }
+
+    private fun setupUI() {
+        // Setup toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener {
+            onBackPressed()
+        }
+
+        // Set month title
+        val monthName = formatMonthDisplay(currentMonth)
+        binding.tvMonth.text = monthName
+
+        // Setup RecyclerView
+        adapter = TopArtistsAdapter()
+        binding.rvTopArtists.apply {
+            adapter = this@TopArtistsActivity.adapter
+            layoutManager = LinearLayoutManager(this@TopArtistsActivity)
+        }
+    }
+
+    private fun loadTopArtists() {
+        val userId = sessionManager.getUserId()
+        if (userId == null) {
+            showError("User not logged in")
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        lifecycleScope.launch {
+            try {
+                val analytics = viewModel.getMonthlyAnalytics(userId, currentMonth)
+                val topArtists = viewModel.getTopArtists(userId, currentMonth, 50)
+
+                if (topArtists.isEmpty()) {
+                    showNoData()
+                } else {
+                    // Update header
+                    binding.tvSummary.text = "You listened to ${analytics.totalArtistsListened} artists this month.\n" + "Here are your Top 5 Artists"
+
+                    // Update list
+                    adapter.submitList(topArtists.take(5))
+                    binding.contentLayout.visibility = View.VISIBLE
+                    binding.tvNoData.visibility = View.GONE
+                }
+            } catch (e: Exception) {
+                showError("Failed to load data: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun showNoData() {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = "No artists data available for ${formatMonthDisplay(currentMonth)}"
+    }
+
+    private fun showError(message: String) {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = message
+    }
+
+    private fun formatMonthDisplay(month: String): String {
+        return try {
+            val inputFormat = SimpleDateFormat("yyyy-MM", Locale.getDefault())
+            val outputFormat = SimpleDateFormat("MMMM yyyy", Locale.getDefault())
+            val date = inputFormat.parse(month)
+            outputFormat.format(date ?: Date())
+        } catch (e: Exception) {
+            month
+        }
+    }
+
+    private fun getCurrentMonth(): String {
+        return SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/TimeListenedDetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/TimeListenedDetailActivity.kt b/app/src/main/java/com/tubes/purry/ui/analytics/TimeListenedDetailActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617106)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/TimeListenedDetailActivity.kt	(date 1748195617106)
@@ -0,0 +1,206 @@
+package com.tubes.purry.ui.analytics
+
+import android.graphics.Color
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.lifecycle.lifecycleScope
+import com.github.mikephil.charting.components.XAxis
+import com.github.mikephil.charting.data.Entry
+import com.github.mikephil.charting.data.LineData
+import com.github.mikephil.charting.data.LineDataSet
+import com.github.mikephil.charting.formatter.IndexAxisValueFormatter
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivityTimeListenedDetailBinding
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class TimeListenedDetailActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivityTimeListenedDetailBinding
+    private lateinit var sessionManager: SessionManager
+    private var currentMonth: String = ""
+
+    private val viewModel: SoundCapsuleViewModel by viewModels {
+        SoundCapsuleViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityTimeListenedDetailBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        sessionManager = SessionManager(this)
+        currentMonth = intent.getStringExtra("month") ?: getCurrentMonth()
+
+        setupUI()
+        loadTimeData()
+    }
+
+    private fun setupUI() {
+        // Setup toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener {
+            onBackPressed()
+        }
+
+        // Set month title
+        val monthName = formatMonthDisplay(currentMonth)
+        binding.tvMonth.text = monthName
+
+        setupChart()
+    }
+
+    private fun setupChart() {
+        binding.dailyChart.apply {
+            description.isEnabled = false
+            setTouchEnabled(true)
+            isDragEnabled = true
+            setScaleEnabled(true)
+            setPinchZoom(true)
+
+            // Styling
+            setBackgroundColor(Color.TRANSPARENT)
+
+            // X-axis
+            xAxis.apply {
+                position = XAxis.XAxisPosition.BOTTOM
+                setDrawGridLines(false)
+                textColor = Color.WHITE
+                textSize = 12f
+            }
+
+            // Y-axis
+            axisLeft.apply {
+                textColor = Color.WHITE
+                setDrawGridLines(true)
+                gridColor = Color.GRAY
+            }
+
+            axisRight.isEnabled = false
+
+            // Legend
+            legend.apply {
+                textColor = Color.WHITE
+                textSize = 14f
+            }
+        }
+    }
+
+    private fun loadTimeData() {
+        val userId = sessionManager.getUserId()
+        if (userId == null) {
+            showError("User not logged in")
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        lifecycleScope.launch {
+            try {
+                Log.d("TimeListened", "🔍 Loading time data for user $userId, month $currentMonth")
+                val analytics = viewModel.getMonthlyAnalytics(userId, currentMonth)
+                val dailyChart = viewModel.getDailyChart(userId, currentMonth)
+
+                Log.d("TimeListened", "📊 Analytics: ${analytics.totalMinutesListened} minutes")
+                Log.d("TimeListened", "📈 Daily chart data points: ${dailyChart.size}")
+
+                dailyChart.forEach { data ->
+                    Log.d("TimeListened", "Chart data: Day ${data.day} = ${data.minutes} minutes")
+                }
+
+                if (analytics.totalMinutesListened == 0L) {
+                    showNoData()
+                } else {
+                    displayTimeData(analytics, dailyChart)
+                    binding.contentLayout.visibility = View.VISIBLE
+                    binding.tvNoData.visibility = View.GONE
+                }
+            } catch (e: Exception) {
+                Log.e("TimeListened", "❌ Error loading time data: ${e.message}", e)
+                showError("Failed to load data: ${e.message}")
+                showError("Failed to load data: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun displayTimeData(analytics: com.tubes.purry.data.model.MonthlyAnalytics, dailyChart: List<com.tubes.purry.data.model.DailyChartData>) {
+        // Display summary
+        binding.tvTotalMinutes.text = "${analytics.totalMinutesListened} minutes"
+        binding.tvDailyAverage.text = "Daily average: ${analytics.dailyAverage} min"
+
+        // Setup chart data
+        if (dailyChart.isNotEmpty()) {
+            val entries = dailyChart.map { Entry(it.day.toFloat(), it.minutes.toFloat()) }
+            val dayLabels = dailyChart.map { it.day.toString() }
+
+            val dataSet = LineDataSet(entries, "Minutes").apply {
+                color = Color.parseColor("#1DB954") // Spotify green
+                setCircleColor(Color.parseColor("#1DB954"))
+                lineWidth = 3f
+                circleRadius = 5f
+                setDrawCircleHole(false)
+                valueTextColor = Color.WHITE
+                valueTextSize = 10f
+                setDrawValues(false) // Hide values on points for cleaner look
+            }
+
+            val lineData = LineData(dataSet)
+            binding.dailyChart.apply {
+                data = lineData
+                xAxis.valueFormatter = IndexAxisValueFormatter(dayLabels)
+                xAxis.granularity = 1f
+                xAxis.labelCount = minOf(dayLabels.size, 10) // Show max 10 labels
+
+                // Animate
+                animateX(1000)
+                invalidate()
+            }
+
+            binding.dailyChart.visibility = View.VISIBLE
+            binding.tvChartTitle.visibility = View.VISIBLE
+        } else {
+            binding.dailyChart.visibility = View.GONE
+            binding.tvChartTitle.visibility = View.GONE
+        }
+    }
+
+    private fun showNoData() {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = "No listening data available for ${formatMonthDisplay(currentMonth)}"
+    }
+
+    private fun showError(message: String) {
+        binding.contentLayout.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = message
+    }
+
+    private fun formatMonthDisplay(month: String): String {
+        return try {
+            val inputFormat = SimpleDateFormat("yyyy-MM", Locale.getDefault())
+            val outputFormat = SimpleDateFormat("MMMM yyyy", Locale.getDefault())
+            val date = inputFormat.parse(month)
+            outputFormat.format(date ?: Date())
+        } catch (e: Exception) {
+            month
+        }
+    }
+
+    private fun getCurrentMonth(): String {
+        return SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleViewModel.kt b/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleViewModel.kt
new file mode 100644
--- /dev/null	(date 1748195617104)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleViewModel.kt	(date 1748195617104)
@@ -0,0 +1,141 @@
+package com.tubes.purry.ui.analytics
+
+import android.app.Application
+import androidx.lifecycle.AndroidViewModel
+import androidx.lifecycle.viewModelScope
+import com.tubes.purry.data.model.*
+import com.tubes.purry.data.repository.AnalyticsRepository
+import com.tubes.purry.data.repository.ProfileRepository
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class SoundCapsuleViewModel(
+    application: Application,
+    private val analyticsRepository: AnalyticsRepository,
+    private val profileRepository: ProfileRepository,
+    private val exportService: AnalyticsExportService
+) : AndroidViewModel(application) {
+
+    suspend fun getMonthlyAnalytics(userId: Int, month: String): MonthlyAnalytics {
+        return analyticsRepository.getMonthlyAnalytics(userId, month)
+    }
+
+    suspend fun getAllMonthsWithData(userId: Int): List<MonthlyAnalyticsSummary> {
+        val currentDate = Calendar.getInstance()
+        val months = mutableListOf<MonthlyAnalyticsSummary>()
+
+        // Check last 12 months
+        repeat(12) { i ->
+            currentDate.add(Calendar.MONTH, if (i == 0) 0 else -1)
+            val monthStr = SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(currentDate.time)
+
+            val analytics = analyticsRepository.getMonthlyAnalytics(userId, monthStr)
+            if (analytics.totalMinutesListened > 0) {
+                months.add(
+                    MonthlyAnalyticsSummary(
+                        month = monthStr,
+                        displayName = SimpleDateFormat("MMMM yyyy", Locale.getDefault()).format(currentDate.time),
+                        totalMinutes = analytics.totalMinutesListened,
+                        topArtist = analytics.topArtist,
+                        topSong = analytics.topSong,
+                        dayStreaks = analytics.dayStreaks.size
+                    )
+                )
+            }
+        }
+
+        return months.sortedByDescending { it.month }
+    }
+
+    suspend fun getTopSongs(userId: Int, month: String, limit: Int = 50): List<TopSong> {
+        return analyticsRepository.getTopSongs(userId, month, limit)
+    }
+
+    suspend fun getTopArtists(userId: Int, month: String, limit: Int = 50): List<TopArtist> {
+        return analyticsRepository.getTopArtists(userId, month, limit)
+    }
+
+    suspend fun getDailyChart(userId: Int, month: String): List<DailyChartData> {
+        return analyticsRepository.getDailyChart(userId, month)
+    }
+
+    suspend fun exportMonthData(userId: Int, month: String): Boolean {
+        return try {
+            val analytics = analyticsRepository.getMonthlyAnalytics(userId, month)
+            val topSongs = analyticsRepository.getTopSongs(userId, month, 50)
+            val topArtists = analyticsRepository.getTopArtists(userId, month, 50)
+            val dailyChart = analyticsRepository.getDailyChart(userId, month)
+            val profileResponse = profileRepository.getProfile()
+            val profile = profileResponse.body()
+                ?: throw Exception("Failed to retrieve profile")
+
+            val exportData = AnalyticsExportData(
+                month = month,
+                userInfo = profile,
+                analytics = analytics,
+                topSongs = topSongs,
+                topArtists = topArtists,
+                dailyChart = dailyChart
+            )
+
+            exportService.exportPdfToMediaStore(exportData)
+        } catch (e: Exception) {
+            false
+        }
+    }
+
+    suspend fun exportAllData(userId: Int): Boolean {
+        return try {
+            val months = getAllMonthsWithData(userId)
+            val allExportData = mutableListOf<AnalyticsExportData>()
+
+            for (monthSummary in months) {
+                val analytics = analyticsRepository.getMonthlyAnalytics(userId, monthSummary.month)
+                val topSongs = analyticsRepository.getTopSongs(userId, monthSummary.month, 50)
+                val topArtists = analyticsRepository.getTopArtists(userId, monthSummary.month, 50)
+                val dailyChart = analyticsRepository.getDailyChart(userId, monthSummary.month)
+                val profileResponse = profileRepository.getProfile()
+                val profile = profileResponse.body()
+                    ?: throw Exception("Failed to retrieve profile")
+
+                allExportData.add(
+                    AnalyticsExportData(
+                        month = monthSummary.month,
+                        userInfo = profile,
+                        analytics = analytics,
+                        topSongs = topSongs,
+                        topArtists = topArtists,
+                        dailyChart = dailyChart
+                    )
+                )
+            }
+
+            exportService.exportAllDataToPdfMediaStore(allExportData)
+        } catch (e: Exception) {
+            false
+        }
+    }
+
+    fun startListeningSession(userId: Int, song: Song) {
+        viewModelScope.launch {
+            analyticsRepository.startListeningSession(userId, song)
+        }
+    }
+
+    fun endListeningSession(sessionId: Long, duration: Long) {
+        viewModelScope.launch {
+            analyticsRepository.endListeningSession(sessionId, duration)
+        }
+    }
+}
+
+// Data class untuk summary list
+data class MonthlyAnalyticsSummary(
+    val month: String,
+    val displayName: String,
+    val totalMinutes: Long,
+    val topArtist: String?,
+    val topSong: String?,
+    val dayStreaks: Int
+)
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleActivity.kt b/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617104)
+++ b/app/src/main/java/com/tubes/purry/ui/analytics/SoundCapsuleActivity.kt	(date 1748195617104)
@@ -0,0 +1,160 @@
+package com.tubes.purry.ui.analytics
+
+import android.content.Intent
+import android.os.Bundle
+import android.view.View
+import androidx.activity.viewModels
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.lifecycle.lifecycleScope
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivitySoundCapsuleBinding
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.launch
+import java.text.SimpleDateFormat
+import java.util.*
+
+class SoundCapsuleActivity : AppCompatActivity() {
+
+    private lateinit var binding: ActivitySoundCapsuleBinding
+    private lateinit var sessionManager: SessionManager
+    private lateinit var adapter: SoundCapsuleAdapter
+
+    private val viewModel: SoundCapsuleViewModel by viewModels {
+        SoundCapsuleViewModelFactory(this)
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivitySoundCapsuleBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        sessionManager = SessionManager(this)
+        setupUI()
+        loadSoundCapsule()
+    }
+
+    private fun setupUI() {
+        // Setup toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.setDisplayShowTitleEnabled(false)
+        binding.toolbar.setNavigationOnClickListener {
+            onBackPressed()
+        }
+
+        // Setup RecyclerView
+        adapter = SoundCapsuleAdapter(
+            onMonthClick = { month -> openMonthDetail(month) },
+            onExportClick = { month -> exportMonth(month) }
+        )
+
+        binding.rvSoundCapsule.apply {
+            adapter = this@SoundCapsuleActivity.adapter
+            layoutManager = LinearLayoutManager(this@SoundCapsuleActivity)
+        }
+
+        // Setup export all button
+        binding.btnExportAll.setOnClickListener {
+            exportAllData()
+        }
+    }
+
+    private fun loadSoundCapsule() {
+        val userId = sessionManager.getUserId()
+        if (userId == null) {
+            showError("User not logged in")
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        lifecycleScope.launch {
+            try {
+                val months = viewModel.getAllMonthsWithData(userId)
+                if (months.isEmpty()) {
+                    showNoData()
+                } else {
+                    adapter.submitList(months)
+                    binding.rvSoundCapsule.visibility = View.VISIBLE
+                    binding.tvNoData.visibility = View.GONE
+                }
+            } catch (e: Exception) {
+                showError("Failed to load data: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+
+    private fun showNoData() {
+        binding.rvSoundCapsule.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = "No data available\nStart listening to music to see your Sound Capsule!"
+    }
+
+    private fun showError(message: String) {
+        binding.rvSoundCapsule.visibility = View.GONE
+        binding.tvNoData.visibility = View.VISIBLE
+        binding.tvNoData.text = message
+    }
+
+    private fun openMonthDetail(month: String) {
+        val intent = Intent(this, MonthDetailActivity::class.java)
+        intent.putExtra("month", month)
+        startActivity(intent)
+    }
+
+    private fun exportMonth(month: String) {
+        val userId = sessionManager.getUserId() ?: return
+
+        lifecycleScope.launch {
+            try {
+                binding.progressBar.visibility = View.VISIBLE
+                val success = viewModel.exportMonthData(userId, month)
+
+                if (success) {
+                    showToast("Export successful! Check your Downloads folder.")
+                } else {
+                    showToast("Export failed. Please try again.")
+                }
+            } catch (e: Exception) {
+                showToast("Export error: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun exportAllData() {
+        val userId = sessionManager.getUserId() ?: return
+
+        lifecycleScope.launch {
+            try {
+                binding.progressBar.visibility = View.VISIBLE
+                val success = viewModel.exportAllData(userId)
+
+                if (success) {
+                    showToast("All data exported successfully!")
+                } else {
+                    showToast("Export failed. Please try again.")
+                }
+            } catch (e: Exception) {
+                showToast("Export error: ${e.message}")
+            } finally {
+                binding.progressBar.visibility = View.GONE
+            }
+        }
+    }
+
+    private fun showToast(message: String) {
+        // You can implement Toast or Snackbar here
+        android.widget.Toast.makeText(this, message, android.widget.Toast.LENGTH_SHORT).show()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/model/OnlineSong.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/OnlineSong.kt b/app/src/main/java/com/tubes/purry/data/model/OnlineSong.kt
new file mode 100644
--- /dev/null	(date 1748195617091)
+++ b/app/src/main/java/com/tubes/purry/data/model/OnlineSong.kt	(date 1748195617091)
@@ -0,0 +1,43 @@
+package com.tubes.purry.data.model
+
+import com.tubes.purry.utils.parseDuration
+import java.net.URLEncoder
+import java.nio.charset.StandardCharsets
+
+data class OnlineSong(
+    val id: Int,
+    val title: String,
+    val artist: String,
+    val artwork: String,
+    val url: String,
+    val duration: String,
+    val country: String,
+    val rank: Int,
+)
+
+fun OnlineSong.toLocalSong(localPath: String): Song {
+    return Song(
+        id = "srv-${this.id}",
+        serverId = this.id,
+        title = this.title,
+        artist = this.artist,
+        filePath = localPath,
+        coverPath = this.artwork,
+        duration = parseDuration(this.duration),
+        isLocal = true
+    )
+}
+
+fun OnlineSong.toTemporarySong(): Song {
+
+    return Song(
+        id = "srv-${this.id}",
+        serverId = this.id,
+        title = this.title,
+        artist = this.artist,
+        filePath = this.url,
+        coverPath = this.artwork,
+        duration = parseDuration(this.duration),
+        isLocal = false
+    )
+}
Index: app/src/main/res/menu/song_options_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/song_options_menu.xml b/app/src/main/res/menu/song_options_menu.xml
new file mode 100644
--- /dev/null	(date 1748195617195)
+++ b/app/src/main/res/menu/song_options_menu.xml	(date 1748195617195)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/menu_share"
+        android:title="@string/shareUrl"
+        android:icon="@drawable/ic_share"
+        app:showAsAction="ifRoom" />
+    <item
+        android:id="@+id/menu_share_qr"
+        android:title="@string/shareQRC"
+        android:icon="@drawable/ic_share"
+        app:showAsAction="ifRoom" />
+</menu>
Index: app/src/main/java/com/tubes/purry/data/local/AnalyticsDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/local/AnalyticsDao.kt b/app/src/main/java/com/tubes/purry/data/local/AnalyticsDao.kt
new file mode 100644
--- /dev/null	(date 1748195617083)
+++ b/app/src/main/java/com/tubes/purry/data/local/AnalyticsDao.kt	(date 1748195617083)
@@ -0,0 +1,119 @@
+package com.tubes.purry.data.local
+
+import androidx.room.*
+import com.tubes.purry.data.model.ListeningSession
+import kotlinx.coroutines.flow.Flow
+
+@Dao
+interface AnalyticsDao {
+
+    @Insert
+    suspend fun insertListeningSession(session: ListeningSession): Long
+
+    @Update
+    suspend fun updateListeningSession(session: ListeningSession)
+
+    @Query("SELECT * FROM listening_sessions WHERE userId = :userId AND month = :month ORDER BY startTime DESC")
+    fun getSessionsByMonth(userId: Int, month: String): Flow<List<ListeningSession>>
+
+    @Query("SELECT SUM(duration) FROM listening_sessions WHERE userId = :userId AND month = :month")
+    suspend fun getTotalListeningTimeByMonth(userId: Int, month: String): Long?
+
+    @Query("SELECT AVG(daily_total) FROM (SELECT SUM(duration) as daily_total FROM listening_sessions WHERE userId = :userId AND month = :month GROUP BY date)")
+    suspend fun getDailyAverageByMonth(userId: Int, month: String): Double?
+
+    @Query("""
+        SELECT artist, COUNT(*) as play_count, MAX(startTime) as recent_time
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY artist 
+        ORDER BY play_count DESC, recent_time DESC 
+        LIMIT 1
+    """)
+    suspend fun getTopArtistByMonth(userId: Int, month: String): TopArtistResult?
+
+    @Query("""
+        SELECT songTitle, artist, COUNT(*) as play_count, MAX(startTime) as recent_time
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY songId 
+        ORDER BY play_count DESC, recent_time DESC 
+        LIMIT 1
+    """)
+    suspend fun getTopSongByMonth(userId: Int, month: String): TopSongResult?
+
+    @Query("""
+        SELECT songTitle, artist, COUNT(*) as play_count
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY songId 
+        ORDER BY play_count DESC 
+        LIMIT :limit
+    """)
+    suspend fun getTopSongsByMonth(userId: Int, month: String, limit: Int): List<TopSongResult>
+
+    @Query("""
+        SELECT artist, COUNT(*) as play_count
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY artist 
+        ORDER BY play_count DESC 
+        LIMIT :limit
+    """)
+    suspend fun getTopArtistsByMonth(userId: Int, month: String, limit: Int): List<TopArtistResult>
+
+    @Query("SELECT COUNT(DISTINCT songId) FROM listening_sessions WHERE userId = :userId AND month = :month")
+    suspend fun getTotalSongsPlayedByMonth(userId: Int, month: String): Int
+
+    @Query("SELECT COUNT(DISTINCT artist) FROM listening_sessions WHERE userId = :userId AND month = :month")
+    suspend fun getTotalArtistsListenedByMonth(userId: Int, month: String): Int
+
+    @Query("""
+        SELECT date, SUM(duration) as total_duration
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY date 
+        ORDER BY date
+    """)
+    suspend fun getDailyListeningByMonth(userId: Int, month: String): List<DailyListeningResult>
+
+    // Query untuk day streaks - lagu yang didengar berturut-turut
+    @Query("""
+        SELECT songTitle, artist, date, COUNT(*) as play_count
+        FROM listening_sessions 
+        WHERE userId = :userId AND month = :month 
+        GROUP BY songId, date 
+        HAVING play_count > 0
+        ORDER BY songTitle, date
+    """)
+    suspend fun getSongsByDateForStreaks(userId: Int, month: String): List<SongDateResult>
+
+    @Query("SELECT * FROM listening_sessions WHERE id = :sessionId")
+    suspend fun getSessionById(sessionId: Long): ListeningSession?
+}
+
+// Data classes untuk query results
+data class TopArtistResult(
+    val artist: String,
+    val play_count: Int,
+    val recent_time: Long? = null
+)
+
+data class TopSongResult(
+    val songTitle: String,
+    val artist: String,
+    val play_count: Int,
+    val recent_time: Long? = null
+)
+
+data class DailyListeningResult(
+    val date: String,
+    val total_duration: Long
+)
+
+data class SongDateResult(
+    val songTitle: String,
+    val artist: String,
+    val date: String,
+    val play_count: Int
+)
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/model/ProfileUpdateRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/ProfileUpdateRequest.kt b/app/src/main/java/com/tubes/purry/data/model/ProfileUpdateRequest.kt
new file mode 100644
--- /dev/null	(date 1748195617092)
+++ b/app/src/main/java/com/tubes/purry/data/model/ProfileUpdateRequest.kt	(date 1748195617092)
@@ -0,0 +1,7 @@
+package com.tubes.purry.data.model
+
+import com.google.gson.annotations.SerializedName
+
+data class ProfileUpdateRequest(
+    @SerializedName("location") val location: String
+)
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/model/Analytics.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/Analytics.kt b/app/src/main/java/com/tubes/purry/data/model/Analytics.kt
new file mode 100644
--- /dev/null	(date 1748195617090)
+++ b/app/src/main/java/com/tubes/purry/data/model/Analytics.kt	(date 1748195617090)
@@ -0,0 +1,83 @@
+package com.tubes.purry.data.model
+
+import androidx.room.Entity
+import androidx.room.PrimaryKey
+import java.text.SimpleDateFormat
+import java.util.*
+
+// Entity untuk tracking listening session
+@Entity(tableName = "listening_sessions")
+data class ListeningSession(
+    @PrimaryKey(autoGenerate = true)
+    val id: Int = 0,
+    val userId: Int,
+    val songId: String,
+    val songTitle: String,
+    val artist: String,
+    val startTime: Long,
+    val endTime: Long? = null,
+    val duration: Long = 0, // dalam detik
+    val date: String = SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(Date()),
+    val month: String = SimpleDateFormat("yyyy-MM", Locale.getDefault()).format(Date())
+)
+
+// Data class untuk monthly analytics
+data class MonthlyAnalytics(
+    val month: String, // Format: "yyyy-MM"
+    val totalMinutesListened: Long,
+    val dailyAverage: Int,
+    val topArtist: String?,
+    val topArtistPlayCount: Int,
+    val topArtistCover: String?,
+    val topSong: String?,
+    val topSongArtist: String?,
+    val topSongPlayCount: Int,
+    val topSongCover: String?,
+    val totalSongsPlayed: Int,
+    val totalArtistsListened: Int,
+    val dayStreaks: List<DayStreak> = emptyList()
+)
+
+// Data class untuk day streak
+data class DayStreak(
+    val songTitle: String,
+    val artist: String,
+    val cover: String?,
+    val startDate: String,
+    val endDate: String,
+    val streakDays: Int
+)
+
+// Data class untuk top songs list
+data class TopSong(
+    val rank: Int,
+    val title: String,
+    val artist: String,
+    val cover: String?,
+    val playCount: Int
+)
+
+// Data class untuk top artists list
+data class TopArtist(
+    val rank: Int,
+    val name: String,
+    val cover: String?,
+    val playCount: Int
+)
+
+// Data class untuk daily chart data
+data class DailyChartData(
+    val day: Int,
+    val minutes: Int
+)
+
+// Data class untuk export
+data class AnalyticsExportData(
+    val month: String,
+    val userInfo: ProfileData,
+    val analytics: MonthlyAnalytics,
+    val topSongs: List<TopSong>,
+    val topArtists: List<TopArtist>,
+    val dailyChart: List<DailyChartData>,
+    val exportDate: String = SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault()).format(Date())
+)
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/model/RawSong.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/RawSong.kt b/app/src/main/java/com/tubes/purry/data/model/RawSong.kt
new file mode 100644
--- /dev/null	(date 1748195617093)
+++ b/app/src/main/java/com/tubes/purry/data/model/RawSong.kt	(date 1748195617093)
@@ -0,0 +1,15 @@
+package com.tubes.purry.data.model
+
+data class RawSong(
+    val id: Int,
+    val title: String,
+    val artist: String,
+    val artwork: String,
+    val url: String,
+    val duration: String, // ← tetap string dari API
+    val country: String,
+    val rank: Int,
+    val createdAt: String,
+    val updatedAt: String
+)
+
Index: app/src/main/java/com/tubes/purry/data/model/ChartItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/ChartItem.kt b/app/src/main/java/com/tubes/purry/data/model/ChartItem.kt
new file mode 100644
--- /dev/null	(date 1748195617091)
+++ b/app/src/main/java/com/tubes/purry/data/model/ChartItem.kt	(date 1748195617091)
@@ -0,0 +1,8 @@
+package com.tubes.purry.data.model
+
+data class ChartItem(
+    val title: String,
+    val description: String,
+    val imageRes: Int,
+    val isGlobal: Boolean
+)
Index: app/src/main/java/com/tubes/purry/ui/player/NowPlayingManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/player/NowPlayingManager.kt b/app/src/main/java/com/tubes/purry/ui/player/NowPlayingManager.kt
new file mode 100644
--- /dev/null	(date 1748195617124)
+++ b/app/src/main/java/com/tubes/purry/ui/player/NowPlayingManager.kt	(date 1748195617124)
@@ -0,0 +1,14 @@
+package com.tubes.purry.ui.player
+
+object NowPlayingManager {
+    var viewModel: NowPlayingViewModel? = null
+        private set
+
+    fun setViewModel(vm: NowPlayingViewModel) {
+        viewModel = vm
+    }
+
+    fun clearViewModel() {
+        viewModel = null
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/home/RecommendationAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/home/RecommendationAdapter.kt b/app/src/main/java/com/tubes/purry/ui/home/RecommendationAdapter.kt
new file mode 100644
--- /dev/null	(date 1748195617115)
+++ b/app/src/main/java/com/tubes/purry/ui/home/RecommendationAdapter.kt	(date 1748195617115)
@@ -0,0 +1,42 @@
+package com.tubes.purry.ui.home
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import com.tubes.purry.R
+import com.tubes.purry.data.model.RecommendationItem
+
+class RecommendationAdapter(
+    private val items: List<RecommendationItem>,
+    private val onItemClick: (RecommendationItem) -> Unit
+) : RecyclerView.Adapter<RecommendationAdapter.ViewHolder>() {
+
+    class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        val image: ImageView = view.findViewById(R.id.ivRecommendationImage)
+        val title: TextView = view.findViewById(R.id.tvRecommendationTitle)
+        val description: TextView = view.findViewById(R.id.tvRecommendationDescription)
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_recommendation, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        val item = items[position]
+
+        holder.image.setImageResource(item.imageRes)
+        holder.title.text = item.title
+        holder.description.text = item.description
+
+        holder.itemView.setOnClickListener {
+            onItemClick(item)
+        }
+    }
+
+    override fun getItemCount() = items.size
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/chart/TopChartDetailFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/chart/TopChartDetailFragment.kt b/app/src/main/java/com/tubes/purry/ui/chart/TopChartDetailFragment.kt
new file mode 100644
--- /dev/null	(date 1748195617112)
+++ b/app/src/main/java/com/tubes/purry/ui/chart/TopChartDetailFragment.kt	(date 1748195617112)
@@ -0,0 +1,183 @@
+package com.tubes.purry.ui.chart
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.activityViewModels
+import androidx.fragment.app.viewModels
+import androidx.lifecycle.lifecycleScope
+import androidx.recyclerview.widget.LinearLayoutManager
+import com.bumptech.glide.Glide
+import com.tubes.purry.R
+import com.tubes.purry.data.local.AppDatabase
+import com.tubes.purry.data.model.OnlineSong
+import com.tubes.purry.data.model.Song
+import com.tubes.purry.data.model.toTemporarySong
+import com.tubes.purry.databinding.FragmentTopChartDetailBinding
+import com.tubes.purry.ui.player.NowPlayingViewModel
+import com.tubes.purry.ui.profile.ProfileViewModel
+import com.tubes.purry.ui.profile.ProfileViewModelFactory
+import com.tubes.purry.utils.DownloadUtils
+import com.tubes.purry.utils.parseDuration
+import com.tubes.purry.utils.SessionManager
+import com.tubes.purry.PurrytifyApplication
+import kotlinx.coroutines.launch
+import java.util.UUID
+
+class TopChartDetailFragment : Fragment() {
+
+    private var _binding: FragmentTopChartDetailBinding? = null
+    private val binding get() = _binding!!
+
+    private lateinit var sessionManager: SessionManager
+
+    private var currentSongList: List<OnlineSong> = emptyList()
+
+    private lateinit var adapter: OnlineSongListAdapter
+
+    private val profileViewModel: ProfileViewModel by activityViewModels {
+        ProfileViewModelFactory(requireActivity().application)
+    }
+
+    private lateinit var nowPlayingViewModel: NowPlayingViewModel
+
+    private val chartViewModel: ChartViewModel by viewModels {
+        ChartViewModelFactory()
+    }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding = FragmentTopChartDetailBinding.inflate(inflater, container, false)
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        nowPlayingViewModel = (requireActivity().application as PurrytifyApplication).nowPlayingViewModel
+
+        val isGlobal = arguments?.getBoolean("isGlobal", true) ?: true
+        profileViewModel.profileData.observe(viewLifecycleOwner) { profile ->
+            val countryCode = if (!isGlobal) profile?.location ?: "ID" else null
+            val countryName = if (!isGlobal) getCountryName(countryCode) else "GLOBAL"
+            val chartTitle = "Top 50 $countryName"
+
+            binding.tvChartTitle.text = chartTitle
+            binding.tvChartDescription.text = "Your daily update of the most played tracks right now - $chartTitle"
+
+            android.util.Log.d("TopChartDetail", "Country Code used: $countryCode")
+            chartViewModel.fetchSongs(isGlobal, countryCode)
+        }
+
+        val coverRes = if (isGlobal) R.drawable.cov_playlist_global else R.drawable.cov_playlist_around
+        sessionManager = SessionManager(requireContext())
+
+        binding.toolbar.setNavigationOnClickListener {
+            requireActivity().onBackPressedDispatcher.onBackPressed()
+        }
+
+        Glide.with(this).load(coverRes).into(binding.ivChartCover)
+
+        adapter = OnlineSongListAdapter(
+            songs = emptyList(),
+            onClick = { clickedOnlineSong ->
+                val tempList = currentSongList.map { it.toTemporarySong() }
+                val clickedSong = clickedOnlineSong.toTemporarySong()
+                nowPlayingViewModel.setQueueFromClickedSong(clickedSong, tempList, requireContext())
+            },
+            onDownloadClick = { song ->
+                val context = requireContext()
+                adapter.markAsDownloading(song.url)
+
+                DownloadUtils.downloadSong(
+                    context = context,
+                    onlineSong = song,
+                    onComplete = { file ->
+                        if (file != null) {
+                            Toast.makeText(context, "Berhasil disimpan ke: ${file.absolutePath}", Toast.LENGTH_SHORT).show()
+
+                            val localSong = Song(
+                                id = UUID.randomUUID().toString(),
+                                title = song.title,
+                                artist = song.artist,
+                                filePath = file.absolutePath,
+                                coverPath = song.artwork,
+                                duration = parseDuration(song.duration),
+                                isLiked = false
+                            )
+                            lifecycleScope.launch {
+                                AppDatabase.getDatabase(context).songDao().insert(localSong)
+                            }
+                            adapter.markAsDownloaded(song.url)
+                        } else {
+                            Toast.makeText(context, "Gagal download lagu", Toast.LENGTH_SHORT).show()
+                        }
+                    }
+                )
+            }
+        )
+
+        var isShuffleMode = false
+
+        binding.btnShuffle.setOnClickListener {
+            isShuffleMode = !isShuffleMode
+            val color = if (isShuffleMode) R.color.green else android.R.color.white
+            binding.btnShuffle.setColorFilter(resources.getColor(color, null))
+        }
+
+        binding.btnPlay.setOnClickListener {
+            val queue = if (isShuffleMode) currentSongList.shuffled() else currentSongList
+            val songList = queue.map { it.toTemporarySong() }
+            val firstSong = songList.firstOrNull()
+            if (firstSong != null) {
+                nowPlayingViewModel.setQueueFromClickedSong(firstSong, songList, requireContext())
+            } else {
+                Toast.makeText(requireContext(), "No songs to play", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+        binding.btnDownloadAll.setOnClickListener {
+            val context = requireContext()
+            for (song in currentSongList) {
+                DownloadUtils.downloadSong(context, song) { file ->
+                    if (file != null) {
+                        Toast.makeText(context, "Unduh selesai: ${song.title}", Toast.LENGTH_SHORT).show()
+                    }
+                }
+            }
+            Toast.makeText(context, "Mengunduh semua lagu...", Toast.LENGTH_SHORT).show()
+        }
+
+        binding.rvChartSongs.layoutManager = LinearLayoutManager(requireContext())
+        binding.rvChartSongs.adapter = adapter
+
+        chartViewModel.songs.observe(viewLifecycleOwner) { songs ->
+            currentSongList = songs
+            adapter.updateSongs(songs)
+            adapter.checkDownloadedStatus(requireContext())
+        }
+
+        binding.toolbar.setNavigationOnClickListener {
+            requireActivity().onBackPressedDispatcher.onBackPressed()
+        }
+    }
+
+    private fun getCountryName(code: String?): String {
+        return try {
+            val locale = java.util.Locale("", code ?: "")
+            locale.displayCountry.ifBlank { "Your Country" }
+        } catch (e: Exception) {
+            "Your Country"
+        }
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
Index: app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt b/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617129)
+++ b/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt	(date 1748195617129)
@@ -0,0 +1,243 @@
+package com.tubes.purry.ui.profile
+
+import android.app.Activity
+import android.content.Intent
+import android.location.Geocoder
+import android.os.Bundle
+import android.os.Handler
+import android.os.Looper
+import android.util.Log
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import com.google.android.gms.maps.CameraUpdateFactory
+import com.google.android.gms.maps.GoogleMap
+import com.google.android.gms.maps.OnMapReadyCallback
+import com.google.android.gms.maps.SupportMapFragment
+import com.google.android.gms.maps.model.LatLng
+import com.google.android.gms.maps.model.MarkerOptions
+import com.tubes.purry.R
+import com.tubes.purry.databinding.ActivityMapsBinding
+import java.io.IOException
+import java.util.Locale
+
+class MapsActivity : AppCompatActivity(), OnMapReadyCallback {
+
+    private lateinit var binding: ActivityMapsBinding
+    private var googleMap: GoogleMap? = null
+    private var selectedLocation: LatLng? = null
+    private var selectedCountryCode: String? = null
+    private lateinit var geocoder: Geocoder
+
+    companion object {
+        private const val TAG = "MapsActivity"
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        Log.d(TAG, "onCreate: Starting MapsActivity")
+
+        try {
+            binding = ActivityMapsBinding.inflate(layoutInflater)
+            setContentView(binding.root)
+            Log.d(TAG, "onCreate: Layout inflated successfully")
+
+            geocoder = Geocoder(this, Locale.getDefault())
+
+            // Add delay to ensure layout is ready
+            Handler(Looper.getMainLooper()).postDelayed({
+                initializeMap()
+            }, 500)
+
+            setupClickListeners()
+
+        } catch (e: Exception) {
+            Log.e(TAG, "onCreate: Error initializing activity", e)
+            Toast.makeText(this, "Error initializing maps: ${e.message}", Toast.LENGTH_LONG).show()
+        }
+    }
+
+    private fun initializeMap() {
+        try {
+            // Initialize map
+            val mapFragment = supportFragmentManager
+                .findFragmentById(R.id.mapFragment) as? SupportMapFragment
+
+            if (mapFragment != null) {
+                Log.d(TAG, "initializeMap: MapFragment found, getting map async")
+                mapFragment.getMapAsync(this)
+            } else {
+                Log.e(TAG, "initializeMap: MapFragment is null!")
+
+                // Try alternative approach
+                Handler(Looper.getMainLooper()).postDelayed({
+                    val fragmentRetry = supportFragmentManager
+                        .findFragmentById(R.id.mapFragment) as? SupportMapFragment
+                    fragmentRetry?.getMapAsync(this)
+                }, 1000)
+            }
+        } catch (e: Exception) {
+            Log.e(TAG, "initializeMap: Error", e)
+        }
+    }
+
+    private fun setupClickListeners() {
+        Log.d(TAG, "setupClickListeners: Setting up click listeners")
+
+        binding.btnSelectLocation.setOnClickListener {
+            Log.d(TAG, "btnSelectLocation clicked")
+            selectedLocation?.let { location ->
+                getCountryCodeFromLocation(location.latitude, location.longitude)
+            } ?: run {
+                Toast.makeText(this, "Please select a location on the map", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+        binding.btnCancel.setOnClickListener {
+            Log.d(TAG, "btnCancel clicked")
+            setResult(Activity.RESULT_CANCELED)
+            finish()
+        }
+    }
+
+    override fun onMapReady(map: GoogleMap) {
+        Log.d(TAG, "onMapReady: Map is ready!")
+
+        try {
+            googleMap = map
+
+            // Test if map is actually working by setting a background color
+            googleMap?.mapType = GoogleMap.MAP_TYPE_NORMAL
+
+            // Set default location (Jakarta, Indonesia)
+            val defaultLocation = LatLng(-6.2088, 106.8456)
+
+            // Add a marker first to see if it appears
+            googleMap?.addMarker(
+                MarkerOptions()
+                    .position(defaultLocation)
+                    .title("Default Location - Jakarta")
+            )
+
+            // Move camera with animation
+            googleMap?.animateCamera(
+                CameraUpdateFactory.newLatLngZoom(defaultLocation, 12f),
+                2000,
+                object : GoogleMap.CancelableCallback {
+                    override fun onFinish() {
+                        Log.d(TAG, "Camera animation finished")
+                        Toast.makeText(this@MapsActivity, "Map loaded! Tap to select location", Toast.LENGTH_SHORT).show()
+                    }
+
+                    override fun onCancel() {
+                        Log.d(TAG, "Camera animation cancelled")
+                    }
+                }
+            )
+
+            Log.d(TAG, "onMapReady: Camera moved to default location")
+
+            // Set map click listener
+            googleMap?.setOnMapClickListener { latLng ->
+                Log.d(TAG, "Map clicked at: ${latLng.latitude}, ${latLng.longitude}")
+
+                // Clear previous markers
+                googleMap?.clear()
+
+                // Add marker at clicked location
+                googleMap?.addMarker(
+                    MarkerOptions()
+                        .position(latLng)
+                        .title("Selected Location")
+                )
+
+                selectedLocation = latLng
+
+                // Update UI to show coordinates
+                binding.txtSelectedCoordinates.text =
+                    "Lat: ${String.format("%.6f", latLng.latitude)}, Lng: ${String.format("%.6f", latLng.longitude)}"
+
+                // Get address from coordinates
+                getAddressFromLocation(latLng.latitude, latLng.longitude)
+            }
+
+            // Enable map controls
+            googleMap?.uiSettings?.apply {
+                isZoomControlsEnabled = true
+                isMapToolbarEnabled = true
+                isMyLocationButtonEnabled = false
+                isCompassEnabled = true
+                isRotateGesturesEnabled = true
+                isScrollGesturesEnabled = true
+                isTiltGesturesEnabled = true
+                isZoomGesturesEnabled = true
+            }
+
+            Log.d(TAG, "onMapReady: Map setup completed successfully")
+
+        } catch (e: Exception) {
+            Log.e(TAG, "onMapReady: Error setting up map", e)
+            Toast.makeText(this, "Error setting up map: ${e.message}", Toast.LENGTH_LONG).show()
+        }
+    }
+
+    private fun getAddressFromLocation(latitude: Double, longitude: Double) {
+        Log.d(TAG, "getAddressFromLocation: Getting address for $latitude, $longitude")
+
+        try {
+            val addresses = geocoder.getFromLocation(latitude, longitude, 1)
+            if (addresses != null && addresses.isNotEmpty()) {
+                val address = addresses[0]
+                val fullAddress = address.getAddressLine(0) ?: ""
+                val countryName = address.countryName ?: ""
+
+                binding.txtSelectedAddress.text = fullAddress
+                binding.txtSelectedCountry.text = countryName
+
+                Log.d(TAG, "getAddressFromLocation: Country: $countryName, Address: $fullAddress")
+            } else {
+                Log.w(TAG, "getAddressFromLocation: No addresses found")
+                binding.txtSelectedAddress.text = "Address not available"
+            }
+        } catch (e: IOException) {
+            Log.e(TAG, "getAddressFromLocation: Error getting address", e)
+            binding.txtSelectedAddress.text = "Address not available"
+        }
+    }
+
+    private fun getCountryCodeFromLocation(latitude: Double, longitude: Double) {
+        Log.d(TAG, "getCountryCodeFromLocation: Getting country code for $latitude, $longitude")
+
+        try {
+            val addresses = geocoder.getFromLocation(latitude, longitude, 1)
+            if (addresses != null && addresses.isNotEmpty()) {
+                val countryCode = addresses[0].countryCode
+                val countryName = addresses[0].countryName
+
+                if (countryCode != null) {
+                    selectedCountryCode = countryCode
+
+                    Log.d(TAG, "getCountryCodeFromLocation: Found country: $countryName ($countryCode)")
+
+                    // Return result to EditProfileActivity
+                    val resultIntent = Intent()
+                    resultIntent.putExtra("selected_country_code", countryCode)
+                    resultIntent.putExtra("selected_country_name", countryName)
+                    resultIntent.putExtra("selected_latitude", latitude)
+                    resultIntent.putExtra("selected_longitude", longitude)
+
+                    setResult(Activity.RESULT_OK, resultIntent)
+                    finish()
+                } else {
+                    Log.w(TAG, "getCountryCodeFromLocation: Country code is null")
+                    Toast.makeText(this, "Could not determine country for this location", Toast.LENGTH_SHORT).show()
+                }
+            } else {
+                Log.w(TAG, "getCountryCodeFromLocation: No addresses found")
+                Toast.makeText(this, "Could not get location details", Toast.LENGTH_SHORT).show()
+            }
+        } catch (e: IOException) {
+            Log.e(TAG, "getCountryCodeFromLocation: Error getting country code", e)
+            Toast.makeText(this, "Error getting location details: ${e.message}", Toast.LENGTH_SHORT).show()
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt b/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt
new file mode 100644
--- /dev/null	(date 1748195617129)
+++ b/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt	(date 1748195617129)
@@ -0,0 +1,493 @@
+package com.tubes.purry.ui.profile
+
+import android.Manifest
+import okhttp3.MediaType.Companion.toMediaTypeOrNull
+import okhttp3.MultipartBody
+import okhttp3.RequestBody.Companion.asRequestBody
+import okhttp3.RequestBody.Companion.toRequestBody
+import java.io.File
+import android.app.Activity
+import android.content.Context
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.location.Geocoder
+import android.location.Location
+import android.net.Uri
+import android.os.Bundle
+import android.provider.MediaStore
+import android.provider.Settings
+import android.util.Log
+import android.view.View
+import android.widget.Toast
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AlertDialog
+import androidx.appcompat.app.AppCompatActivity
+import androidx.appcompat.widget.Toolbar
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import androidx.core.content.FileProvider
+import com.bumptech.glide.Glide
+import com.google.android.gms.location.FusedLocationProviderClient
+import com.google.android.gms.location.LocationServices
+import com.tubes.purry.R
+import com.tubes.purry.data.remote.ApiClient
+import com.tubes.purry.data.repository.AuthRepository
+import com.tubes.purry.data.repository.ProfileRepository
+import com.tubes.purry.databinding.ActivityEditProfileBinding
+import com.tubes.purry.utils.SessionManager
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import kotlinx.coroutines.withContext
+import java.io.IOException
+import java.text.SimpleDateFormat
+import java.util.Date
+import java.util.Locale
+
+class EditProfileActivity : AppCompatActivity() {
+    private lateinit var binding: ActivityEditProfileBinding
+    private lateinit var fusedLocationClient: FusedLocationProviderClient
+    private lateinit var profileRepository: ProfileRepository
+    private lateinit var authRepository: AuthRepository
+    private lateinit var sessionManager: SessionManager
+
+    private var currentPhotoUri: Uri? = null
+    private var currentLocation: String? = null
+    private var currentPhotoPath: String? = null
+
+    private val locationPermissionRequest = registerForActivityResult(
+        ActivityResultContracts.RequestMultiplePermissions()
+    ) { permissions ->
+        when {
+            permissions[Manifest.permission.ACCESS_FINE_LOCATION] == true ||
+                    permissions[Manifest.permission.ACCESS_COARSE_LOCATION] == true -> {
+                // Permission granted
+                getLastLocation()
+            }
+            else -> {
+                Toast.makeText(this, "Location permission is required", Toast.LENGTH_SHORT).show()
+                showPermissionExplanationDialog()
+            }
+        }
+    }
+
+    private val takePictureLauncher = registerForActivityResult(
+        ActivityResultContracts.StartActivityForResult()
+    ) { result ->
+        if (result.resultCode == Activity.RESULT_OK) {
+            currentPhotoUri?.let { uri ->
+                loadImageFromUri(uri)
+            }
+        }
+    }
+
+    private val pickImageLauncher = registerForActivityResult(
+        ActivityResultContracts.StartActivityForResult()
+    ) { result ->
+        if (result.resultCode == Activity.RESULT_OK) {
+            result.data?.data?.let { uri ->
+                currentPhotoUri = uri
+                loadImageFromUri(uri)
+            }
+        }
+    }
+
+    // Update bagian mapLauncher di EditProfileActivity.kt
+    private val mapLauncher = registerForActivityResult(
+        ActivityResultContracts.StartActivityForResult()
+    ) { result ->
+        if (result.resultCode == Activity.RESULT_OK) {
+            result.data?.let { data ->
+                val countryCode = data.getStringExtra("selected_country_code")
+                val countryName = data.getStringExtra("selected_country_name")
+                val latitude = data.getDoubleExtra("selected_latitude", 0.0)
+                val longitude = data.getDoubleExtra("selected_longitude", 0.0)
+
+                countryCode?.let { code ->
+                    currentLocation = code
+                    binding.txtCurrentLocation.text = countryName ?: getCountryNameFromCode(code)
+
+                    // Optional: Log the coordinates for debugging
+                    Log.d("EditProfile", "Selected location: $latitude, $longitude in $countryName ($code)")
+                }
+            }
+        }
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityEditProfileBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        val toolbar = findViewById<Toolbar>(R.id.toolbar)
+        setSupportActionBar(toolbar)
+
+        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)
+
+        // Initialize sessionManager first
+        sessionManager = SessionManager(applicationContext)
+
+        // Create AuthRepository
+        authRepository = AuthRepository(ApiClient.apiService, sessionManager)
+
+        // Create ProfileRepository with all required parameters
+        profileRepository = ProfileRepository(ApiClient.apiService, authRepository)
+
+        setupClickListeners()
+        loadCurrentProfileData()
+    }
+
+    private fun setupClickListeners() {
+        binding.btnChangePhoto.setOnClickListener {
+            showImageSelectionDialog()
+        }
+
+        binding.btnDetectLocation.setOnClickListener {
+            checkLocationPermission()
+        }
+
+        binding.btnChooseLocation.setOnClickListener {
+            // Launch Google Maps activity
+            val intent = Intent(this, MapsActivity::class.java)
+            mapLauncher.launch(intent)
+        }
+
+        binding.btnSaveProfile.setOnClickListener {
+            saveProfileChanges()
+        }
+    }
+
+    private fun loadCurrentProfileData() {
+        binding.progressBar.visibility = View.VISIBLE
+        CoroutineScope(Dispatchers.IO).launch {
+            try {
+                // Using the new method that handles token internally
+                val response = profileRepository.getProfile()
+                withContext(Dispatchers.Main) {
+                    binding.progressBar.visibility = View.GONE
+                    if (response.isSuccessful && response.body() != null) {
+                        val profile = response.body()!!
+                        currentLocation = profile.location
+                        binding.txtCurrentLocation.text = getCountryNameFromCode(profile.location)
+
+                        // Load profile image
+                        val imageUrl = "http://34.101.226.132:3000/uploads/profile-picture/${profile.profilePhoto}"
+                        Glide.with(this@EditProfileActivity)
+                            .load(imageUrl)
+                            .placeholder(R.drawable.profile_placeholder)
+                            .error(R.drawable.profile_placeholder)
+                            .circleCrop()
+                            .into(binding.imgProfile)
+                    } else {
+                        Toast.makeText(
+                            this@EditProfileActivity,
+                            "Failed to load profile: ${response.message()}",
+                            Toast.LENGTH_SHORT
+                        ).show()
+                    }
+                }
+            } catch (e: Exception) {
+                withContext(Dispatchers.Main) {
+                    binding.progressBar.visibility = View.GONE
+                    Toast.makeText(this@EditProfileActivity, "Error: ${e.message}", Toast.LENGTH_SHORT).show()
+                }
+            }
+        }
+    }
+
+    private fun checkLocationPermission() {
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) !=
+            PackageManager.PERMISSION_GRANTED ||
+            ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) !=
+            PackageManager.PERMISSION_GRANTED) {
+
+            // Request permissions
+            locationPermissionRequest.launch(
+                arrayOf(
+                    Manifest.permission.ACCESS_FINE_LOCATION,
+                    Manifest.permission.ACCESS_COARSE_LOCATION
+                )
+            )
+        } else {
+            // Permission already granted
+            getLastLocation()
+        }
+    }
+
+    private fun getLastLocation() {
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) !=
+            PackageManager.PERMISSION_GRANTED &&
+            ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) !=
+            PackageManager.PERMISSION_GRANTED) {
+            return
+        }
+
+        binding.txtCurrentLocation.text = "Detecting location..."
+
+        fusedLocationClient.lastLocation
+            .addOnSuccessListener { location: Location? ->
+                location?.let {
+                    getCountryCodeFromLocation(it.latitude, it.longitude)
+                } ?: run {
+                    Toast.makeText(this, "Location not available. Try again later.", Toast.LENGTH_SHORT).show()
+                    binding.txtCurrentLocation.text = "Location not available"
+                }
+            }
+            .addOnFailureListener { e ->
+                Toast.makeText(this, "Error getting location: ${e.message}", Toast.LENGTH_SHORT).show()
+                binding.txtCurrentLocation.text = "Error detecting location"
+            }
+    }
+
+    private fun getCountryCodeFromLocation(latitude: Double, longitude: Double) {
+        try {
+            val geocoder = Geocoder(this, Locale.getDefault())
+            val addresses = geocoder.getFromLocation(latitude, longitude, 1)
+
+            if (addresses != null && addresses.isNotEmpty()) {
+                val countryCode = addresses[0].countryCode
+                val countryName = addresses[0].countryName
+
+                currentLocation = countryCode
+                binding.txtCurrentLocation.text = countryName
+            } else {
+                binding.txtCurrentLocation.text = "Location not found"
+            }
+        } catch (e: IOException) {
+            binding.txtCurrentLocation.text = "Error getting location"
+            e.printStackTrace()
+        }
+    }
+
+    private fun getCountryNameFromCode(countryCode: String): String {
+        val locale = Locale("", countryCode)
+        return locale.displayCountry
+    }
+
+    private fun showImageSelectionDialog() {
+        val options = arrayOf("Take Photo", "Choose from Gallery")
+
+        AlertDialog.Builder(this)
+            .setTitle("Change Profile Photo")
+            .setItems(options) { _, which ->
+                when (which) {
+                    0 -> checkCameraPermission()
+                    1 -> checkGalleryPermission()
+                }
+            }
+            .show()
+    }
+
+    private fun checkCameraPermission() {
+        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) !=
+            PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(
+                this,
+                arrayOf(Manifest.permission.CAMERA),
+                REQUEST_CAMERA_PERMISSION
+            )
+        } else {
+            dispatchTakePictureIntent()
+        }
+    }
+
+    private fun checkGalleryPermission() {
+        // For Android 13+
+        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.TIRAMISU) {
+            if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_MEDIA_IMAGES) !=
+                PackageManager.PERMISSION_GRANTED) {
+                ActivityCompat.requestPermissions(
+                    this,
+                    arrayOf(Manifest.permission.READ_MEDIA_IMAGES),
+                    REQUEST_GALLERY_PERMISSION
+                )
+            } else {
+                openGallery()
+            }
+        } else {
+            // For Android 12 and below
+            if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) !=
+                PackageManager.PERMISSION_GRANTED) {
+                ActivityCompat.requestPermissions(
+                    this,
+                    arrayOf(Manifest.permission.READ_EXTERNAL_STORAGE),
+                    REQUEST_GALLERY_PERMISSION
+                )
+            } else {
+                openGallery()
+            }
+        }
+    }
+
+    private fun dispatchTakePictureIntent() {
+        Intent(MediaStore.ACTION_IMAGE_CAPTURE).also { takePictureIntent ->
+            // Check if there's a camera app available to handle the intent
+            takePictureIntent.resolveActivity(packageManager)?.also {
+                val photoFile: File? = try {
+                    createImageFile()
+                } catch (ex: IOException) {
+                    Toast.makeText(this, "Error creating image file", Toast.LENGTH_SHORT).show()
+                    null
+                }
+
+                photoFile?.also {
+                    currentPhotoUri = FileProvider.getUriForFile(
+                        this,
+                        "com.tubes.purry.fileprovider",
+                        it
+                    )
+                    takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, currentPhotoUri)
+                    takePictureLauncher.launch(takePictureIntent)
+                }
+            } ?: run {
+                // No camera app available
+                Toast.makeText(this, "No camera application available", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun createImageFile(): File {
+        val timeStamp: String = SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
+        val storageDir: File = getExternalFilesDir(null)!!
+        return File.createTempFile(
+            "JPEG_${timeStamp}_",
+            ".jpg",
+            storageDir
+        ).apply {
+            currentPhotoPath = absolutePath
+        }
+    }
+
+    private fun openGallery() {
+        val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
+        pickImageLauncher.launch(intent)
+    }
+
+    private fun loadImageFromUri(uri: Uri) {
+        Glide.with(this)
+            .load(uri)
+            .circleCrop()
+            .into(binding.imgProfile)
+    }
+
+    private fun saveProfileChanges() {
+        if (currentLocation == null) {
+            Toast.makeText(this, "Please select a location", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        val token = sessionManager.fetchAuthToken()
+        if (token == null) {
+            Toast.makeText(this, "Authentication token not found", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        binding.progressBar.visibility = View.VISIBLE
+
+        CoroutineScope(Dispatchers.IO).launch {
+            try {
+                val locationPart = currentLocation!!.toRequestBody("text/plain".toMediaTypeOrNull())
+
+                var profilePhotoPart: MultipartBody.Part? = null
+                if (currentPhotoUri != null) {
+                    try {
+                        // Instead of trying to get a file path, read the content directly using input stream
+                        val inputStream = contentResolver.openInputStream(currentPhotoUri!!)
+                        if (inputStream != null) {
+                            // Create a temp file to store the contents
+                            val tempFile = File.createTempFile("upload_", ".jpg", cacheDir)
+                            tempFile.outputStream().use { outputStream ->
+                                inputStream.copyTo(outputStream)
+                            }
+
+                            // Use the temp file for the upload
+                            val requestFile = tempFile.asRequestBody("image/*".toMediaTypeOrNull())
+                            profilePhotoPart = MultipartBody.Part.createFormData(
+                                "profilePhoto",
+                                "profile_image.jpg",
+                                requestFile
+                            )
+                        }
+                    } catch (e: Exception) {
+                        Log.e("EditProfileActivity", "Error handling image file", e)
+                        withContext(Dispatchers.Main) {
+                            Toast.makeText(
+                                this@EditProfileActivity,
+                                "Error processing image: ${e.message}",
+                                Toast.LENGTH_SHORT
+                            ).show()
+                        }
+                        // Continue without the image if there's an error
+                    }
+                }
+
+                // Make the API call
+                val response = ApiClient.apiService.updateProfile(
+                    "Bearer $token",
+                    locationPart,
+                    profilePhotoPart
+                )
+
+                withContext(Dispatchers.Main) {
+                    binding.progressBar.visibility = View.GONE
+                    if (response.isSuccessful) {
+                        Toast.makeText(this@EditProfileActivity, "Profile updated successfully", Toast.LENGTH_SHORT).show()
+                        finish()
+                    } else {
+                        Toast.makeText(this@EditProfileActivity, "Failed to update profile: ${response.message()}", Toast.LENGTH_SHORT).show()
+                    }
+                }
+            } catch (e: Exception) {
+                withContext(Dispatchers.Main) {
+                    binding.progressBar.visibility = View.GONE
+                    Toast.makeText(this@EditProfileActivity, "Error: ${e.message}", Toast.LENGTH_SHORT).show()
+                    Log.e("EditProfileActivity", "Error updating profile", e)
+                }
+            }
+        }
+    }
+
+    private fun showPermissionExplanationDialog() {
+        AlertDialog.Builder(this)
+            .setTitle("Location Permission Required")
+            .setMessage("To detect your current location, we need location permission. Would you like to grant permission in settings?")
+            .setPositiveButton("Go to Settings") { _, _ ->
+                val intent = Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)
+                val uri = Uri.fromParts("package", packageName, null)
+                intent.data = uri
+                startActivity(intent)
+            }
+            .setNegativeButton("Cancel", null)
+            .show()
+    }
+
+    override fun onRequestPermissionsResult(
+        requestCode: Int,
+        permissions: Array<out String>,
+        grantResults: IntArray
+    ) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+
+        when (requestCode) {
+            REQUEST_CAMERA_PERMISSION -> {
+                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    dispatchTakePictureIntent()
+                } else {
+                    Toast.makeText(this, "Camera permission denied", Toast.LENGTH_SHORT).show()
+                }
+            }
+            REQUEST_GALLERY_PERMISSION -> {
+                if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                    openGallery()
+                } else {
+                    Toast.makeText(this, "Gallery permission denied", Toast.LENGTH_SHORT).show()
+                }
+            }
+        }
+    }
+
+    companion object {
+        private const val REQUEST_CAMERA_PERMISSION = 101
+        private const val REQUEST_GALLERY_PERMISSION = 102
+    }
+}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1748195617065)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]/shelved.patch	(date 1748195617065)
@@ -0,0 +1,707 @@
+Index: .idea/caches/deviceStreaming.xml
+===================================================================
+diff --git a/.idea/caches/deviceStreaming.xml b/.idea/caches/deviceStreaming.xml
+deleted file mode 100644
+--- a/.idea/caches/deviceStreaming.xml	(revision 3e05ebc82087a14fb0352ddbe543ace432b8328a)
++++ /dev/null	(revision 3e05ebc82087a14fb0352ddbe543ace432b8328a)
+@@ -1,607 +0,0 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+-<project version="4">
+-  <component name="DeviceStreaming">
+-    <option name="deviceSelectionList">
+-      <list>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="27" />
+-          <option name="brand" value="DOCOMO" />
+-          <option name="codename" value="F01L" />
+-          <option name="id" value="F01L" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="FUJITSU" />
+-          <option name="name" value="F-01L" />
+-          <option name="screenDensity" value="360" />
+-          <option name="screenX" value="720" />
+-          <option name="screenY" value="1280" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="OnePlus" />
+-          <option name="codename" value="OP5552L1" />
+-          <option name="id" value="OP5552L1" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="OnePlus" />
+-          <option name="name" value="CPH2415" />
+-          <option name="screenDensity" value="480" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2412" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="OPPO" />
+-          <option name="codename" value="OP573DL1" />
+-          <option name="id" value="OP573DL1" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="OPPO" />
+-          <option name="name" value="CPH2557" />
+-          <option name="screenDensity" value="480" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="28" />
+-          <option name="brand" value="DOCOMO" />
+-          <option name="codename" value="SH-01L" />
+-          <option name="id" value="SH-01L" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="SHARP" />
+-          <option name="name" value="AQUOS sense2 SH-01L" />
+-          <option name="screenDensity" value="480" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2160" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="Lenovo" />
+-          <option name="codename" value="TB370FU" />
+-          <option name="formFactor" value="Tablet" />
+-          <option name="id" value="TB370FU" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Lenovo" />
+-          <option name="name" value="Tab P12" />
+-          <option name="screenDensity" value="340" />
+-          <option name="screenX" value="1840" />
+-          <option name="screenY" value="2944" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="a15" />
+-          <option name="id" value="a15" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="A15" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="a35x" />
+-          <option name="id" value="a35x" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="A35" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="31" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="a51" />
+-          <option name="id" value="a51" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy A51" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="akita" />
+-          <option name="id" value="akita" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 8a" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="motorola" />
+-          <option name="codename" value="arcfox" />
+-          <option name="id" value="arcfox" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Motorola" />
+-          <option name="name" value="razr plus 2024" />
+-          <option name="screenDensity" value="360" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="1272" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="motorola" />
+-          <option name="codename" value="austin" />
+-          <option name="id" value="austin" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Motorola" />
+-          <option name="name" value="moto g 5G (2022)" />
+-          <option name="screenDensity" value="280" />
+-          <option name="screenX" value="720" />
+-          <option name="screenY" value="1600" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="b0q" />
+-          <option name="id" value="b0q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S22 Ultra" />
+-          <option name="screenDensity" value="600" />
+-          <option name="screenX" value="1440" />
+-          <option name="screenY" value="3088" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="32" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="bluejay" />
+-          <option name="id" value="bluejay" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 6a" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="caiman" />
+-          <option name="id" value="caiman" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 9 Pro" />
+-          <option name="screenDensity" value="360" />
+-          <option name="screenX" value="960" />
+-          <option name="screenY" value="2142" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="comet" />
+-          <option name="default" value="true" />
+-          <option name="id" value="comet" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 9 Pro Fold" />
+-          <option name="screenDensity" value="390" />
+-          <option name="screenX" value="2076" />
+-          <option name="screenY" value="2152" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="29" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="crownqlteue" />
+-          <option name="id" value="crownqlteue" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Note9" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="2220" />
+-          <option name="screenY" value="1080" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="dm2q" />
+-          <option name="id" value="dm2q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="S23 Plus" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="dm3q" />
+-          <option name="id" value="dm3q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S23 Ultra" />
+-          <option name="screenDensity" value="600" />
+-          <option name="screenX" value="1440" />
+-          <option name="screenY" value="3088" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="e1q" />
+-          <option name="default" value="true" />
+-          <option name="id" value="e1q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S24" />
+-          <option name="screenDensity" value="480" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="e3q" />
+-          <option name="id" value="e3q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S24 Ultra" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1440" />
+-          <option name="screenY" value="3120" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="eos" />
+-          <option name="id" value="eos" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Eos" />
+-          <option name="screenDensity" value="320" />
+-          <option name="screenX" value="384" />
+-          <option name="screenY" value="384" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="felix" />
+-          <option name="id" value="felix" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel Fold" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="2208" />
+-          <option name="screenY" value="1840" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="felix" />
+-          <option name="id" value="felix" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel Fold" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="2208" />
+-          <option name="screenY" value="1840" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="felix_camera" />
+-          <option name="id" value="felix_camera" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel Fold (Camera-enabled)" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="2208" />
+-          <option name="screenY" value="1840" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="motorola" />
+-          <option name="codename" value="fogona" />
+-          <option name="id" value="fogona" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Motorola" />
+-          <option name="name" value="moto g play - 2024" />
+-          <option name="screenDensity" value="280" />
+-          <option name="screenX" value="720" />
+-          <option name="screenY" value="1600" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="g0q" />
+-          <option name="id" value="g0q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="SM-S906U1" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="gta9pwifi" />
+-          <option name="id" value="gta9pwifi" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="SM-X210" />
+-          <option name="screenDensity" value="240" />
+-          <option name="screenX" value="1200" />
+-          <option name="screenY" value="1920" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="gts7xllite" />
+-          <option name="id" value="gts7xllite" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="SM-T738U" />
+-          <option name="screenDensity" value="340" />
+-          <option name="screenX" value="1600" />
+-          <option name="screenY" value="2560" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="gts8uwifi" />
+-          <option name="formFactor" value="Tablet" />
+-          <option name="id" value="gts8uwifi" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Tab S8 Ultra" />
+-          <option name="screenDensity" value="320" />
+-          <option name="screenX" value="1848" />
+-          <option name="screenY" value="2960" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="gts8wifi" />
+-          <option name="formFactor" value="Tablet" />
+-          <option name="id" value="gts8wifi" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Tab S8" />
+-          <option name="screenDensity" value="274" />
+-          <option name="screenX" value="1600" />
+-          <option name="screenY" value="2560" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="gts9fe" />
+-          <option name="id" value="gts9fe" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Tab S9 FE 5G" />
+-          <option name="screenDensity" value="280" />
+-          <option name="screenX" value="1440" />
+-          <option name="screenY" value="2304" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="husky" />
+-          <option name="id" value="husky" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 8 Pro" />
+-          <option name="screenDensity" value="390" />
+-          <option name="screenX" value="1008" />
+-          <option name="screenY" value="2244" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="30" />
+-          <option name="brand" value="motorola" />
+-          <option name="codename" value="java" />
+-          <option name="id" value="java" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Motorola" />
+-          <option name="name" value="G20" />
+-          <option name="screenDensity" value="280" />
+-          <option name="screenX" value="720" />
+-          <option name="screenY" value="1600" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="komodo" />
+-          <option name="id" value="komodo" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 9 Pro XL" />
+-          <option name="screenDensity" value="360" />
+-          <option name="screenX" value="1008" />
+-          <option name="screenY" value="2244" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="lynx" />
+-          <option name="id" value="lynx" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 7a" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="motorola" />
+-          <option name="codename" value="maui" />
+-          <option name="id" value="maui" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Motorola" />
+-          <option name="name" value="moto g play - 2023" />
+-          <option name="screenDensity" value="280" />
+-          <option name="screenX" value="720" />
+-          <option name="screenY" value="1600" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="o1q" />
+-          <option name="id" value="o1q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S21" />
+-          <option name="screenDensity" value="421" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="31" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="oriole" />
+-          <option name="id" value="oriole" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 6" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="panther" />
+-          <option name="id" value="panther" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 7" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="q5q" />
+-          <option name="id" value="q5q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Z Fold5" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1812" />
+-          <option name="screenY" value="2176" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="q6q" />
+-          <option name="id" value="q6q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy Z Fold6" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1856" />
+-          <option name="screenY" value="2160" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="30" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="r11" />
+-          <option name="formFactor" value="Wear OS" />
+-          <option name="id" value="r11" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel Watch" />
+-          <option name="screenDensity" value="320" />
+-          <option name="screenX" value="384" />
+-          <option name="screenY" value="384" />
+-          <option name="type" value="WEAR_OS" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="r11q" />
+-          <option name="id" value="r11q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="SM-S711U" />
+-          <option name="screenDensity" value="450" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="30" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="redfin" />
+-          <option name="id" value="redfin" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 5" />
+-          <option name="screenDensity" value="440" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2340" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="shiba" />
+-          <option name="id" value="shiba" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 8" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="samsung" />
+-          <option name="codename" value="t2q" />
+-          <option name="id" value="t2q" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Samsung" />
+-          <option name="name" value="Galaxy S21 Plus" />
+-          <option name="screenDensity" value="394" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2400" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="33" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="tangorpro" />
+-          <option name="formFactor" value="Tablet" />
+-          <option name="id" value="tangorpro" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel Tablet" />
+-          <option name="screenDensity" value="320" />
+-          <option name="screenX" value="1600" />
+-          <option name="screenY" value="2560" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="34" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="tokay" />
+-          <option name="default" value="true" />
+-          <option name="id" value="tokay" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 9" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2424" />
+-        </PersistentDeviceSelectionData>
+-        <PersistentDeviceSelectionData>
+-          <option name="api" value="35" />
+-          <option name="brand" value="google" />
+-          <option name="codename" value="tokay" />
+-          <option name="default" value="true" />
+-          <option name="id" value="tokay" />
+-          <option name="labId" value="google" />
+-          <option name="manufacturer" value="Google" />
+-          <option name="name" value="Pixel 9" />
+-          <option name="screenDensity" value="420" />
+-          <option name="screenX" value="1080" />
+-          <option name="screenY" value="2424" />
+-        </PersistentDeviceSelectionData>
+-      </list>
+-    </option>
+-  </component>
+-</project>
+\ No newline at end of file
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_add_song_bottom_sheet.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_library.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_mini_player.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_song_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/navigation/mobile_navigation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"fix: liked songs\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/LikedSongDao.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/LikedSongDao.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/SongDao.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/SongDao.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/UserProfileDao.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/UserProfileDao.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\HP\\.android\\avd\\Medium_Phone_2.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Purrityfy\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"resourceFile\" />\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;HenryofSkalitz1202&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git&quot;,\r\n    &quot;accountId&quot;: &quot;7fc37d1c-ed82-4f3d-8fd0-e1abf17a0517&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$USER_HOME$/AppData/Local/Google/AndroidStudio2024.3/device-explorer/Medium Phone API 36/_/data/data/com.tubes.purry/shared_prefs/purrytify_encrypted_prefs.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vNqtWwPO7ZxkVWBE38kZUIankk\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Android App.app.executor\": \"Run\",\r\n    \"PROJECT_TRUSTED_KEY\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\r\n    \"git-widget-placeholder\": \"feat/library-and-playerxml\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.build.tools.auto.reload\": \"ALL\",\r\n    \"settings.editor.selected.configurable\": \"reference.settingsdialog.project.gradle\",\r\n    \"two.files.diff.last.used.file\": \"D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\edarr\\Downloads\\if3210-tubes-mad-2025-if3210-2025-mad-dhs\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n    <key name=\"android.template.854076717\">\r\n      <recent name=\"com.tubes.purry\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tubes.purry.ui.detail\" />\r\n      <recent name=\"com.tubes.purry.ui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"Purrityfy.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"RESTORE_FRESH_INSTALL_ONLY\" value=\"false\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"\" />\r\n      <created>1743996095375</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743996095375</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744039123686</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744039123686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744137793402</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744137793402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744366362051</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744366362051</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fix: direct login while token invalid\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744370621765</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744346785132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744346798831</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744417118324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"migrate feat/integrate-player to feat/library\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744429832969</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744429832969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix: add to queue songs removed after play or next\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744459994598</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744459994598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"fix: shuffle condition while repeat all\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744460388707</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744460388707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"refactor: unused crud song fragments\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744461500132</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744461500132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"refactor: unused crud song fragments and fix: update layout\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463319315</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463319315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix: styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463977402</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463977402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"refactor: unneeded files and styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744468467246</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744468467246</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"fix: liked songs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744475595772</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744475595772</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\" />\r\n    <MESSAGE value=\"fix: resolve image loading bug by removing dependency on third party link for image url\" />\r\n    <MESSAGE value=\"feat: profile stats\" />\r\n    <MESSAGE value=\"feat: edit and delete songs\" />\r\n    <MESSAGE value=\"fix: direct login while token invalid\" />\r\n    <MESSAGE value=\"fix: role/control to edit and delete songs\" />\r\n    <MESSAGE value=\"migrate feat/search to feat/library-and-playerxml\" />\r\n    <MESSAGE value=\"fix: resolve media player pcmWrite bug because of duplicate declaration in activity_main.xml\" />\r\n    <MESSAGE value=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\" />\r\n    <MESSAGE value=\"fix: fixed bug on play pause button, fixed bug on duration seeding to ms instead of seconds\" />\r\n    <MESSAGE value=\"merge feat/profile\" />\r\n    <MESSAGE value=\"migrate feat/integrate-player to feat/library\" />\r\n    <MESSAGE value=\"feat: next, prev, add to queue\" />\r\n    <MESSAGE value=\"fix: add to queue songs removed after play or next\" />\r\n    <MESSAGE value=\"fix: shuffle condition while repeat all\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments and fix: update layout\" />\r\n    <MESSAGE value=\"fix: styling\" />\r\n    <MESSAGE value=\"refactor: unneeded files and styling\" />\r\n    <MESSAGE value=\"fix: update style\" />\r\n    <MESSAGE value=\"fix: liked songs\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix: liked songs\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"kotlin-function\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt</url>\r\n          <line>8</line>\r\n          <properties class=\"com.tubes.purry.ui.player.NowPlayingViewModel\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.tubes.purry\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1744472887622\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.tubes.purry.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1744472887702\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 3e05ebc82087a14fb0352ddbe543ace432b8328a)
++++ b/.idea/workspace.xml	(date 1747715425375)
+@@ -72,13 +72,8 @@
+   </component>
+   <component name="ChangeListManager">
+     <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="fix: liked songs">
++      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" />
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/LikedSongDao.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/LikedSongDao.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/SongDao.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/SongDao.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/UserProfileDao.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/UserProfileDao.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/repository/SongRepository.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -154,28 +149,28 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Android App.app.executor": "Run",
+-    "PROJECT_TRUSTED_KEY": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.cidr.known.project.marker": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "RunOnceActivity.readMode.enableVisualFormatting": "true",
+-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+-    "cf.first.check.clang-format": "false",
+-    "cidr.known.project.marker": "true",
+-    "com.google.services.firebase.aqiPopupShown": "true",
+-    "git-widget-placeholder": "feat/library-and-playerxml",
+-    "ignore.virus.scanning.warn.message": "true",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt",
+-    "run.code.analysis.last.selected.profile": "pProject Default",
+-    "settings.build.tools.auto.reload": "ALL",
+-    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
+-    "two.files.diff.last.used.file": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt"
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Android App.app.executor&quot;: &quot;Run&quot;,
++    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
++    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
++    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
++    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
++    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;feat/library-and-playerxml&quot;,
++    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;,
++    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
++    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,
++    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
++    &quot;two.files.diff.last.used.file&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;
+   }
+-}]]></component>
++}</component>
+   <component name="RecentsManager">
+     <key name="MoveFile.RECENT_KEYS">
+       <recent name="C:\Users\edarr\Downloads\if3210-tubes-mad-2025-if3210-2025-mad-dhs\app\src\main\res\drawable" />
+@@ -375,7 +370,15 @@
+       <option name="project" value="LOCAL" />
+       <updated>1744475595772</updated>
+     </task>
+-    <option name="localTasksCounter" value="14" />
++    <task id="LOCAL-00014" summary="fix: liked songs">
++      <option name="closed" value="true" />
++      <created>1744477167648</created>
++      <option name="number" value="00014" />
++      <option name="presentableId" value="LOCAL-00014" />
++      <option name="project" value="LOCAL" />
++      <updated>1744477167648</updated>
++    </task>
++    <option name="localTasksCounter" value="15" />
+     <servers />
+   </component>
+   <component name="Vcs.Log.Tabs.Properties">
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1748195617072)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]/shelved.patch	(date 1748195617072)
@@ -0,0 +1,189 @@
+Index: app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.tubes.purry.data.local\r\n\r\nimport android.content.Context\r\nimport androidx.room.Database\r\nimport androidx.room.Room\r\nimport androidx.room.RoomDatabase\r\nimport android.util.Log\r\nimport com.tubes.purry.data.model.Song\r\nimport androidx.sqlite.db.SupportSQLiteDatabase\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\nimport com.tubes.purry.R\r\nimport com.tubes.purry.R.raw.terlintas\r\nimport com.tubes.purry.data.model.LikedSong\r\nimport com.tubes.purry.data.model.ProfileData\r\nimport com.tubes.purry.data.model.ListeningSession\r\n\r\n@Database(entities = [Song::class, LikedSong::class, ProfileData::class, ListeningSession::class], version = 7)\r\nabstract class AppDatabase : RoomDatabase() {\r\n    abstract fun songDao(): SongDao\r\n    abstract fun userProfileDao(): UserProfileDao\r\n    abstract fun LikedSongDao(): LikedSongDao\r\n    abstract fun analyticsDao(): AnalyticsDao\r\n\r\n    companion object {\r\n        @Volatile private var INSTANCE: AppDatabase? = null\r\n\r\n        fun getDatabase(context: Context): AppDatabase {\r\n            return INSTANCE ?: synchronized(this) {\r\n                val instance = Room.databaseBuilder(\r\n                    context.applicationContext,\r\n                    AppDatabase::class.java,\r\n                    \"purritify.db\"\r\n                )\r\n                    .fallbackToDestructiveMigration()\r\n                    .addCallback(SeedDatabaseCallback())\r\n                    .build()\r\n                    .also { INSTANCE = it }\r\n\r\n                instance\r\n            }\r\n        }\r\n    }\r\n\r\n    private class SeedDatabaseCallback : Callback() {\r\n        override fun onCreate(db: SupportSQLiteDatabase) {\r\n            super.onCreate(db)\r\n            Log.d(\"AppDatabase\", \"onCreate triggered. Seeding data...\")\r\n\r\n            // Create triggers for likedSongs counter\r\n            db.execSQL(\"\"\"\r\n                CREATE TRIGGER IF NOT EXISTS increment_liked_songs\r\n                AFTER INSERT ON liked_songs\r\n                BEGIN\r\n                  UPDATE user_profile\r\n                  SET likedSongs = likedSongs + 1\r\n                  WHERE id = NEW.userId;\r\n                END;\r\n            \"\"\".trimIndent())\r\n\r\n            db.execSQL(\"\"\"\r\n                CREATE TRIGGER IF NOT EXISTS decrement_liked_songs\r\n                AFTER DELETE ON liked_songs\r\n                BEGIN\r\n                  UPDATE user_profile\r\n                  SET likedSongs = likedSongs - 1\r\n                  WHERE id = OLD.userId;\r\n                END;\r\n            \"\"\".trimIndent())\r\n\r\n            CoroutineScope(Dispatchers.IO).launch {\r\n                INSTANCE?.songDao()?.insertAll(predefinedSongs())\r\n                Log.d(\"AppDatabase\", \"Seeding done.\")\r\n            }\r\n        }\r\n\r\n        private fun predefinedSongs(): List<Song> = listOf(\r\n            Song(\r\n                id = \"1\",\r\n                serverId = null,\r\n                title = \"Katakan Saja\",\r\n                artist = \"Adikara\",\r\n                coverResId = R.drawable.katakan_saja,\r\n                coverPath = null,\r\n                filePath = null,\r\n                resId = R.raw.katakan_saja,\r\n                duration = 239000,\r\n                isLiked = false,\r\n                isLocal = true,\r\n                lastPlayedAt = 0L,\r\n                uploadedBy = -1\r\n            ),\r\n            Song(\r\n                id = \"2\",\r\n                serverId = null,\r\n                title = \"Primadona\",\r\n                artist = \"Adikara\",\r\n                coverResId = R.drawable.primadona,\r\n                coverPath = null,\r\n                filePath = null,\r\n                resId = R.raw.primadona,\r\n                duration = 247000,\r\n                isLiked = false,\r\n                isLocal = true,\r\n                lastPlayedAt = 0L,\r\n                uploadedBy = -1\r\n            ),\r\n            Song(\r\n                id = \"3\",\r\n                serverId = null,\r\n                title = \"Terlintas\",\r\n                artist = \"Bernadya\",\r\n                coverResId = R.drawable.terlintas,\r\n                coverPath = null,\r\n                filePath = null,\r\n                resId = terlintas,\r\n                duration = 235000,\r\n                isLiked = false,\r\n                isLocal = true,\r\n                lastPlayedAt = 0L,\r\n                uploadedBy = -1\r\n            )\r\n        )\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt b/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt
+--- a/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt	(revision 408fd39beac72af39a91d03b3e08d5971d6a51d7)
++++ b/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt	(date 1748140417419)
+@@ -16,7 +16,7 @@
+ import com.tubes.purry.data.model.ProfileData
+ import com.tubes.purry.data.model.ListeningSession
+ 
+-@Database(entities = [Song::class, LikedSong::class, ProfileData::class, ListeningSession::class], version = 7)
++@Database(entities = [Song::class, LikedSong::class, ProfileData::class, ListeningSession::class], version = 8)
+ abstract class AppDatabase : RoomDatabase() {
+     abstract fun songDao(): SongDao
+     abstract fun userProfileDao(): UserProfileDao
+Index: app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.tubes.purry.data.remote\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport com.tubes.purry.ui.auth.LoginActivity\r\nimport com.tubes.purry.utils.SessionManager\r\nimport okhttp3.Interceptor\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Response\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport java.util.concurrent.TimeUnit\r\n\r\nobject ApiClient {\r\n    private const val BASE_URL = \"http://34.101.226.132:3000/\"\r\n    private lateinit var sessionManager: SessionManager\r\n    private lateinit var appContext: Context\r\n\r\n    fun init(context: Context) {\r\n        appContext = context.applicationContext\r\n        sessionManager = SessionManager(appContext)\r\n    }\r\n\r\n    private val authInterceptor = Interceptor { chain ->\r\n        val originalRequest = chain.request()\r\n        val token = sessionManager.fetchAuthToken()\r\n\r\n        val requestBuilder = if (!token.isNullOrEmpty()) {\r\n            originalRequest.newBuilder()\r\n                .addHeader(\"Authorization\", \"Bearer $token\")\r\n        } else originalRequest.newBuilder()\r\n\r\n        val response: Response = chain.proceed(requestBuilder.build())\r\n\r\n        if (response.code == 401 || response.code == 403) {\r\n            sessionManager.clearTokens()\r\n            Log.w(\"ApiClient\", \"Token expired or unauthorized. Logging out...\")\r\n\r\n            // Auto-redirect ke LoginActivity\r\n            val intent = Intent(appContext, LoginActivity::class.java).apply {\r\n                flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n            }\r\n            appContext.startActivity(intent)\r\n        }\r\n\r\n        response\r\n    }\r\n\r\n    private val loggingInterceptor = HttpLoggingInterceptor().apply {\r\n        level = HttpLoggingInterceptor.Level.BODY\r\n    }\r\n\r\n    private val okHttpClient = OkHttpClient.Builder()\r\n        .addInterceptor(loggingInterceptor)\r\n        .addInterceptor(authInterceptor)\r\n        .connectTimeout(30, TimeUnit.SECONDS)\r\n        .readTimeout(30, TimeUnit.SECONDS)\r\n        .writeTimeout(30, TimeUnit.SECONDS)\r\n        .build()\r\n\r\n    private val retrofit = Retrofit.Builder()\r\n        .baseUrl(BASE_URL)\r\n        .client(okHttpClient)\r\n        .addConverterFactory(GsonConverterFactory.create())\r\n        .build()\r\n\r\n    val apiService: ApiService = retrofit.create(ApiService::class.java)\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt b/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt
+--- a/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt	(revision 408fd39beac72af39a91d03b3e08d5971d6a51d7)
++++ b/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt	(date 1748140007576)
+@@ -21,6 +21,7 @@
+     fun init(context: Context) {
+         appContext = context.applicationContext
+         sessionManager = SessionManager(appContext)
++        Log.d("ApiClient", "Initialized with context: $appContext")
+     }
+ 
+     private val authInterceptor = Interceptor { chain ->
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_month_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_recommendation_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_sound_capsule.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_time_listened_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_top_artists.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_top_songs.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_add_song_bottom_sheet.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_library.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_mini_player.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_song_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_top_chart_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_trending_songs.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_chart_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_recommendation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_sound_capsule_month.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_top_artist.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_top_song.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/navigation/mobile_navigation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"feat: init analytics\">\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=/Users/shazyataufik/.android/avd/Medium_Phone.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Purrityfy\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"resourceFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"feat/recommendation\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;HenryofSkalitz1202&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git\",\r\n    \"accountId\": \"fedc41d2-603f-474a-b151-5c7c38bc36b1\"\r\n  }\r\n}]]></component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$USER_HOME$/AppData/Local/Google/AndroidStudio2024.3/device-explorer/Medium Phone API 36/_/data/data/com.tubes.purry/shared_prefs/purrytify_encrypted_prefs.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vNqtWwPO7ZxkVWBE38kZUIankk\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Android App.app.executor\": \"Run\",\r\n    \"PROJECT_TRUSTED_KEY\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"cf.first.check.clang-format\": \"false\",\r\n    \"cidr.known.project.marker\": \"true\",\r\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\r\n    \"git-widget-placeholder\": \"feat/analytics\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt\",\r\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\r\n    \"settings.build.tools.auto.reload\": \"ALL\",\r\n    \"settings.editor.selected.configurable\": \"reference.settingsdialog.project.gradle\",\r\n    \"two.files.diff.last.used.file\": \"D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\\src\\main\\java\\com\\tubes\\purry\\ui\\chart\" />\r\n      <recent name=\"C:\\Users\\edarr\\Downloads\\if3210-tubes-mad-2025-if3210-2025-mad-dhs\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n    <key name=\"android.template.854076717\">\r\n      <recent name=\"com.tubes.purry\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tubes.purry.ui.chart\" />\r\n      <recent name=\"com.tubes.purry.ui.detail\" />\r\n      <recent name=\"com.tubes.purry.ui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"Purrityfy.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"\" />\r\n      <created>1743996095375</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743996095375</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744039123686</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744039123686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744137793402</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744137793402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744366362051</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744366362051</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fix: direct login while token invalid\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744370621765</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744346785132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744346798831</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744417118324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"migrate feat/integrate-player to feat/library\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744429832969</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744429832969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix: add to queue songs removed after play or next\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744459994598</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744459994598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"fix: shuffle condition while repeat all\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744460388707</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744460388707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"refactor: unused crud song fragments\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744461500132</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744461500132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"refactor: unused crud song fragments and fix: update layout\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463319315</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463319315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix: styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463977402</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463977402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"refactor: unneeded files and styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744468467246</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744468467246</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"feat: online song\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748006998549</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748006998549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"fix: online song player\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748045709635</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748045709635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"fix: online song player and feat: download songs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748059023787</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748059023787</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"fix: liked songs bug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748087652469</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748087652469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"feat: init analytics\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748093591903</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748093591903</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"feat: edit and delete songs\" />\r\n    <MESSAGE value=\"fix: direct login while token invalid\" />\r\n    <MESSAGE value=\"fix: role/control to edit and delete songs\" />\r\n    <MESSAGE value=\"migrate feat/search to feat/library-and-playerxml\" />\r\n    <MESSAGE value=\"fix: resolve media player pcmWrite bug because of duplicate declaration in activity_main.xml\" />\r\n    <MESSAGE value=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\" />\r\n    <MESSAGE value=\"fix: fixed bug on play pause button, fixed bug on duration seeding to ms instead of seconds\" />\r\n    <MESSAGE value=\"merge feat/profile\" />\r\n    <MESSAGE value=\"migrate feat/integrate-player to feat/library\" />\r\n    <MESSAGE value=\"feat: next, prev, add to queue\" />\r\n    <MESSAGE value=\"fix: add to queue songs removed after play or next\" />\r\n    <MESSAGE value=\"fix: shuffle condition while repeat all\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments and fix: update layout\" />\r\n    <MESSAGE value=\"fix: styling\" />\r\n    <MESSAGE value=\"refactor: unneeded files and styling\" />\r\n    <MESSAGE value=\"fix: update style\" />\r\n    <MESSAGE value=\"feat: online song\" />\r\n    <MESSAGE value=\"fix: online song player\" />\r\n    <MESSAGE value=\"fix: online song player and feat: download songs\" />\r\n    <MESSAGE value=\"feat: initialize firebase for sharing songs\" />\r\n    <MESSAGE value=\"fix: playing local songa\" />\r\n    <MESSAGE value=\"feat: minor design fix\" />\r\n    <MESSAGE value=\"fix: liked songs bug\" />\r\n    <MESSAGE value=\"feat: init analytics\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat: init analytics\" />\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.tubes.purry\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748084601419\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.tubes.purry.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748084601419\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 408fd39beac72af39a91d03b3e08d5971d6a51d7)
++++ b/.idea/workspace.xml	(date 1748140417675)
+@@ -146,12 +146,10 @@
+     <option name="autoReloadType" value="NONE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="feat: init analytics">
+-      <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml" afterDir="false" />
++    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="merge analytics">
++      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -161,7 +159,7 @@
+   <component name="ClangdSettings">
+     <option name="formatViaClangd" value="false" />
+   </component>
+-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=/Users/shazyataufik/.android/avd/Medium_Phone.avd)]" />
++  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\Users\HP\.android\avd\Medium_Phone_2.avd)]" />
+   <component name="ExternalProjectsData">
+     <projectState path="$PROJECT_DIR$">
+       <ProjectState />
+@@ -201,7 +199,7 @@
+   <component name="Git.Settings">
+     <option name="RECENT_BRANCH_BY_REPOSITORY">
+       <map>
+-        <entry key="$PROJECT_DIR$" value="feat/recommendation" />
++        <entry key="$PROJECT_DIR$" value="feat/online-rec" />
+       </map>
+     </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+@@ -212,12 +210,12 @@
+     &quot;assignee&quot;: &quot;HenryofSkalitz1202&quot;
+   }
+ }</component>
+-  <component name="GithubPullRequestsUISettings"><![CDATA[{
+-  "selectedUrlAndAccountId": {
+-    "url": "https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git",
+-    "accountId": "fedc41d2-603f-474a-b151-5c7c38bc36b1"
+-  }
+-}]]></component>
++  <component name="GithubPullRequestsUISettings">{
++  &quot;selectedUrlAndAccountId&quot;: {
++    &quot;url&quot;: &quot;https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git&quot;,
++    &quot;accountId&quot;: &quot;7fc37d1c-ed82-4f3d-8fd0-e1abf17a0517&quot;
++  }
++}</component>
+   <component name="HighlightingSettingsPerFile">
+     <setting file="file://$USER_HOME$/AppData/Local/Google/AndroidStudio2024.3/device-explorer/Medium Phone API 36/_/data/data/com.tubes.purry/shared_prefs/purrytify_encrypted_prefs.xml" root0="SKIP_INSPECTION" />
+   </component>
+@@ -232,28 +230,28 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "Android App.app.executor": "Run",
+-    "PROJECT_TRUSTED_KEY": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "RunOnceActivity.cidr.known.project.marker": "true",
+-    "RunOnceActivity.git.unshallow": "true",
+-    "RunOnceActivity.readMode.enableVisualFormatting": "true",
+-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+-    "cf.first.check.clang-format": "false",
+-    "cidr.known.project.marker": "true",
+-    "com.google.services.firebase.aqiPopupShown": "true",
+-    "git-widget-placeholder": "feat/analytics",
+-    "ignore.virus.scanning.warn.message": "true",
+-    "kotlin-language-version-configured": "true",
+-    "last_opened_file_path": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt",
+-    "run.code.analysis.last.selected.profile": "pProject Default",
+-    "settings.build.tools.auto.reload": "ALL",
+-    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
+-    "two.files.diff.last.used.file": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt"
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;Android App.app.executor&quot;: &quot;Run&quot;,
++    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
++    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
++    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
++    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
++    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;feat/analytics&quot;,
++    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
++    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
++    &quot;last_opened_file_path&quot;: &quot;D:/College/Semester 6/Mobile/Tugas Besar 1/app/src/main/res/drawable&quot;,
++    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
++    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,
++    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
++    &quot;two.files.diff.last.used.file&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;
+   }
+-}]]></component>
++}</component>
+   <component name="RecentsManager">
+     <key name="CopyFile.RECENT_KEYS">
+       <recent name="D:\College\Semester 6\Mobile\Tugas Besar 1\app" />
+@@ -289,6 +287,7 @@
+       <option name="MODE" value="default_activity" />
+       <option name="RESTORE_ENABLED" value="false" />
+       <option name="RESTORE_FILE" value="" />
++      <option name="RESTORE_FRESH_INSTALL_ONLY" value="false" />
+       <option name="CLEAR_LOGCAT" value="false" />
+       <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
+       <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
+@@ -473,15 +472,15 @@
+       <option name="project" value="LOCAL" />
+       <updated>1748059023787</updated>
+     </task>
+-    <task id="LOCAL-00016" summary="fix: liked songs bug">
++    <task id="LOCAL-00016" summary="fix: share via url">
+       <option name="closed" value="true" />
+-      <created>1748087652469</created>
++      <created>1748124750555</created>
+       <option name="number" value="00016" />
+       <option name="presentableId" value="LOCAL-00016" />
+       <option name="project" value="LOCAL" />
+-      <updated>1748087652469</updated>
++      <updated>1748124750555</updated>
+     </task>
+-    <task id="LOCAL-00017" summary="feat: init analytics">
++    <task id="LOCAL-00017" summary="merge analytics">
+       <option name="closed" value="true" />
+       <created>1748093591903</created>
+       <option name="number" value="00017" />
+@@ -529,6 +528,9 @@
+     <MESSAGE value="feat: minor design fix" />
+     <MESSAGE value="fix: liked songs bug" />
+     <MESSAGE value="feat: init analytics" />
++    <MESSAGE value="fix: share via url" />
++    <MESSAGE value="feat: share song thru QR code" />
++    <MESSAGE value="merge analytics" />
+     <option name="LAST_COMMIT_MESSAGE" value="feat: init analytics" />
+   </component>
+   <component name="play_dynamic_filters_status">
Index: app/src/main/res/layout/fragment_top_chart_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_top_chart_detail.xml b/app/src/main/res/layout/fragment_top_chart_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617189)
+++ b/app/src/main/res/layout/fragment_top_chart_detail.xml	(date 1748195617189)
@@ -0,0 +1,119 @@
+<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/black">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@android:color/black"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            app:navigationIconTint="@android:color/white"
+            app:title=""
+            android:background="@android:color/transparent"/>
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/scrollContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginBottom="64dp"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:gravity="center_horizontal">
+
+            <ImageView
+                android:id="@+id/ivChartCover"
+                android:layout_width="200dp"
+                android:layout_height="200dp"
+                android:layout_marginBottom="12dp"
+                android:scaleType="centerCrop"
+                android:src="@drawable/cov_playlist_global"
+                android:contentDescription="@string/chart_cover" />
+
+            <TextView
+                android:id="@+id/tvChartTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Top 50"
+                android:textColor="@android:color/white"
+                android:textSize="24sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/tvChartDescription"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Global • Apr 2025 • 2h 55min"
+                android:textColor="#CCCCCC"
+                android:textSize="14sp"
+                android:layout_marginBottom="16dp" />
+
+            <LinearLayout
+                android:id="@+id/chartActionBar"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:gravity="center"
+                android:layout_marginBottom="24dp">
+
+                <ImageButton
+                    android:id="@+id/btnShuffle"
+                    android:layout_width="41dp"
+                    android:layout_height="39dp"
+                    android:layout_marginEnd="16dp"
+                    android:background="@drawable/bg_circle_gray"
+                    android:contentDescription="@string/shuffle"
+                    android:src="@drawable/ic_shuffle"
+                    app:tint="@android:color/white" />
+
+                <ImageButton
+                    android:id="@+id/btnPlay"
+                    android:layout_width="56dp"
+                    android:layout_height="56dp"
+                    android:layout_marginEnd="16dp"
+                    android:background="@drawable/bg_circle_green"
+                    android:contentDescription="@string/play"
+                    android:src="@drawable/ic_play"
+                    app:tint="@android:color/white" />
+
+                <ImageButton
+                    android:id="@+id/btnDownloadAll"
+                    android:layout_width="48dp"
+                    android:layout_height="48dp"
+                    android:background="@drawable/bg_circle_gray"
+                    android:contentDescription="@string/download_all"
+                    android:src="@drawable/ic_download"
+                    app:tint="@android:color/white"/>
+            </LinearLayout>
+
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvChartSongs"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:nestedScrollingEnabled="false"
+                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
+        </LinearLayout>
+    </androidx.core.widget.NestedScrollView>
+
+    <FrameLayout
+        android:id="@+id/miniPlayerContainer"
+        android:layout_width="match_parent"
+        android:layout_height="64dp"
+        android:layout_gravity="bottom"
+        android:background="#222"
+        android:visibility="gone" />
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1748195617070)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]/shelved.patch	(date 1748195617070)
@@ -0,0 +1,122 @@
+Index: app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.tubes.purry.data.remote\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.util.Log\r\nimport com.tubes.purry.ui.auth.LoginActivity\r\nimport com.tubes.purry.utils.SessionManager\r\nimport okhttp3.Interceptor\r\nimport okhttp3.OkHttpClient\r\nimport okhttp3.Response\r\nimport okhttp3.logging.HttpLoggingInterceptor\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.gson.GsonConverterFactory\r\nimport java.util.concurrent.TimeUnit\r\n\r\nobject ApiClient {\r\n    private const val BASE_URL = \"http://34.101.226.132:3000/\"\r\n    private lateinit var sessionManager: SessionManager\r\n    private lateinit var appContext: Context\r\n\r\n    fun init(context: Context) {\r\n        appContext = context.applicationContext\r\n        sessionManager = SessionManager(appContext)\r\n    }\r\n\r\n    private val authInterceptor = Interceptor { chain ->\r\n        val originalRequest = chain.request()\r\n        val token = sessionManager.fetchAuthToken()\r\n\r\n        val requestBuilder = if (!token.isNullOrEmpty()) {\r\n            originalRequest.newBuilder()\r\n                .addHeader(\"Authorization\", \"Bearer $token\")\r\n        } else originalRequest.newBuilder()\r\n\r\n        val response: Response = chain.proceed(requestBuilder.build())\r\n\r\n        if (response.code == 401 || response.code == 403) {\r\n            sessionManager.clearTokens()\r\n            Log.w(\"ApiClient\", \"Token expired or unauthorized. Logging out...\")\r\n\r\n            // Auto-redirect ke LoginActivity\r\n            val intent = Intent(appContext, LoginActivity::class.java).apply {\r\n                flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n            }\r\n            appContext.startActivity(intent)\r\n        }\r\n\r\n        response\r\n    }\r\n\r\n    private val loggingInterceptor = HttpLoggingInterceptor().apply {\r\n        level = HttpLoggingInterceptor.Level.BODY\r\n    }\r\n\r\n    private val okHttpClient = OkHttpClient.Builder()\r\n        .addInterceptor(loggingInterceptor)\r\n        .addInterceptor(authInterceptor)\r\n        .connectTimeout(30, TimeUnit.SECONDS)\r\n        .readTimeout(30, TimeUnit.SECONDS)\r\n        .writeTimeout(30, TimeUnit.SECONDS)\r\n        .build()\r\n\r\n    private val retrofit = Retrofit.Builder()\r\n        .baseUrl(BASE_URL)\r\n        .client(okHttpClient)\r\n        .addConverterFactory(GsonConverterFactory.create())\r\n        .build()\r\n\r\n    val apiService: ApiService = retrofit.create(ApiService::class.java)\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt b/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt
+--- a/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt	(revision 6c1a9f329ec59d1d0fd1786ed7e559d6a1bf92cc)
++++ b/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt	(date 1748139168261)
+@@ -21,6 +21,7 @@
+     fun init(context: Context) {
+         appContext = context.applicationContext
+         sessionManager = SessionManager(appContext)
++        Log.d("ApiClient", "Initialized with context: $appContext")
+     }
+ 
+     private val authInterceptor = Interceptor { chain ->
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_month_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_recommendation_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_sound_capsule.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_time_listened_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_top_artists.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_top_songs.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_add_song_bottom_sheet.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_library.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_mini_player.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_song_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_top_chart_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_trending_songs.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_chart_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_recommendation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_sound_capsule_month.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_top_artist.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_top_song.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/navigation/mobile_navigation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"fix: share via url\"/>\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/utils/FileUtil.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/detail/SongDetailFragment.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/detail/SongDetailFragment.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/PlayerController.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/PlayerController.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/values/strings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/values/strings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/xml/file_paths.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/xml/file_paths.xml\" afterDir=\"false\" />\r\n    <list default=\"true\" id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"feat: init analytics\">\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=/Users/shazyataufik/.android/avd/Medium_Phone.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Purrityfy\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"resourceFile\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"feat/recommendation\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;HenryofSkalitz1202&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git&quot;,\r\n    &quot;accountId&quot;: &quot;7fc37d1c-ed82-4f3d-8fd0-e1abf17a0517&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$USER_HOME$/AppData/Local/Google/AndroidStudio2024.3/device-explorer/Medium Phone API 36/_/data/data/com.tubes.purry/shared_prefs/purrytify_encrypted_prefs.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vNqtWwPO7ZxkVWBE38kZUIankk\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Android App.app.executor&quot;: &quot;Run&quot;,\r\n    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;feat/online-rec&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/College/Semester 6/Mobile/Tugas Besar 1/app/src/main/res/drawable&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,\r\n    &quot;two.files.diff.last.used.file&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"D:\\College\\Semester 6\\Mobile\\Tugas Besar 1\\app\\src\\main\\java\\com\\tubes\\purry\\ui\\chart\" />\r\n      <recent name=\"C:\\Users\\edarr\\Downloads\\if3210-tubes-mad-2025-if3210-2025-mad-dhs\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n    <key name=\"android.template.854076717\">\r\n      <recent name=\"com.tubes.purry\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tubes.purry.ui.chart\" />\r\n      <recent name=\"com.tubes.purry.ui.detail\" />\r\n      <recent name=\"com.tubes.purry.ui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"Purrityfy.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"\" />\r\n      <created>1743996095375</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743996095375</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744039123686</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744039123686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744137793402</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744137793402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744366362051</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744366362051</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fix: direct login while token invalid\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744370621765</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744346785132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744346798831</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744417118324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"migrate feat/integrate-player to feat/library\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744429832969</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744429832969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix: add to queue songs removed after play or next\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744459994598</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744459994598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"fix: shuffle condition while repeat all\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744460388707</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744460388707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"refactor: unused crud song fragments\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744461500132</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744461500132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"refactor: unused crud song fragments and fix: update layout\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463319315</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463319315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix: styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463977402</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463977402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"refactor: unneeded files and styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744468467246</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744468467246</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"feat: online song\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748006998549</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748006998549</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"fix: online song player\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748045709635</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748045709635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"fix: online song player and feat: download songs\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748059023787</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748059023787</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"fix: liked songs bug\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748087652469</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748087652469</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"feat: init analytics\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748093591903</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748093591903</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <task id=\"LOCAL-00016\" summary=\"fix: share via url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1748124750555</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1748124750555</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"17\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"fix: resolve image loading bug by removing dependency on third party link for image url\" />\r\n    <MESSAGE value=\"feat: profile stats\" />\r\n    <MESSAGE value=\"feat: edit and delete songs\" />\r\n    <MESSAGE value=\"fix: direct login while token invalid\" />\r\n    <MESSAGE value=\"fix: role/control to edit and delete songs\" />\r\n    <MESSAGE value=\"migrate feat/search to feat/library-and-playerxml\" />\r\n    <MESSAGE value=\"fix: resolve media player pcmWrite bug because of duplicate declaration in activity_main.xml\" />\r\n    <MESSAGE value=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\" />\r\n    <MESSAGE value=\"fix: fixed bug on play pause button, fixed bug on duration seeding to ms instead of seconds\" />\r\n    <MESSAGE value=\"merge feat/profile\" />\r\n    <MESSAGE value=\"migrate feat/integrate-player to feat/library\" />\r\n    <MESSAGE value=\"feat: next, prev, add to queue\" />\r\n    <MESSAGE value=\"fix: add to queue songs removed after play or next\" />\r\n    <MESSAGE value=\"fix: shuffle condition while repeat all\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments and fix: update layout\" />\r\n    <MESSAGE value=\"fix: styling\" />\r\n    <MESSAGE value=\"refactor: unneeded files and styling\" />\r\n    <MESSAGE value=\"fix: update style\" />\r\n    <MESSAGE value=\"feat: online song\" />\r\n    <MESSAGE value=\"fix: online song player\" />\r\n    <MESSAGE value=\"fix: online song player and feat: download songs\" />\r\n    <MESSAGE value=\"feat: initialize firebase for sharing songs\" />\r\n    <MESSAGE value=\"fix: playing local songa\" />\r\n    <MESSAGE value=\"feat: minor design fix\" />\r\n    <MESSAGE value=\"fix: liked songs bug\" />\r\n    <MESSAGE value=\"feat: init analytics\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"feat: init analytics\" />\r\n    <MESSAGE value=\"fix: share via url\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix: share via url\" />\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.tubes.purry\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748084601419\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.tubes.purry.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748084601419\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 6c1a9f329ec59d1d0fd1786ed7e559d6a1bf92cc)
++++ b/.idea/workspace.xml	(date 1748139678648)
+@@ -146,24 +146,10 @@
+     <option name="autoReloadType" value="NONE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="fix: share via url"/>
+-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/utils/FileUtil.kt" afterDir="false" />
++    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="fix: share via url">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/detail/SongDetailFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/detail/SongDetailFragment.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/PlayerController.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/PlayerController.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/menu/song_options_menu.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/xml/file_paths.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/xml/file_paths.xml" afterDir="false" />
+-    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="feat: init analytics">
+-      <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/EditProfileActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/profile/MapsActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/layout/activity_maps.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/remote/ApiClient.kt" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/auth/LoginActivity.kt" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -173,7 +159,7 @@
+   <component name="ClangdSettings">
+     <option name="formatViaClangd" value="false" />
+   </component>
+-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=/Users/shazyataufik/.android/avd/Medium_Phone.avd)]" />
++  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\Users\HP\.android\avd\Medium_Phone_2.avd)]" />
+   <component name="ExternalProjectsData">
+     <projectState path="$PROJECT_DIR$">
+       <ProjectState />
+@@ -306,6 +292,7 @@
+       <option name="MODE" value="default_activity" />
+       <option name="RESTORE_ENABLED" value="false" />
+       <option name="RESTORE_FILE" value="" />
++      <option name="RESTORE_FRESH_INSTALL_ONLY" value="false" />
+       <option name="CLEAR_LOGCAT" value="false" />
+       <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />
+       <option name="TARGET_SELECTION_MODE" value="DEVICE_AND_SNAPSHOT_COMBO_BOX" />
+@@ -490,15 +477,15 @@
+       <option name="project" value="LOCAL" />
+       <updated>1748059023787</updated>
+     </task>
+-    <task id="LOCAL-00016" summary="fix: liked songs bug">
++    <task id="LOCAL-00016" summary="fix: share via url">
+       <option name="closed" value="true" />
+-      <created>1748087652469</created>
++      <created>1748124750555</created>
+       <option name="number" value="00016" />
+       <option name="presentableId" value="LOCAL-00016" />
+       <option name="project" value="LOCAL" />
+-      <updated>1748087652469</updated>
++      <updated>1748124750555</updated>
+     </task>
+-    <task id="LOCAL-00017" summary="feat: init analytics">
++    <task id="LOCAL-00017" summary="merge analytics">
+       <option name="closed" value="true" />
+       <created>1748093591903</created>
+       <option name="number" value="00017" />
+@@ -506,15 +493,6 @@
+       <option name="project" value="LOCAL" />
+       <updated>1748093591903</updated>
+     </task>
+-    <option name="localTasksCounter" value="18" />
+-    <task id="LOCAL-00016" summary="fix: share via url">
+-      <option name="closed" value="true" />
+-      <created>1748124750555</created>
+-      <option name="number" value="00016" />
+-      <option name="presentableId" value="LOCAL-00016" />
+-      <option name="project" value="LOCAL" />
+-      <updated>1748124750555</updated>
+-    </task>
+     <option name="localTasksCounter" value="17" />
+     <servers />
+   </component>
+@@ -557,9 +535,10 @@
+     <MESSAGE value="feat: minor design fix" />
+     <MESSAGE value="fix: liked songs bug" />
+     <MESSAGE value="feat: init analytics" />
+-    <option name="LAST_COMMIT_MESSAGE" value="feat: init analytics" />
+     <MESSAGE value="fix: share via url" />
+-    <option name="LAST_COMMIT_MESSAGE" value="fix: share via url" />
++    <MESSAGE value="feat: share song thru QR code" />
++    <MESSAGE value="merge analytics" />
++    <option name="LAST_COMMIT_MESSAGE" value="merge analytics" />
+   </component>
+   <component name="play_dynamic_filters_status">
+     <option name="appIdToCheckInfo">
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1748195617067)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]/shelved.patch	(date 1748195617067)
@@ -0,0 +1,95 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config />\r\n    </shared>\r\n    <layouts>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_login.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/audio_device_item.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/bluetooth_audio.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_add_song_bottom_sheet.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_home.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_library.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_mini_player.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_profile.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/fragment_song_detail.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_card.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/layout/item_song_list.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/bottom_nav_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/menu/main_menu.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n      <layout url=\"file://$PROJECT_DIR$/app/src/main/res/navigation/mobile_navigation.xml\">\r\n        <config>\r\n          <theme>@style/Theme.Purrytify</theme>\r\n        </config>\r\n      </layout>\r\n    </layouts>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"fix: update style\">\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/model/AudioDevice.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/outputdevice/AudioDeviceAdapter.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/outputdevice/SelectAudioDeviceDialog.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/utils/AudioOutputManager.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/audio_device_item.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/res/layout/bluetooth_audio.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/res/menu/main_menu.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/caches/deviceStreaming.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/caches/deviceStreaming.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/build.gradle.kts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/build.gradle.kts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/AndroidManifest.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/res/values/strings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/res/values/strings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/gradle/libs.versions.toml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ClangdSettings\">\r\n    <option name=\"formatViaClangd\" value=\"false\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\\Users\\edarr\\.android\\avd\\Medium_Phone.avd)]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"Purrityfy\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"Kotlin Data Class\" />\r\n        <option value=\"Kotlin Object\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"resourceFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;HenryofSkalitz1202&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Labpro-21/if3210-tubes-mad-2025-if3210-2025-mad-dhs.git&quot;,\r\n    &quot;accountId&quot;: &quot;35028ea5-183c-4932-8322-58d3ec6ca1a1&quot;\r\n  }\r\n}</component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$USER_HOME$/AppData/Local/Google/AndroidStudio2024.3/device-explorer/Medium Phone API 36/_/data/data/com.tubes.purry/shared_prefs/purrytify_encrypted_prefs.xml\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vNqtWwPO7ZxkVWBE38kZUIankk\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Android App.app.executor&quot;: &quot;Run&quot;,\r\n    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,\r\n    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,\r\n    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\r\n    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,\r\n    &quot;two.files.diff.last.used.file&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\edarr\\Downloads\\if3210-tubes-mad-2025-if3210-2025-mad-dhs\\app\\src\\main\\res\\drawable\" />\r\n    </key>\r\n    <key name=\"android.template.854076717\">\r\n      <recent name=\"com.tubes.purry\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tubes.purry.ui.detail\" />\r\n      <recent name=\"com.tubes.purry.ui\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"Purrityfy.app\" />\r\n      <option name=\"ANDROID_RUN_CONFIGURATION_SCHEMA_VERSION\" value=\"1\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"ALLOW_ASSUME_VERIFIED\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"RESTORE_ENABLED\" value=\"false\" />\r\n      <option name=\"RESTORE_FILE\" value=\"\" />\r\n      <option name=\"RESTORE_FRESH_INSTALL_ONLY\" value=\"false\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Hybrid>\r\n      <Java>\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Java>\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n        <option name=\"ATTACH_ON_WAIT_FOR_DEBUGGER\" value=\"false\" />\r\n        <option name=\"DEBUG_SANDBOX_SDK\" value=\"false\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fb2d9b52-b320-4578-a27c-b77d399ccfa2\" name=\"Changes\" comment=\"\" />\r\n      <created>1743996095375</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1743996095375</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744039123686</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744039123686</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744137793402</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744137793402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix: resolve image loading bug by removing dependency on third party link for image url\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744366362051</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744366362051</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"fix: direct login while token invalid\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744370621765</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744346785132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744346798831</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744417118324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"migrate feat/integrate-player to feat/library\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744429832969</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744429832969</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix: add to queue songs removed after play or next\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744459994598</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744459994598</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"fix: shuffle condition while repeat all\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744460388707</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744460388707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"refactor: unused crud song fragments\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744461500132</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744461500132</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"refactor: unused crud song fragments and fix: update layout\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463319315</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463319315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix: styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744463977402</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744463977402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"refactor: unneeded files and styling\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1744468467246</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1744468467246</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"fix: resolve media player bug, integrate mini player with homepage, and display cover image&#10;&#10;- Fixed media player playback issues and improved handling of play/pause logic&#10;- Integrated MiniPlayerFragment to show when a song is clicked from the home page&#10;- Added image cover loading for mini player using Glide with fallback and error handling\" />\r\n    <MESSAGE value=\"fix: resolve image loading bug by removing dependency on third party link for image url\" />\r\n    <MESSAGE value=\"feat: profile stats\" />\r\n    <MESSAGE value=\"feat: edit and delete songs\" />\r\n    <MESSAGE value=\"fix: direct login while token invalid\" />\r\n    <MESSAGE value=\"fix: role/control to edit and delete songs\" />\r\n    <MESSAGE value=\"migrate feat/search to feat/library-and-playerxml\" />\r\n    <MESSAGE value=\"fix: resolve media player pcmWrite bug because of duplicate declaration in activity_main.xml\" />\r\n    <MESSAGE value=\"feat: added Song Detail and integrated to mini player&#10;chore: add verbose printing for future debugging&#10;fix: spacing for mini player from navbar\" />\r\n    <MESSAGE value=\"fix: fixed bug on play pause button, fixed bug on duration seeding to ms instead of seconds\" />\r\n    <MESSAGE value=\"merge feat/profile\" />\r\n    <MESSAGE value=\"migrate feat/integrate-player to feat/library\" />\r\n    <MESSAGE value=\"feat: next, prev, add to queue\" />\r\n    <MESSAGE value=\"fix: add to queue songs removed after play or next\" />\r\n    <MESSAGE value=\"fix: shuffle condition while repeat all\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments\" />\r\n    <MESSAGE value=\"refactor: unused crud song fragments and fix: update layout\" />\r\n    <MESSAGE value=\"fix: styling\" />\r\n    <MESSAGE value=\"refactor: unneeded files and styling\" />\r\n    <MESSAGE value=\"fix: update style\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix: update style\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"kotlin-function\">\r\n          <url>file://$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/player/NowPlayingViewModel.kt</url>\r\n          <line>8</line>\r\n          <properties class=\"com.tubes.purry.ui.player.NowPlayingViewModel\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"play_dynamic_filters_status\">\r\n    <option name=\"appIdToCheckInfo\">\r\n      <map>\r\n        <entry key=\"com.tubes.purry\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748093707526\" />\r\n          </value>\r\n        </entry>\r\n        <entry key=\"com.tubes.purry.test\">\r\n          <value>\r\n            <CheckInfo lastCheckTimestamp=\"1748093707527\" />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	(revision 891f01641b7e18f991d94ac4f63283721875d014)
++++ b/.idea/workspace.xml	(date 1748134803439)
+@@ -86,24 +86,7 @@
+     <option name="autoReloadType" value="NONE" />
+   </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="fix: update style">
+-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/model/AudioDevice.kt" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/outputdevice/AudioDeviceAdapter.kt" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/ui/outputdevice/SelectAudioDeviceDialog.kt" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/utils/AudioOutputManager.kt" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/res/layout/audio_device_item.xml" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/res/layout/bluetooth_audio.xml" afterDir="false" />
+-      <change afterPath="$PROJECT_DIR$/app/src/main/res/menu/main_menu.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/app/build.gradle.kts" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/MainActivity.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tubes/purry/data/local/AppDatabase.kt" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/values/strings.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/gradle/libs.versions.toml" beforeDir="false" afterPath="$PROJECT_DIR$/gradle/libs.versions.toml" afterDir="false" />
+-    </list>
++    <list default="true" id="fb2d9b52-b320-4578-a27c-b77d399ccfa2" name="Changes" comment="fix: update style" />
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -112,7 +95,7 @@
+   <component name="ClangdSettings">
+     <option name="formatViaClangd" value="false" />
+   </component>
+-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\Users\edarr\.android\avd\Medium_Phone.avd)]" />
++  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[DeviceId(pluginId=LocalEmulator, isTemplate=false, identifier=path=C:\Users\HP\.android\avd\Medium_Phone_2.avd)]" />
+   <component name="ExternalProjectsData">
+     <projectState path="$PROJECT_DIR$">
+       <ProjectState />
+@@ -180,28 +163,28 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;Android App.app.executor&quot;: &quot;Run&quot;,
+-    &quot;PROJECT_TRUSTED_KEY&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
+-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+-    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
+-    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
+-    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
+-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;,
+-    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
+-    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,
+-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
+-    &quot;two.files.diff.last.used.file&quot;: &quot;D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "Android App.app.executor": "Run",
++    "PROJECT_TRUSTED_KEY": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "RunOnceActivity.cidr.known.project.marker": "true",
++    "RunOnceActivity.git.unshallow": "true",
++    "RunOnceActivity.readMode.enableVisualFormatting": "true",
++    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
++    "cf.first.check.clang-format": "false",
++    "cidr.known.project.marker": "true",
++    "com.google.services.firebase.aqiPopupShown": "true",
++    "git-widget-placeholder": "feat/audio-routing",
++    "ignore.virus.scanning.warn.message": "true",
++    "kotlin-language-version-configured": "true",
++    "last_opened_file_path": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt",
++    "run.code.analysis.last.selected.profile": "pProject Default",
++    "settings.build.tools.auto.reload": "ALL",
++    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
++    "two.files.diff.last.used.file": "D:/College/Semester 6/Mobile/Tubes1/if3210-tubes-mad-2025-if3210-2025-mad-dhs/app/src/main/java/com/tubes/purry/data/model/Song.kt"
+   }
+-}</component>
++}]]></component>
+   <component name="RecentsManager">
+     <key name="MoveFile.RECENT_KEYS">
+       <recent name="C:\Users\edarr\Downloads\if3210-tubes-mad-2025-if3210-2025-mad-dhs\app\src\main\res\drawable" />
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30__Changes_.xml
new file mode 100644
--- /dev/null	(date 1748195617066)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30__Changes_.xml	(date 1748195617066)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]" date="1747715569228" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20_05_25_11_30_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 20/05/25 11:30 [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/model/RecommendationItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/model/RecommendationItem.kt b/app/src/main/java/com/tubes/purry/data/model/RecommendationItem.kt
new file mode 100644
--- /dev/null	(date 1748195617093)
+++ b/app/src/main/java/com/tubes/purry/data/model/RecommendationItem.kt	(date 1748195617093)
@@ -0,0 +1,16 @@
+package com.tubes.purry.data.model
+
+data class RecommendationItem(
+    val id: String,
+    val title: String,
+    val description: String,
+    val imageRes: Int,
+    val type: RecommendationType
+)
+
+enum class RecommendationType {
+    DAILY_MIX,
+    RECENTLY_PLAYED_MIX,
+    LIKED_SONGS_MIX,
+    DISCOVERY_MIX
+}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26__Changes_.xml
new file mode 100644
--- /dev/null	(date 1748195617071)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26__Changes_.xml	(date 1748195617071)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]" date="1748140130871" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_26_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 25/05/25 09:26 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37__Changes_.xml
new file mode 100644
--- /dev/null	(date 1748195617073)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37__Changes_.xml	(date 1748195617073)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]" date="1748140650688" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_09_37_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 25/05/25 09:37 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04__Changes_.xml
new file mode 100644
--- /dev/null	(date 1748195617069)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04__Changes_.xml	(date 1748195617069)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]" date="1748135074856" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 25/05/25 08:04 [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/item_chart_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_chart_card.xml b/app/src/main/res/layout/item_chart_card.xml
new file mode 100644
--- /dev/null	(date 1748195617191)
+++ b/app/src/main/res/layout/item_chart_card.xml	(date 1748195617191)
@@ -0,0 +1,36 @@
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
+    android:layout_width="140dp"
+    android:layout_height="180dp"
+    android:layout_margin="8dp"
+    card_view:cardCornerRadius="16dp"
+    card_view:cardElevation="6dp"
+    card_view:cardBackgroundColor="@android:color/black">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:padding="12dp">
+
+        <ImageView
+            android:id="@+id/imgChartCover"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="1"
+            android:scaleType="centerCrop"
+            android:contentDescription="@string/chart_cover"
+            android:src="@drawable/cov_playlist_global" />
+
+        <TextView
+            android:id="@+id/tvChartTitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:text="Top 50"
+            android:textColor="@android:color/white"
+            android:textSize="14sp"
+            android:textStyle="bold" />
+    </LinearLayout>
+</androidx.cardview.widget.CardView>
Index: app/src/main/res/layout/fragment_trending_songs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_trending_songs.xml b/app/src/main/res/layout/fragment_trending_songs.xml
new file mode 100644
--- /dev/null	(date 1748195617190)
+++ b/app/src/main/res/layout/fragment_trending_songs.xml	(date 1748195617190)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:text="Top 10 in Your Country"
+                android:textSize="18sp"
+                android:textStyle="bold" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/countryRecyclerView"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+
+            <TextView
+                android:text="Top 50 Global"
+                android:layout_marginTop="24dp"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                android:layout_height="4dp"
+                android:layout_width="4dp"/>
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/globalRecyclerView"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+        </LinearLayout>
+    </ScrollView>
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_sound_capsule_month.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_sound_capsule_month.xml b/app/src/main/res/layout/item_sound_capsule_month.xml
new file mode 100644
--- /dev/null	(date 1748195617194)
+++ b/app/src/main/res/layout/item_sound_capsule_month.xml	(date 1748195617194)
@@ -0,0 +1,131 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    app:cardBackgroundColor="@color/card_background"
+    app:cardCornerRadius="12dp"
+    app:cardElevation="4dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal">
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:orientation="vertical">
+
+                <TextView
+                    android:id="@+id/tvMonthTitle"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="April 2025"
+                    android:textColor="@color/white"
+                    android:textSize="20sp"
+                    android:textStyle="bold" />
+
+                <TextView
+                    android:id="@+id/tvTotalMinutes"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="4dp"
+                    android:text="862 minutes"
+                    android:textColor="@color/primary_green"
+                    android:textSize="16sp" />
+
+            </LinearLayout>
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/btnExport"
+                style="@style/Widget.Material3.Button.OutlinedButton"
+                android:layout_width="wrap_content"
+                android:layout_height="36dp"
+                android:text="Export"
+                android:textColor="@color/primary_green"
+                android:textSize="12sp"
+                app:strokeColor="@color/primary_green" />
+
+        </LinearLayout>
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_marginVertical="12dp"
+            android:background="@color/divider" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal">
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Top Artist"
+                    android:textColor="@color/text_secondary"
+                    android:textSize="12sp" />
+
+                <TextView
+                    android:id="@+id/tvTopArtist"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="The Beatles"
+                    android:textColor="@color/white"
+                    android:textSize="14sp" />
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:orientation="vertical">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Top Song"
+                    android:textColor="@color/text_secondary"
+                    android:textSize="12sp" />
+
+                <TextView
+                    android:id="@+id/tvTopSong"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="Starboy"
+                    android:textColor="@color/white"
+                    android:textSize="14sp" />
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/tvStreaks"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:text="2 day streaks"
+            android:textColor="@color/text_secondary"
+            android:textSize="12sp" />
+
+    </LinearLayout>
+
+</com.google.android.material.card.MaterialCardView>
\ No newline at end of file
Index: app/src/main/res/layout/item_recommendation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_recommendation.xml b/app/src/main/res/layout/item_recommendation.xml
new file mode 100644
--- /dev/null	(date 1748195617192)
+++ b/app/src/main/res/layout/item_recommendation.xml	(date 1748195617192)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="120dp"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:layout_marginEnd="12dp"
+    android:background="?attr/selectableItemBackground"
+    android:clickable="true"
+    android:focusable="true">
+
+    <ImageView
+        android:id="@+id/ivRecommendationImage"
+        android:layout_width="120dp"
+        android:layout_height="120dp"
+        android:scaleType="centerCrop"
+        android:background="@drawable/rounded_corner_background"
+        android:contentDescription="@string/recommendation_cover" />
+
+    <TextView
+        android:id="@+id/tvRecommendationTitle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text="Daily Mix 1"
+        android:textColor="@android:color/white"
+        android:textSize="14sp"
+        android:textStyle="bold"
+        android:maxLines="1"
+        android:ellipsize="end" />
+
+    <TextView
+        android:id="@+id/tvRecommendationDescription"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="2dp"
+        android:text="Based on your likes"
+        android:textColor="#CCCCCC"
+        android:textSize="12sp"
+        android:maxLines="2"
+        android:ellipsize="end" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_maps.xml b/app/src/main/res/layout/activity_maps.xml
new file mode 100644
--- /dev/null	(date 1748195617180)
+++ b/app/src/main/res/layout/activity_maps.xml	(date 1748195617180)
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:background="@android:color/white"
+    tools:context=".ui.profile.MapsActivity">
+
+    <!-- Header -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Select Location"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        android:textColor="@android:color/black"
+        android:padding="16dp"
+        android:gravity="center" />
+
+    <!-- Map Fragment - Simplified -->
+    <fragment
+        android:id="@+id/mapFragment"
+        android:name="com.google.android.gms.maps.SupportMapFragment"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        android:layout_margin="8dp" />
+
+    <!-- Info Card -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp"
+        android:background="@android:color/white">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Selected Location:"
+            android:textColor="@android:color/black"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/txtSelectedCoordinates"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Tap on map to select location"
+            android:textColor="@android:color/black"
+            android:layout_marginTop="4dp" />
+
+        <TextView
+            android:id="@+id/txtSelectedAddress"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text=""
+            android:textColor="@android:color/black"
+            android:layout_marginTop="8dp" />
+
+        <TextView
+            android:id="@+id/txtSelectedCountry"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text=""
+            android:textColor="@android:color/black"
+            android:layout_marginTop="4dp" />
+
+    </LinearLayout>
+
+    <!-- Buttons -->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:padding="16dp">
+
+        <Button
+            android:id="@+id/btnCancel"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:layout_marginEnd="8dp"
+            android:text="Cancel" />
+
+        <Button
+            android:id="@+id/btnSelectLocation"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:layout_marginStart="8dp"
+            android:text="Select Location" />
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_top_artists.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_top_artists.xml b/app/src/main/res/layout/activity_top_artists.xml
new file mode 100644
--- /dev/null	(date 1748195617183)
+++ b/app/src/main/res/layout/activity_top_artists.xml	(date 1748195617183)
@@ -0,0 +1,90 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="16dp">
+
+                <TextView
+                    android:id="@+id/tvMonth"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="8dp"
+                    android:text="April 2025"
+                    android:textColor="@color/text_secondary"
+                    android:textSize="14sp" />
+
+                <TextView
+                    android:id="@+id/tvSummary"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="16dp"
+                    android:text="You listened to 137 artists this month."
+                    android:textColor="@color/white"
+                    android:textSize="18sp"
+                    android:textStyle="bold" />
+
+            </LinearLayout>
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvTopArtists"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_top_artist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_top_artist.xml b/app/src/main/res/layout/item_top_artist.xml
new file mode 100644
--- /dev/null	(date 1748195617194)
+++ b/app/src/main/res/layout/item_top_artist.xml	(date 1748195617194)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    android:padding="16dp"
+    android:background="?android:attr/selectableItemBackground">
+
+    <TextView
+        android:id="@+id/tvRank"
+        android:layout_width="32dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:gravity="center"
+        android:text="01"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:textStyle="bold" />
+
+    <ImageView
+        android:id="@+id/ivCover"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:scaleType="centerCrop"
+        android:src="@drawable/ic_music_note" />
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:layout_weight="1"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/tvArtistName"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Beatles"
+            android:textColor="@color/white"
+            android:textSize="16sp"
+            android:textStyle="bold" />
+
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/tvPlayCount"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:text="25 plays"
+        android:textColor="@color/text_secondary"
+        android:textSize="12sp" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/item_top_song.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_top_song.xml b/app/src/main/res/layout/item_top_song.xml
new file mode 100644
--- /dev/null	(date 1748195617195)
+++ b/app/src/main/res/layout/item_top_song.xml	(date 1748195617195)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    android:padding="16dp"
+    android:background="?android:attr/selectableItemBackground">
+
+    <TextView
+        android:id="@+id/tvRank"
+        android:layout_width="32dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:gravity="center"
+        android:text="01"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:textStyle="bold" />
+
+    <ImageView
+        android:id="@+id/ivCover"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:scaleType="centerCrop"
+        android:src="@drawable/ic_music_note" />
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:layout_weight="1"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/tvSongTitle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Starboy"
+            android:textColor="@color/white"
+            android:textSize="16sp"
+            android:textStyle="bold" />
+
+        <TextView
+            android:id="@+id/tvArtist"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="The Weeknd, Daft Punk"
+            android:textColor="@color/text_secondary"
+            android:textSize="14sp" />
+
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/tvPlayCount"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_marginStart="16dp"
+        android:text="15 plays"
+        android:textColor="@color/text_secondary"
+        android:textSize="12sp" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_sound_capsule.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sound_capsule.xml b/app/src/main/res/layout/activity_sound_capsule.xml
new file mode 100644
--- /dev/null	(date 1748195617182)
+++ b/app/src/main/res/layout/activity_sound_capsule.xml	(date 1748195617182)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white"
+            app:title="Your Sound Capsule" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/btnExportAll"
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:layout_marginBottom="16dp"
+                android:text="Export All Data"
+                android:textColor="@color/white"
+                app:backgroundTint="@color/primary_green"
+                app:cornerRadius="24dp" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvSoundCapsule"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:visibility="gone" />
+
+            <TextView
+                android:id="@+id/tvNoData"
+                android:layout_width="match_parent"
+                android:layout_height="200dp"
+                android:gravity="center"
+                android:text="No data available"
+                android:textColor="@color/text_secondary"
+                android:textSize="16sp"
+                android:visibility="gone" />
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_top_songs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_top_songs.xml b/app/src/main/res/layout/activity_top_songs.xml
new file mode 100644
--- /dev/null	(date 1748195617184)
+++ b/app/src/main/res/layout/activity_top_songs.xml	(date 1748195617184)
@@ -0,0 +1,90 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="16dp">
+
+                <TextView
+                    android:id="@+id/tvMonth"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="8dp"
+                    android:text="April 2025"
+                    android:textColor="@color/text_secondary"
+                    android:textSize="14sp" />
+
+                <TextView
+                    android:id="@+id/tvSummary"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginBottom="16dp"
+                    android:text="You played 203 different songs this month."
+                    android:textColor="@color/white"
+                    android:textSize="18sp"
+                    android:textStyle="bold" />
+
+            </LinearLayout>
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvTopSongs"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_month_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_month_detail.xml b/app/src/main/res/layout/activity_month_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617181)
+++ b/app/src/main/res/layout/activity_month_detail.xml	(date 1748195617181)
@@ -0,0 +1,400 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/tvMonthTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="24dp"
+                android:text="April 2025"
+                android:textColor="@color/white"
+                android:textSize="24sp"
+                android:textStyle="bold" />
+
+            <!-- Time Listened Card -->
+            <com.google.android.material.card.MaterialCardView
+                android:id="@+id/cardTimeListened"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:clickable="true"
+                android:focusable="true"
+                app:cardBackgroundColor="@color/card_background"
+                app:cardCornerRadius="12dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:padding="16dp">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Time listened"
+                        android:textColor="@color/text_secondary"
+                        android:textSize="14sp" />
+
+                    <TextView
+                        android:id="@+id/tvTotalMinutes"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="862 minutes"
+                        android:textColor="@color/primary_green"
+                        android:textSize="32sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:id="@+id/tvDailyAverage"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Daily average: 33 min"
+                        android:textColor="@color/text_secondary"
+                        android:textSize="14sp" />
+
+                </LinearLayout>
+
+            </com.google.android.material.card.MaterialCardView>
+
+            <!-- Top Artist and Top Song Row -->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:orientation="horizontal">
+
+                <!-- Top Artist Card -->
+                <com.google.android.material.card.MaterialCardView
+                    android:id="@+id/cardTopArtists"
+                    android:layout_width="0dp"
+                    android:layout_height="120dp"
+                    android:layout_marginEnd="8dp"
+                    android:layout_weight="1"
+                    android:clickable="true"
+                    android:focusable="true"
+                    app:cardBackgroundColor="@color/card_background"
+                    app:cardCornerRadius="12dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:orientation="horizontal"
+                        android:padding="16dp">
+
+                        <ImageView
+                            android:id="@+id/ivTopArtistCover"
+                            android:layout_width="60dp"
+                            android:layout_height="60dp"
+                            android:layout_gravity="center_vertical"
+                            android:scaleType="centerCrop"
+                            android:src="@drawable/ic_music_note" />
+
+                        <LinearLayout
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center_vertical"
+                            android:layout_marginStart="12dp"
+                            android:layout_weight="1"
+                            android:orientation="vertical">
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="Top artist"
+                                android:textColor="@color/text_secondary"
+                                android:textSize="12sp" />
+
+                            <TextView
+                                android:id="@+id/tvTopArtist"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="The Beatles"
+                                android:textColor="@color/white"
+                                android:textSize="14sp"
+                                android:textStyle="bold" />
+
+                            <TextView
+                                android:id="@+id/tvTopArtistPlays"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="12 plays"
+                                android:textColor="@color/text_secondary"
+                                android:textSize="12sp" />
+
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                </com.google.android.material.card.MaterialCardView>
+
+                <!-- Top Song Card -->
+                <com.google.android.material.card.MaterialCardView
+                    android:id="@+id/cardTopSongs"
+                    android:layout_width="0dp"
+                    android:layout_height="120dp"
+                    android:layout_marginStart="8dp"
+                    android:layout_weight="1"
+                    android:clickable="true"
+                    android:focusable="true"
+                    app:cardBackgroundColor="@color/card_background"
+                    app:cardCornerRadius="12dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:orientation="horizontal"
+                        android:padding="16dp">
+
+                        <ImageView
+                            android:id="@+id/ivTopSongCover"
+                            android:layout_width="60dp"
+                            android:layout_height="60dp"
+                            android:layout_gravity="center_vertical"
+                            android:scaleType="centerCrop"
+                            android:src="@drawable/ic_music_note" />
+
+                        <LinearLayout
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center_vertical"
+                            android:layout_marginStart="12dp"
+                            android:layout_weight="1"
+                            android:orientation="vertical">
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="Top song"
+                                android:textColor="@color/text_secondary"
+                                android:textSize="12sp" />
+
+                            <TextView
+                                android:id="@+id/tvTopSong"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="Starboy"
+                                android:textColor="@color/white"
+                                android:textSize="14sp"
+                                android:textStyle="bold" />
+
+                            <TextView
+                                android:id="@+id/tvTopSongArtist"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="The Weeknd"
+                                android:textColor="@color/text_secondary"
+                                android:textSize="12sp" />
+
+                            <TextView
+                                android:id="@+id/tvTopSongPlays"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="15 plays"
+                                android:textColor="@color/text_secondary"
+                                android:textSize="12sp" />
+
+                        </LinearLayout>
+
+                    </LinearLayout>
+
+                </com.google.android.material.card.MaterialCardView>
+
+            </LinearLayout>
+
+            <!-- Day Streak Card -->
+            <com.google.android.material.card.MaterialCardView
+                android:id="@+id/cardDayStreak"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:visibility="gone"
+                app:cardBackgroundColor="@color/card_background"
+                app:cardCornerRadius="12dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal"
+                    android:padding="16dp">
+
+                    <ImageView
+                        android:id="@+id/ivStreakCover"
+                        android:layout_width="80dp"
+                        android:layout_height="80dp"
+                        android:layout_gravity="center_vertical"
+                        android:scaleType="centerCrop"
+                        android:src="@drawable/ic_music_note" />
+
+                    <LinearLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center_vertical"
+                        android:layout_marginStart="16dp"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
+
+                        <TextView
+                            android:id="@+id/tvStreakDays"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="You had a 5-day streak"
+                            android:textColor="@color/white"
+                            android:textSize="16sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/tvStreakSong"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="4dp"
+                            android:text="Loose"
+                            android:textColor="@color/white"
+                            android:textSize="14sp" />
+
+                        <TextView
+                            android:id="@+id/tvStreakArtist"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Daniel Caesar"
+                            android:textColor="@color/text_secondary"
+                            android:textSize="12sp" />
+
+                        <TextView
+                            android:id="@+id/tvStreakDates"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="4dp"
+                            android:text="Mar 21-25, 2025"
+                            android:textColor="@color/text_secondary"
+                            android:textSize="12sp" />
+
+                    </LinearLayout>
+
+                </LinearLayout>
+
+            </com.google.android.material.card.MaterialCardView>
+
+            <!-- Stats Row -->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="24dp"
+                android:orientation="horizontal">
+
+                <LinearLayout
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/tvTotalSongs"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="203 different songs"
+                        android:textColor="@color/white"
+                        android:textSize="16sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Songs Played"
+                        android:textColor="@color/text_secondary"
+                        android:textSize="12sp" />
+
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:gravity="center"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:id="@+id/tvTotalArtists"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="137 artists"
+                        android:textColor="@color/white"
+                        android:textSize="16sp"
+                        android:textStyle="bold" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Artists Listened"
+                        android:textColor="@color/text_secondary"
+                        android:textSize="12sp" />
+
+                </LinearLayout>
+
+            </LinearLayout>
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/btnExport"
+                android:layout_width="match_parent"
+                android:layout_height="48dp"
+                android:text="Export This Month"
+                android:textColor="@color/white"
+                app:backgroundTint="@color/primary_green"
+                app:cornerRadius="24dp" />
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_edit_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_edit_profile.xml b/app/src/main/res/layout/activity_edit_profile.xml
new file mode 100644
--- /dev/null	(date 1748195617178)
+++ b/app/src/main/res/layout/activity_edit_profile.xml	(date 1748195617178)
@@ -0,0 +1,103 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="16dp"
+    android:background="@color/black"
+    tools:context=".ui.profile.EditProfileActivity">
+
+    <TextView
+        android:id="@+id/txtEditProfileTitle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Edit Profile"
+        android:textColor="@color/white"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/imgProfile"
+        android:layout_width="120dp"
+        android:layout_height="120dp"
+        android:layout_marginTop="32dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtEditProfileTitle" />
+
+    <Button
+        android:id="@+id/btnChangePhoto"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:text="Change Photo"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/imgProfile" />
+
+    <TextView
+        android:id="@+id/txtLocationLabel"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:text="Location"
+        android:textColor="@color/white"
+        android:textSize="16sp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/btnChangePhoto" />
+
+    <TextView
+        android:id="@+id/txtCurrentLocation"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:textColor="@color/white"
+        android:text="Detecting location..."
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtLocationLabel" />
+
+    <Button
+        android:id="@+id/btnDetectLocation"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text="Detect Current Location"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/txtCurrentLocation" />
+
+    <Button
+        android:id="@+id/btnChooseLocation"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text="Choose on Map"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/btnDetectLocation" />
+
+    <Button
+        android:id="@+id/btnSaveProfile"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:text="Save Changes"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_time_listened_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_time_listened_detail.xml b/app/src/main/res/layout/activity_time_listened_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617182)
+++ b/app/src/main/res/layout/activity_time_listened_detail.xml	(date 1748195617182)
@@ -0,0 +1,120 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/background_dark">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@color/background_dark"
+            app:titleTextColor="@color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/contentLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/tvMonth"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="April 2025"
+                android:textColor="@color/text_secondary"
+                android:textSize="14sp" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="4dp"
+                android:text="You listened to music for"
+                android:textColor="@color/white"
+                android:textSize="18sp" />
+
+            <TextView
+                android:id="@+id/tvTotalMinutes"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="8dp"
+                android:text="862 minutes"
+                android:textColor="@color/primary_green"
+                android:textSize="32sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="this month."
+                android:textColor="@color/white"
+                android:textSize="18sp" />
+
+            <TextView
+                android:id="@+id/tvDailyAverage"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="16dp"
+                android:layout_marginBottom="32dp"
+                android:text="Daily average: 33 min"
+                android:textColor="@color/text_secondary"
+                android:textSize="16sp" />
+
+            <TextView
+                android:id="@+id/tvChartTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginBottom="16dp"
+                android:text="Daily Chart"
+                android:textColor="@color/white"
+                android:textSize="20sp"
+                android:textStyle="bold"
+                android:visibility="gone" />
+
+            <com.github.mikephil.charting.charts.LineChart
+                android:id="@+id/dailyChart"
+                android:layout_width="match_parent"
+                android:layout_height="250dp"
+                android:visibility="gone" />
+
+        </LinearLayout>
+
+    </androidx.core.widget.NestedScrollView>
+
+    <TextView
+        android:id="@+id/tvNoData"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:text="No data available"
+        android:textColor="@color/text_secondary"
+        android:textSize="16sp"
+        android:visibility="gone"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:visibility="gone" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_recommendation_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_recommendation_detail.xml b/app/src/main/res/layout/activity_recommendation_detail.xml
new file mode 100644
--- /dev/null	(date 1748195617181)
+++ b/app/src/main/res/layout/activity_recommendation_detail.xml	(date 1748195617181)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/black">
+
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/appBarLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@android:color/black"
+        app:elevation="0dp">
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@android:color/black"
+            app:navigationIcon="@drawable/ic_arrow_back"
+            app:navigationIconTint="@android:color/white" />
+
+    </com.google.android.material.appbar.AppBarLayout>
+
+    <androidx.core.widget.NestedScrollView
+        android:id="@+id/scrollContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/appBarLayout"
+        android:layout_above="@+id/miniPlayerContainer"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <ImageView
+                android:id="@+id/ivRecommendationCover"
+                android:layout_width="match_parent"
+                android:layout_height="180dp"
+                android:scaleType="centerCrop"
+                android:layout_marginBottom="12dp"
+                android:background="@drawable/rounded_corner_background"
+                android:contentDescription="@string/recommendation_cover" />
+
+            <TextView
+                android:id="@+id/tvRecommendationTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Daily Mix 1"
+                android:textSize="24sp"
+                android:textStyle="bold"
+                android:textColor="@android:color/white" />
+
+            <TextView
+                android:id="@+id/tvRecommendationDescription"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@android:color/white"
+                android:textSize="14sp"
+                android:layout_marginBottom="12dp"
+                android:text="Based on your listening history" />
+
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/rvRecommendationSongs"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />
+
+        </LinearLayout>
+    </androidx.core.widget.NestedScrollView>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/tubes/purry/data/repository/ChartRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/repository/ChartRepository.kt b/app/src/main/java/com/tubes/purry/data/repository/ChartRepository.kt
new file mode 100644
--- /dev/null	(date 1748195617097)
+++ b/app/src/main/java/com/tubes/purry/data/repository/ChartRepository.kt	(date 1748195617097)
@@ -0,0 +1,18 @@
+package com.tubes.purry.data.repository
+
+import android.util.Log
+import com.tubes.purry.data.model.OnlineSong
+import com.tubes.purry.data.remote.ApiClient
+
+class ChartRepository {
+    private val apiService = ApiClient.apiService
+
+    suspend fun getTopSongs(isGlobal: Boolean, countryCode: String?): List<OnlineSong> {
+        return if (isGlobal) {
+            apiService.getTopSongsGlobal()
+        } else {
+            Log.d("ChartRepository", "Country Code used: $countryCode")
+            apiService.getTopSongsByCountry(countryCode ?: "ID")
+        }
+    }
+}
Index: app/src/main/java/com/tubes/purry/data/repository/AnalyticsRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tubes/purry/data/repository/AnalyticsRepository.kt b/app/src/main/java/com/tubes/purry/data/repository/AnalyticsRepository.kt
new file mode 100644
--- /dev/null	(date 1748195617097)
+++ b/app/src/main/java/com/tubes/purry/data/repository/AnalyticsRepository.kt	(date 1748195617097)
@@ -0,0 +1,187 @@
+package com.tubes.purry.data.repository
+
+import android.util.Log
+import com.tubes.purry.data.local.AnalyticsDao
+import com.tubes.purry.data.local.SongDao
+import com.tubes.purry.data.model.*
+import kotlinx.coroutines.flow.Flow
+import java.text.SimpleDateFormat
+import java.util.*
+
+class AnalyticsRepository(
+    private val analyticsDao: AnalyticsDao,
+    private val songDao: SongDao
+) {
+
+    suspend fun startListeningSession(userId: Int, song: Song): Long {
+        val session = ListeningSession(
+            userId = userId,
+            songId = song.id,
+            songTitle = song.title,
+            artist = song.artist,
+            startTime = System.currentTimeMillis()
+        )
+
+        // INSERT and return the generated ID
+        val sessionId = analyticsDao.insertListeningSession(session)
+        Log.d("AnalyticsRepository", "✅ Created session with ID: $sessionId")
+        return sessionId
+    }
+
+    suspend fun endListeningSession(sessionId: Long, duration: Long) {
+        val session = analyticsDao.getSessionById(sessionId)
+        session?.let {
+            val updatedSession = it.copy(
+                endTime = System.currentTimeMillis(),
+                duration = duration / 1000 // Convert to seconds
+            )
+            analyticsDao.updateListeningSession(updatedSession)
+        }
+    }
+
+    suspend fun getMonthlyAnalytics(userId: Int, month: String): MonthlyAnalytics {
+        val totalSeconds = analyticsDao.getTotalListeningTimeByMonth(userId, month) ?: 0L
+        val totalMinutes = totalSeconds / 60
+
+        val dailyAvg = analyticsDao.getDailyAverageByMonth(userId, month)?.let {
+            (it / 60).toInt()
+        } ?: 0
+
+        val topArtistResult = analyticsDao.getTopArtistByMonth(userId, month)
+        val topSongResult = analyticsDao.getTopSongByMonth(userId, month)
+
+        val totalSongs = analyticsDao.getTotalSongsPlayedByMonth(userId, month)
+        val totalArtists = analyticsDao.getTotalArtistsListenedByMonth(userId, month)
+
+        // Get day streaks
+        val dayStreaks = calculateDayStreaks(userId, month)
+
+        // Get cover art for top song and artist
+        val topSongCover = topSongResult?.let { result ->
+            songDao.getSongByTitleAndArtist(result.songTitle, result.artist)?.coverPath
+        }
+
+        val topArtistCover = topArtistResult?.let { result ->
+            songDao.getSongsByArtist(result.artist).firstOrNull()?.coverPath
+        }
+
+        return MonthlyAnalytics(
+            month = month,
+            totalMinutesListened = totalMinutes,
+            dailyAverage = dailyAvg,
+            topArtist = topArtistResult?.artist,
+            topArtistPlayCount = topArtistResult?.play_count ?: 0,
+            topArtistCover = topArtistCover,
+            topSong = topSongResult?.songTitle,
+            topSongArtist = topSongResult?.artist,
+            topSongPlayCount = topSongResult?.play_count ?: 0,
+            topSongCover = topSongCover,
+            totalSongsPlayed = totalSongs,
+            totalArtistsListened = totalArtists,
+            dayStreaks = dayStreaks
+        )
+    }
+
+    suspend fun getTopSongs(userId: Int, month: String, limit: Int = 10): List<TopSong> {
+        val results = analyticsDao.getTopSongsByMonth(userId, month, limit)
+        return results.mapIndexed { index, result ->
+            val cover = songDao.getSongByTitleAndArtist(result.songTitle, result.artist)?.coverPath
+            TopSong(
+                rank = index + 1,
+                title = result.songTitle,
+                artist = result.artist,
+                cover = cover,
+                playCount = result.play_count
+            )
+        }
+    }
+
+    suspend fun getTopArtists(userId: Int, month: String, limit: Int = 10): List<TopArtist> {
+        val results = analyticsDao.getTopArtistsByMonth(userId, month, limit)
+        return results.mapIndexed { index, result ->
+            val cover = songDao.getSongsByArtist(result.artist).firstOrNull()?.coverPath
+            TopArtist(
+                rank = index + 1,
+                name = result.artist,
+                cover = cover,
+                playCount = result.play_count
+            )
+        }
+    }
+
+    suspend fun getDailyChart(userId: Int, month: String): List<DailyChartData> {
+        val results = analyticsDao.getDailyListeningByMonth(userId, month)
+        return results.map { result ->
+            val day = result.date.split("-").last().toInt()
+            val minutes = (result.total_duration / 60).toInt()
+            DailyChartData(day, minutes)
+        }
+    }
+
+    private suspend fun calculateDayStreaks(userId: Int, month: String): List<DayStreak> {
+        val songsByDate = analyticsDao.getSongsByDateForStreaks(userId, month)
+        val streaks = mutableListOf<DayStreak>()
+
+        // Group by song
+        val songGroups = songsByDate.groupBy { "${it.songTitle}-${it.artist}" }
+
+        for ((songKey, dates) in songGroups) {
+            val sortedDates = dates.sortedBy { it.date }
+            val dateFormat = SimpleDateFormat("yyyy-MM-dd", Locale.getDefault())
+
+            var streakStart = 0
+            var currentStreak = 1
+
+            for (i in 1 until sortedDates.size) {
+                val prevDate = dateFormat.parse(sortedDates[i-1].date)
+                val currDate = dateFormat.parse(sortedDates[i].date)
+
+                if (prevDate != null && currDate != null) {
+                    val daysDiff = ((currDate.time - prevDate.time) / (1000 * 60 * 60 * 24)).toInt()
+
+                    if (daysDiff == 1) {
+                        currentStreak++
+                    } else {
+                        // End of streak, record if >= 2 days
+                        if (currentStreak >= 2) {
+                            val song = sortedDates[streakStart]
+                            val cover = songDao.getSongByTitleAndArtist(song.songTitle, song.artist)?.coverPath
+
+                            streaks.add(DayStreak(
+                                songTitle = song.songTitle,
+                                artist = song.artist,
+                                cover = cover,
+                                startDate = sortedDates[streakStart].date,
+                                endDate = sortedDates[i-1].date,
+                                streakDays = currentStreak
+                            ))
+                        }
+                        streakStart = i
+                        currentStreak = 1
+                    }
+                }
+            }
+
+            // Check final streak
+            if (currentStreak >= 2) {
+                val song = sortedDates[streakStart]
+                val cover = songDao.getSongByTitleAndArtist(song.songTitle, song.artist)?.coverPath
+
+                streaks.add(DayStreak(
+                    songTitle = song.songTitle,
+                    artist = song.artist,
+                    cover = cover,
+                    startDate = sortedDates[streakStart].date,
+                    endDate = sortedDates.last().date,
+                    streakDays = currentStreak
+                ))
+            }
+        }
+
+        return streaks.sortedByDescending { it.streakDays }
+    }
+
+    fun getSessionsByMonth(userId: Int, month: String): Flow<List<ListeningSession>> {
+        return analyticsDao.getSessionsByMonth(userId, month)
+    }
+}
\ No newline at end of file
diff --git a/app.db b/app.db
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_25_05_25_08_04_[Changes]1/shelved.patch
new file mode 100644
